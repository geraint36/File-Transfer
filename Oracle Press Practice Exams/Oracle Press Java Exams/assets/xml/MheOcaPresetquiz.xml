<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
	<book name="MheOcaIq" chapter="" exercisetitle="">
	<presetExamList name="OCA Exam 1">
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="1" id="A 1">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">x = 42</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">x = 43</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">x = 44</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code runs with no output]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The variable <font face="Courier New">x</font> is only in scope within the <font face="Courier New">try</font> code block, not in the <font face="Courier New">catch</font> or <font face="Courier New">finally</font> blocks. (For the exam, get used to those horrible closing brackets: <font face="Courier New">} } }</font>.)<br><br><b>A, B, C</b>, and <b>E </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is this question really about exceptions?<br><br>Reference: Chapter 3: Scope<br><br>Objective: Define the scope of variables. (Objective 1.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="A" QNo="2" id="A 2">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0201q.jpg]]></image><text order="3"><![CDATA[and the command-line invocation:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam01_0202q.jpg]]></image><text order="5"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">we</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">rule</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">we rule</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The <font face="Courier New">main()</font> method can use var-args, and a var-args argument is an array (remember, arrays are zero-based).<br><br><b>A, C, D, </b>and <b>E</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[What does a var-args argument resolve to?<br><br>Reference: Chapter 1: Var-args<br><br>Objective: Create executable Java applications with a main method. (Objective 1.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1" isAttemped="false" userans="" chapter="A" QNo="3" id="A 3">
			<qst><text order="1"><![CDATA[Which are correct source files? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam01_0301c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam01_0302c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam01_0303c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam01_0304c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>correctly declares a package and several imports.<br><br><b>B,</b> <b>C,</b> and <b>D</b> are incorrect. <b>B</b> is incorrect because <font face="Courier New">package</font> must be first, before <font face="Courier New">import</font>s and <font face="Courier New">class</font> declarations. <b>C </b>is incorrect because all imports must precede all classes. <b>D</b> is incorrect because imports must be declared outside of classes.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember that <font face="Courier New">package</font> and <font face="Courier New">import</font> statements apply to all classes in a file.<br><br>Reference: Chapter 1: Source file rules<br><br>Objective: Import other Java packages to make them accessible in your code. (Objective 1.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;7" isAttemped="false" userans="" chapter="A" QNo="4" id="A 4">
			<qst><text order="1"><![CDATA[Which are valid declarations? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">int $x;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">int 123;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">int _123;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">int #dim;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">int %percent;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">int *divide;</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">int central_sales_region_Summer_2005_gross_sales;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> and <b>G</b> are correct because they are legal identifiers.<br><br><b>B,</b> <b>D, E,</b> and <b>F</b> are incorrect.<b> B</b> is incorrect because an identifier can't start with a digit. <b>D,</b> <b>E,</b> and <b>F</b> are incorrect because identifiers must start with <font face="Courier New">$</font>, <font face="Courier New">_</font>, or a letter.]]></text></feedbacks><hint><text order="1"><![CDATA[Focus on what variables can begin with.<br><br>Reference: Chapter 1: Declarations<br><br>Objective: Declare and initialize variables. (Objective 2.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;6" isAttemped="false" userans="" chapter="A" QNo="5" id="A 5">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0501q.jpg]]></image><text order="3"><![CDATA[Which, inserted at <font face="Courier New">// insert code here</font>, will print out <font face="Courier New">1234.56</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">double d = 1234.56;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">double d = _1234.56;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">double d = 1_234.56;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">double d = 1_234_.56;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">double d = 1_234_56;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">double d = 0_1234.5_6;</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">double d = 0_1234._56;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> and <b>F</b> are correct. The underscores are just for readability and are ignored when storing the value in <font face="Courier New">d</font>. In <b>F,</b> the leading zero is ignored.<br><br><b>B,</b> <b>D, E,</b> and <b>G</b> are incorrect. <b>B</b> is incorrect because it will not compile: underscores are not allowed at the beginning or end of a double literal. <b>D</b> and <b>G</b> are incorrect because they will not compile either: underscores are not allowed immediately before or after the decimal point. <b>E</b> is incorrect because, although it does compile, it prints out <font face="Courier New">123456.0</font> rather than <font face="Courier New">1234.56</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Where are underscores disallowed?<br><br>Reference: Chapter 3: Integer literals<br><br>Objective: Declare and initialize variables. (Objective 2.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;6" isAttemped="false" userans="" chapter="A" QNo="6" id="A 6">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0601q.jpg]]></image><text order="3"><![CDATA[Which are included in the output? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">num: 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">num: 5</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">str: a</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">str: ab</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">builder: c*</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">builder: cd*</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. None of the above, because compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> and <b>F</b> are correct. The <font face="Courier New">int</font> and <font face="Courier New">String</font> parameters are passed by value. In <font face="Courier New">changeIt()</font>, they are assigned new values, but the caller stays the same. A reference to the <font face="Courier New">builder</font> object is passed and the object is changed.<br><br><b>B,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which types does Java pass by value, and which does it pass by reference?<br><br>Reference: Chapter 3: Differentiating primitive variables and reference variables<br><br>Objective: Differentiate between object reference variables and primitive variables. (Objective 2.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="7" id="A 7">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">13</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">18</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due to an error on line 6]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due to an error on line 12]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due to an error on line 13]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due to multiple errors]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Class <font face="Courier New">Yup</font> has a static variable called <font face="Courier New">x</font>, and although it should be accessed in a static way, line 4 does compile. The error happens on line 6 because field <font face="Courier New">y</font> is <font face="Courier New">final</font>, which means that its value cannot be changed.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Any variable marked as <font face="Courier New">final</font> can have a value assigned to it only once.<br><br>Reference: Chapter 2: Declare, initialize, and use class members<br><br>Objective: Read or write to object fields. (Objective 2.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="A" QNo="8" id="A 8">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0801q.jpg]]></image><text order="3"><![CDATA[At what point is only a single object eligible for garbage collection?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. After line 8 runs]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. After line 9 runs]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. After line 10 runs]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. After line 11 runs]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Never in this program]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct. The three <font face="Courier New">Lost</font> objects form an island of objects that refer to each other. Before line 11 runs, <font face="Courier New">e1</font> is the last remaining reference to a member of the island. As long as one reference exists, the entire island is safe from the garbage collector (GC), but as soon as the last reference (in this case, <font face="Courier New">e1</font>) is lost, the entire island becomes eligible. So when line 11 executes, the GC eligible count jumps from zero to three.<br><br><b>A, B, C, D, E, </b>and<b> G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is there an island involved?<br><br>Reference: Chapter 3: Garbage collection<br><br>Objective: Explain an object's lifecycle. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="9" id="A 9">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_0901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">I look good! and nice!!!</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">I look good! and nice!!</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">I look good! and nice!</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Ilookgood!andnice!</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception occurs at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. <font face="Courier New">"look "</font> is inserted at index 2 of the sequence, shifting <font face="Courier New">"good! "</font> to the end of it; and the chained call to append right after the insert acts on the value <font face="Courier New">"I look good !"</font>, so <font face="Courier New">"and nice"</font> is inserted right after it. At this point, <font face="Courier New">str</font>'s length is equal to 21. Then, <font face="Courier New">insert</font> is called again on line 5, inserting <font face="Courier New">"!!!"</font> at index 21, which is right after <font face="Courier New">"nice"</font>, because the last "e" is at index 20. (If we attempted to insert a value at index 22, it would result in a <font face="Courier New">StringIndexOutOfBoundsException</font>, which is a <font face="Courier New">RuntimeException</font>.) At this point, <font face="Courier New">str</font>'s length is 24. On line 6, the characters at indexes 22 to 24 are deleted from the sequence. In this case, even though there is nothing at index 24, it removes the characters at indexes 22 and 23.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[The <font face="Courier New">StringBuilder</font> class methods that change the value of the sequence return the current instance, and the first parameter of the <font face="Courier New">delete()</font> method is inclusive, whereas the second one is exclusive.<br><br>Reference: Chapter 5: <font face="Courier New">StringBuilder</font><br><br>Objective: Manipulate data using the <font face="Courier New">StringBuilder</font> class and its methods. (Objective 2.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="10" id="A 10">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">weekbeeeep</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">wbeekeeper</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">weebeekeep</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">weekeeper</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. In line 7, the code attempts to call a <font face="Courier New">StringBuilder</font> method, <font face="Courier New">insert()</font>, on a <font face="Courier New">String</font> object.<br><br><b>A, B, C, D, </b>and<b> F</b> are incorrect based on the logic described in the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember your signatures.<br><br>Reference: Chapter 5: Strings<br><br>Objective: Create and manipulate strings. (Objective 2.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="11" id="A 11">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">aiko</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">aiko aiko</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">aiko aiko ahnay</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">aiko aiko anhay shockamal</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">AIKO AIKO AHNAY SHOCKAMAL</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct. Lines 7 and 8 create new strings, but they are lost because they have no reference variables.<br><br><b>A, B, D, E, </b>and <b>F </b>are incorrect based on the logic described in the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the most important way that strings are not like <font face="Courier New">StringBuilder</font>s.<br><br>Reference: Chapter 5: Strings<br><br>Objective: Create and manipulate strings. (Objective 2.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="12" id="A 12">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">3</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">4</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">5</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">6</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. The key points are that <font face="Courier New">^</font> (XOR) is true only if exactly one of the expressions is true and that an <font face="Courier New">!</font> in front of an expression reserves its value.<br><br><b>A, B, D, E, </b>and<b> F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Two phrases, "exclusive or" and "inverse".<br><br>Reference: Chapter 4: Operators<br><br>Objective: Use Java operators. (Objective 3.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="13" id="A 13">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">beta</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">alpha</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">alpha beta</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. No output is produced]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. In the second <font face="Courier New">if</font> test, the leftmost expression is an assignment, not a comparison. Once <font face="Courier New">b1</font> has been set to <font face="Courier New">false</font>, the remaining tests are all false.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the difference between <font face="Courier New">|</font> and <font face="Courier New">||</font>, as well as the difference between <font face="Courier New">=</font> and <font face="Courier New">==</font>.<br><br>Reference: Chapter 4: Operators<br><br>Objective: Use Java operators. (Objective 3.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="14" id="A 14">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">29 29 29 29</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">17 17 17 17</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">17 -1 29 -7</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">17 29 29 -7</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-1 -1 -7 -7</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">3456</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. The operations in the inner-most parentheses are performed first, then operator precedence is the next tie-breaker.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above. <b>G</b> is incorrect, because although not recommended, a class name can start with a lowercase letter.]]></text></feedbacks><hint><text order="1"><![CDATA[Multiple and division are higher precedence than addition and subtraction.<br><br>Reference: Chapter 4: Operators<br><br>Objective: Use parentheses to override operator precedence. (Objective 3.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="15" id="A 15">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-134</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-1234</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-34</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-3</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. None of the above, because compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. While <font face="Courier New">a</font> and <font face="Courier New">b</font> have the same value, <font face="Courier New">==</font> compares object references and not values. Therefore, 1 is not output; and 2 is not output because <font face="Courier New">b</font> and <font face="Courier New">c</font> don't even have the same value, let alone the same object. The value 3 is output because <font face="Courier New">int</font> is a primitive, so <font face="Courier New">==</font> does compare values; and 4 is output because we've assigned <font face="Courier New">b</font> to be the same as <font face="Courier New">c</font>, and now object equality does pass.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does <font face="Courier New">==</font> mean for objects?<br><br>Reference: Chapter 4: Equality operators<br><br>Objective: Test equality between strings and other objects using <font face="Courier New">==</font> and <font face="Courier New">equals()</font>. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="16" id="A 16">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-1234</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-124</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-24</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-234</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. None of the above, because compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The value 1 is not output because <font face="Courier New">a</font> and <font face="Courier New">b</font> are different objects; therefore, object equality will fail. The value 2 is output because <font face="Courier New">b</font> and <font face="Courier New">c</font> both refer to the same object; and 3 and 4 are output since the <font face="Courier New">equals()</font> method checks the <font face="Courier New">id</font>. Note that the code should implement <font face="Courier New">hashCode</font> to be correct. Equality will work without <font face="Courier New">hashCode</font> implemented, but other operations may not.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does <font face="Courier New">==</font> mean for objects?<br><br>Reference: Chapter 4: Equality operators<br><br>Objective: Test equality between strings and other objects using <font face="Courier New">==</font> and <font face="Courier New">equals()</font>. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="17" id="A 17">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">OF(11) is: 45</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">OF(11) is: 56</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">OF(11) is: 89</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">OF(11) is: 111</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">if</font> statement is illegal. The <font face="Courier New">if-else-else</font> must be changed to <font face="Courier New">if-else if-else</font>, which would result in OF(11) is: 111.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[How do you handle multiple <font face="Courier New">if</font>s?<br><br>Reference: Chapter 6: <font face="Courier New">if</font> statements<br><br>Objective: Create <font face="Courier New">if</font> and <font face="Courier New">if-else</font> constructs. (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;6" isAttemped="false" userans="" chapter="A" QNo="18" id="A 18">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1801q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. As it stands, the code does NOT compile]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. If lines x and y are uncommented, the code compiles]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. As it stands, the output is: <font face="Courier New">3</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. As it stands, the output is: <font face="Courier New">2 3</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. As it stands, the code runs without output]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. If lines x and y are uncommented the output is: <font face="Courier New">3</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. If lines x and y are uncommented the output is: <font face="Courier New">3 4</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, C,</b> and <b>F</b> are correct. When using <font face="Courier New">else-if</font>'s a closing <font face="Courier New">else</font> is optional, and once a "true" test is encountered, subsequent tests are skipped.<br><br><b>A</b> is incorrect because the code compiles. <b>D </b>and <b>E</b> are incorrect based on the above. <b>G</b> is incorrect because once an <font face="Courier New">else-if</font> is true, any remaining <font face="Courier New">else-if</font>'s or <font face="Courier New">else</font>'s will be ignored.]]></text></feedbacks><hint><text order="1"><![CDATA[Do you have to have an <font face="Courier New">else</font> after an <font face="Courier New">else if</font>?<br><br>Reference: Chapter 6: <font face="Courier New">if</font> statements<br><br>Objective: Use <font face="Courier New">if </font>and <font face="Courier New">if-else</font> constructs. (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="19" id="A 19">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_1901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2 1 0 def</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">2 1 def 2 0 1 def 2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">0 0 1 def 2</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">2 1 0 1 def 2</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. When z == 0, <font face="Courier New">case x-2</font> is matched. When z == 1, <font face="Courier New">case x-1</font> is matched and then the <font face="Courier New">break</font> occurs. When z == 2, <font face="Courier New">case x</font>, then <font face="Courier New">x-1</font> is matched. When z == 3, default, then <font face="Courier New">x-2</font> is matched. The rules for default are that it will fall through from above like any other case (for instance, when z == 2) and that it will match when no other cases match (for instance, when z == 3).<br><br><b>A, B, C, E, </b>and<b> F</b> are incorrect based on the program logic described in the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[How does fall-through work in a <font face="Courier New">switch</font> statement?<br><br>Reference: Chapter 6: <font face="Courier New">switch</font> statements<br><br>Objective: Use a <font face="Courier New">switch</font> statement. (Objective 3.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="20" id="A 20">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. a b]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. b c]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. a b c]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. null b c]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. b c null]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails at line(s) x, y, and/or z]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. All of the code is valid; make sure you're familiar with these code constructs! Both arrays and <font face="Courier New">ArrayList</font>s have indexes that are zero-based. Because the first <font face="Courier New">for</font> loop started at 1, the first element of the array (element 0), did not have a <font face="Courier New">String</font> added to it.<br><br><b>A, B, C, E, F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Do both arrays and <font face="Courier New">ArrayList</font>s use the same base index?<br><br>Reference: Chapter 5: <font face="Courier New">ArrayList</font><br><br>Objectives: Use arrays and <font face="Courier New">ArrayList</font>s. (Objectives 4.1 and 4.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4" isAttemped="false" userans="" chapter="A" QNo="21" id="A 21">
			<qst><text order="1"><![CDATA[Which will declare an array and initialize it with four numbers? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">int x [] = {1,0,2,0};</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">int [] a = (0,1,2,3);</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">int [4] array;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">int array [] = new int [4];</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">int a [] = new int(4);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">array a = new array(4);</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>D</b> are correct. Both are legal ways to declare and initialize an array with four elements.<br><br><b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are invalid attempts to declare and initialize an array. None of them will compile.]]></text></feedbacks><hint><text order="1"><![CDATA[Arrays use <font face="Courier New">[]</font>, array isn't a keyword, and two answers are correct.<br><br>Reference: Chapter 5: Arrays<br><br>Objective: Declare, instantiate, initialize, and use a one-dimensional array. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;5;6" isAttemped="false" userans="" chapter="A" QNo="22" id="A 22">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2201q.jpg]]></image><text order="3"><![CDATA[Which of the following lines of code could be inserted at line 7 and still allow the code to compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">b2[1][1] = big;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">b[1][0] = b3;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">b2[0][1][1] = b;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">b2[0][2][1] = b[1][0];</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">b2[1][1][0][1] = b[1][0];</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">b2[1][1] = b;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, E,</b> and <b>F</b> are correct. This question has to do with what you can assign to an array reference variable. The key is to get the dimensions right. For example, if an array is declared as a two-dimensional array, you can't assign a one-dimensional array to a two-dimensional array reference.<br><br><b>C</b> and <b>D</b> are incorrect. <b>C</b> is incorrect because it tries to assign a two-dimensional array where a one-dimensional array is expected. <b>D</b> is incorrect because it tries to assign a primitive short where a short array (one dimension) is expected.]]></text></feedbacks><hint><text order="1"><![CDATA[Multidimensional arrays are arrays of arrays.<br><br>Reference: Chapter 5: Array reference assignments for multidimensional arrays<br><br>Objective: Declare, instantiate, initialize, and use a multi-dimensional array. (Objective 4.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="A" QNo="23" id="A 23">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation succeeds]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation fails due only to an error on line 3]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due only to an error on line 4]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due only to an error on line 5]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due to errors on lines 3 and 5]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due to errors on lines 3, 4, and 5]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct because all of these array declarations are legal. Lines 4 and 5 demonstrate that arrays are objects.<br><br><b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect because this code compiles.]]></text></feedbacks><hint><text order="1"><![CDATA[It might help to remember that all arrays are objects.<br><br>Reference: Chapter 5: Arrays<br><br>Objective: Declare, instantiate, initialize, and use a multi-dimensional array. (Objective 4.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="A" QNo="24" id="A 24">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">[2]</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">[1, 2]</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">[1, 1, 2]</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails because you can't remove elements from a list]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails because you can't add duplicates to a list]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. A runtime exception occurs because you can't add duplicates to a list]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. A runtime exception occurs because you can't remove elements from a list]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. Lists may contain duplicates, so 1 is added twice, followed by 2. The <font face="Courier New">remove()</font> method only removes a single object from the list.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Can a list have unique elements?<br><br>Reference: Chapter 5: <font face="Courier New">ArrayList</font>s<br><br>Objective: Declare and use an <font face="Courier New">ArrayList</font>. (Objective 4.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="A" QNo="25" id="A 25">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">3</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">5</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">6</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. The program flows as follows: <font face="Courier New">k</font> will be incremented after the <font face="Courier New">while</font> loop is entered, and then <font face="Courier New">k</font> will be changed to 2 when the <font face="Courier New">for</font> loop is entered. The <font face="Courier New">if</font> statement evaluates to <font face="Courier New">false</font>, and the <font face="Courier New">continue</font> statement is never reached. The <font face="Courier New">break</font> statement tells the JVM to break out of the outer loop, at which point <font face="Courier New">k</font> is printed and the fragment is done.<br><br><b>B, C, </b>and<b> D</b> are incorrect based on the program logic just described.]]></text></feedbacks><hint><text order="1"><![CDATA[What is a code block?<br><br>Reference: Chapter 6: <font face="Courier New">while</font> loops<br><br>Objective: Create and use <font face="Courier New">while</font> loops. (Objective 5.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="A" QNo="26" id="A 26">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Yes: 0</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Yes: 2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">No: 0</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Yes: 0 Yes: 1 Yes: 2</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The loop never ends]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. The <font face="Courier New">for</font> loop is executed twice. In the first iteration (when <font face="Courier New">i</font> is equal to 0), the expression on line 4 evaluates to <font face="Courier New">false</font>, but because of the prefix decrement operator, <font face="Courier New">i</font> is immediately decremented by 1, then compared to 0, so the first condition is <font face="Courier New">false</font>. The second condition is also <font face="Courier New">false</font>. The expression on line 7 evaluates to <font face="Courier New">false</font> because &#8211;1 modulus 2 is not equal to 0, and right after this comparison <font face="Courier New">i</font> is equal to 0 again because of the postfix increment operator. In the second iteration, <font face="Courier New">i</font> is equal to 1, and then the expression on line 4 evaluates to <font face="Courier New">true</font> because <font face="Courier New">i</font> is immediately decremented by 1, which is when it is equal to 0 and is compared to 0, evaluating to <font face="Courier New">true</font>. Then <font face="Courier New">"Yes &#8211; 0"</font> is printed and the loop is broken. Although the <font face="Courier New">for</font> loop might look weird, it is valid because the conditional test expression has to be any valid boolean expression, and <font face="Courier New">true | false</font> is a valid boolean expression that evaluates to <font face="Courier New">true</font>.<br><br><b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider operand precedence, and remember that the basic <font face="Courier New">for</font> loop requires any valid boolean expression.<br><br>Reference: Chapter 6: The <font face="Courier New">for</font> loop<br><br>Objective: Create and use <font face="Courier New">for</font> loops including the enhanced <font face="Courier New">for</font> loop. (Objective 5.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="A" QNo="27" id="A 27">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">5 3</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">5 3 6 3</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">5 3 6 4</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The <font face="Courier New">while</font> loop's boolean expression will be false the second time it's evaluated.<br><br><b>A,</b> <b>C, D,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because the boolean expression on line 6 evaluates to <font face="Courier New">true</font> in the first iteration. This is because the first condition (<font face="Courier New">i++ == 5</font>) is <font face="Courier New">true</font> (the value of <font face="Courier New">i</font> is compared to 5 and then incremented), so the <font face="Courier New">do</font> loop is executed at least two times. <b>C</b> is incorrect because the first condition of the expression is <font face="Courier New">true</font> in the first iteration, and the operand in the expression is the conditional <font face="Courier New">or</font>, and therefore the second part is not executed, so <font face="Courier New">j</font> is not incremented; <font face="Courier New">j</font> is only incremented in the second iteration, but since the whole expression evaluates to <font face="Courier New">false</font>, the <font face="Courier New">do</font> loop exits. <b>D</b> and <b>E</b> are incorrect because the code compiles and an exception isn't thrown at runtime.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider operand precedence.<br><br>Reference: Chapter 6: The <font face="Courier New">do</font>/<font face="Courier New">while</font> loop<br><br>Objective: Create and use <font face="Courier New">do</font>/<font face="Courier New">while</font> loops. (Objective 5.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4;5;6" isAttemped="false" userans="" chapter="A" QNo="28" id="A 28">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The enhanced <font face="Courier New">for</font> loop requires a boolean (conditional-test) expression]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. An inner loop inherits the name of the outer loop that contains it if the outer loop is labeled]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">continue</font> statement only applies to basic <font face="Courier New">for</font> and enhanced <font face="Courier New">for</font> loops]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Any kind of loop can be labeled]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">do</font> loop is guaranteed to be executed at least once]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An unlabeled <font face="Courier New">break</font> statement always terminates the loop that contains it]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D,</b> <b>E,</b> and <b>F</b> are correct.<br><br><b>A,</b> <b>B,</b> and <b>C</b> are incorrect. <b>A</b> is incorrect because it is the basic <font face="Courier New">for</font> loop that requires a boolean expression. <b>B</b> is incorrect because each loop is independent, so there is no such inheritance. <b>C</b> is incorrect because the <font face="Courier New">continue</font> statement applies to all kinds of loops.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider loop constructs.<br><br>Reference: Chapter 6: Loops<br><br>Objective: Compare loop constructs. (Objective 5.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="29" id="A 29">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_2901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">8</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">8 7</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">8 7 6</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. A labeled <font face="Courier New">continue</font> works only with loops. In this case, although the label is legal, it is not a label on a loop statement&#8212;it's a label on an <font face="Courier New">if</font> statement.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Where can labeled <font face="Courier New">continue</font> statements be used?<br><br>Reference: Chapter 6: <font face="Courier New">break</font> and <font face="Courier New">continue</font><br><br>Objective: Use <font face="Courier New">break</font> and <font face="Courier New">continue</font>. (Objective 5.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="A" QNo="30" id="A 30">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">3</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">4</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>is correct. The program flows as follows: <font face="Courier New">I</font> will be incremented after the <font face="Courier New">while</font> loop is entered, and then <font face="Courier New">I</font> will be incremented (by zero) when the <font face="Courier New">for</font> loop is entered. The <font face="Courier New">if</font> statement evaluates to <font face="Courier New">false</font>, and the <font face="Courier New">continue</font> statement is never reached. The <font face="Courier New">break</font> statement tells the JVM to break out of the outer loop, at which point <font face="Courier New">I</font> is printed and the fragment is done.<br><br><b>B, C, D, E, </b>and <b>F </b>are incorrect based on the program logic just described.]]></text></feedbacks><hint><text order="1"><![CDATA[To which loop does the <font face="Courier New">break</font> statement apply?<br><br>Reference: Chapter 6: <font face="Courier New">break</font> and <font face="Courier New">continue</font><br><br>Objective: Use <font face="Courier New">break</font> and <font face="Courier New">continue</font>. (Objective 5.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="31" id="A 31">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation;OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">true true</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">false true</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">true false</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">false false</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Arrays are objects so the cast is valid. Arguments can be objects, and arrays can be returned from methods. Because class <font face="Courier New">Punt</font> did NOT override the <font face="Courier New">equals() </font>method, the <font face="Courier New">equals() </font>test is <font face="Courier New">false</font>, and because we're comparing two different <font face="Courier New">Punt</font> objects, the <font face="Courier New">==</font> test is <font face="Courier New">false</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What Java things are NOT objects?<br><br>Reference: Chapter 2: return types<br><br>Objectives: Create methods with arguments and return values. (Objective 6.1) Determine when casting is necessary. (Objective 7.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="A" QNo="32" id="A 32">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam01_3201c.jpg]]></image></option>
				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam01_3202c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam01_3203c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam01_3204c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam01_3205c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam01_3206c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. Two methods are called. Even though they are on the same line, Java runs them in order. Since <font face="Courier New">print()</font> is called instead of <font face="Courier New">println()</font>, the output is on one line.<br><br><b>A,</b> <b>C, D, E,</b> and <b>F</b> are incorrect. <b>A,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the above. <b>F</b> is incorrect because <font face="Courier New">main()</font> is a static method cannot call an instance method without creating an instance object.]]></text></feedbacks><hint><text order="1"><![CDATA[In what order do methods get called?<br><br>Reference: Chapter 2: Methods<br><br>Objective: Create methods with arguments and return values. (Objective 6.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="A" QNo="33" id="A 33">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-s</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-ss</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-sss</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-ssss</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-ssssss</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F </b>is correct. The <font face="Courier New">go()</font> method is declared twice (with the same signature)&#8212;once as a static method, and once as an instance method. The two <font face="Courier New">init</font> blocks are legal.<br><br><b>A, B, C, D, </b>and <b>E </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Sort out the methods from the <font face="Courier New">init</font> blocks.<br><br>Reference: Chapter 1: Static members<br><br>Objective: Apply the <font face="Courier New">static</font> keyword to method and fields. (Objective 6.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="34" id="A 34">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3401q.jpg]]></image><text order="3"><![CDATA[with the command-line invocation:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam01_3402q.jpg]]></image><text order="5"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">32</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">33</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">34</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Do you know why compilation fails? It's not because of the final modifiers. It's because the second invocation of <font face="Courier New">go()</font> is made from a static method.<br><br><b>A, B, C, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Double-check the modifiers.<br><br>Reference: Chapter 1: Static members<br><br>Objective: Apply the <font face="Courier New">static</font> keyword to method and fields. (Objective 6.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;4" isAttemped="false" userans="" chapter="A" QNo="35" id="A 35">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3501q.jpg]]></image><text order="3"><![CDATA[Which statement(s), inserted at line 6, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Flower getType() { return this; }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">String getType() { return "this"; }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Plant getType() { return this; }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Tulip getType() { return new Tulip(); }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> and <b>D</b> are correct. <b>A</b> and <b>D</b> are examples of covariant returns; that is, <font face="Courier New">Flower</font> and <font face="Courier New">Tulip</font> are both subtypes of <font face="Courier New">Plant</font>.<br><br><b>B</b> is incorrect because <font face="Courier New">String</font> is not a subtype of <font face="Courier New">Plant</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[As of Java 5, there is a new type of return that is legal.<br><br>Reference: Chapter 2: Covariant returns<br><br>Objective: Create an overloaded method. (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="A" QNo="36" id="A 36">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">many</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">a few</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The output is not predictable]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The var-args declaration is correct, but remember that a var-args method will be chosen only if a fixed argument method is not available.<br><br><b>A, C, D, </b>and<b> E</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Typically, the most precise match is used.<br><br>Reference: Chapter 1: Var-args<br><br>Objective: Create an overloaded method. (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="37" id="A 37">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Niki</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">kitty</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Niki kitty</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">kitty Niki</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Because Feline does NOT have a no-arg constructor, Kitty's constructor must start with a call to <font face="Courier New">super()</font> and pass a <font face="Courier New">String</font>.<br><br><b>A, B, C, D, </b>and<b> F </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is a no-arg constructor necessary?<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Differentiate between default and user-defined constructors. (Objective 6.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="38" id="A 38">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">6</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">7</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">8</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">9</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. <font face="Courier New">Uber</font>'s constructor's call to this is looking for a no-arg constructor that doesn't exist.<br><br><b>A, B, C, D, </b>and<b> F</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the rules for no-arg constructors.<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Create and overload constructors. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="39" id="A 39">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_3901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">int</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">long</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">no-arg</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">no-arg int long</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. No output is produced]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The class elements declared in lines 5, 8, and 12 are badly named methods, not constructors. The default constructor runs with no output, and these methods are never called.<br><br><b>A, B, C, D, F, </b>and<b> G</b> are incorrect because of the logic just described.]]></text></feedbacks><hint><text order="1"><![CDATA[What's true about constructors?<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Create and overload constructors. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="A" QNo="40" id="A 40">
			<qst><text order="1"><![CDATA[Given three files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4001q.jpg]]></image><text order="3"><![CDATA[Which method(s), inserted at <font face="Courier New">"// insert code here"</font>, will allow all three files to compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">void go() { System.out.println("a.go"); }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public void go() { System.out.println("a.go"); }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">private void go() { System.out.println("a.go"); }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">protected void go() { System.out.println("a.go"); }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. None of these]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The public access modifier is the only one that allows code from outside a package to access methods in a package&#8212;regardless of inheritance.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember that this example has both package <i>and</i> inheritance considerations.<br><br>Reference: Chapter 1: Access modifiers<br><br>Objective: Apply access modifiers. (Objective 6.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="41" id="A 41">
			<qst><text order="1"><![CDATA[Given two files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">25</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">30</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">36</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Because the static members in <font face="Courier New">Stuff</font> are not marked public, <font face="Courier New">User</font> cannot see them (despite the static imports).<br><br><b>A, B, C, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Double-check the access modifiers.<br><br>Reference: Chapter 1: Access modifiers<br><br>Objective: Apply access modifiers. (Objective 6.6)]]></text></hint> 
		</question>
		<question qtype="Multiple Selection" ans="2;3;4" isAttemped="false" userans="" chapter="A" QNo="42" id="A 42">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Encapsulation is achieved by making all members of a class accessible with public access]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The key benefit of encapsulation is that it is possible to change implementation details of a class without breaking external code that uses it]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Instance variables should be as protected as possible (ideally with private access)]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. It is not necessary to know any implementation detail to deal with well-encapsulated code]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Encapsulation is the same thing as polymorphism]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>C,</b> and <b>D</b> are correct.<br><br><b>A</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because if all members of a class are public, there is a huge risk in breaking other code that uses it when changing implementation details; this is a characteristic of lack of encapsulation. For example, if class A has a public instance variable called <font face="Courier New">size</font> and there are other classes that access it directly, if this variable is renamed, the other classes that access it directly would now be broken! Another characteristic of lack of encapsulation in this case is that, externally, we know that class A has a variable called <font face="Courier New">size</font>, so we know implementation details about class A. <b>E</b> is incorrect because encapsulation and polymorphism are not the same thing: encapsulation is the benefit achieved by keeping implementation details hidden from external code (that is, out of a class's public API) and only providing access to what should be accessed externally via accessor methods, and polymorphism is a characteristic of object orientation that allows a reference type to assume multiple different forms at runtime.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider encapsulation rules and the concept of polymorphism.<br><br>Reference: Chapter 2: Encapsulation<br><br>Objective: Apply encapsulation principles to a class (Objective 6.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="43" id="A 43">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">343 340 340</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">343 340 342</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">343 341 342</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">343 341 340</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">343 341 343</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. There are three different <font face="Courier New">long</font> variables named <font face="Courier New">tooth</font>. Remember that you can apply the <font face="Courier New">final</font> modifier to local variables, but in this case the two versions of <font face="Courier New">tooth</font> marked <font face="Courier New">final</font> are not changed. The only <font face="Courier New">tooth</font> whose value changes is the one <i>not</i> marked <font face="Courier New">final</font>. (This program demonstrates a bad practice known as <i>shadowing</i>.)<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[In this code, how many different variables have the same name?<br><br>Reference: Chapter 3: Passing object references<br><br>Objective: Determine the effect upon object references and primitive values when they are passed into methods that change the values. (Objective 6.8)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="44" id="A 44">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">true true</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">false true</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">true false</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">false false</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Line 7 attempts to change the object that <font face="Courier New">f1</font> refers to, but this is illegal because <font face="Courier New">f1</font> is final.<br><br><b>A, B, C, D, </b>and<b> F</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Double-check the modifiers.<br><br>Reference: Chapter 3: Passing object references<br><br>Objective: Determine the effect upon object references and primitive values when they are passed into methods that change the values. (Objective 6.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4" isAttemped="false" userans="" chapter="A" QNo="45" id="A 45">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Private methods cannot be overridden in subclasses]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. All classes in Java can extend at most one class]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. All interfaces in Java can extend at most one interface]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. All interfaces in Java can extend more than one interface]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. It is possible to override methods in a class without extending another class]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. It is possible to extend a class that has default access in a package different from the one in which it is declared]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> and <b>D</b> are correct.<br><br><b>C,</b> <b>E,</b> and <b>F</b> are incorrect. <b>C</b> is incorrect because, unlike classes, an interface in Java can extend more than one interface. <b>E</b> is incorrect because overriding methods implies inheritance. (Remember that, even if a class does not explicitly extend another class, it is implicitly extending <font face="Courier New">Object</font>.) An overriding method (in the subclass) must have the same name, number, type of parameters, and return type as the method being overridden (in the superclass). It is, however, possible to overload methods in a class without having it extend another class. <b>F</b> is incorrect because it is only possible to extend a class that has default access in the same package in which it is declared.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider inheritance rules.<br><br>Reference: Chapter 2: Interfaces<br><br>Objective: Implement inheritance (Objective 7.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="A" QNo="46" id="A 46">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">X never, ever marks the spot</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Y never, ever marks the spot</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Z never, ever marks the spot</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">XYZ never, ever marks the spot</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">ZYX never, ever marks the spot</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Calling an overridden method always invokes the method definition that is "nearest" to the class instance itself. Here, class Z has its own definition of <font face="Courier New">markTheSpot()</font>, and therefore that is the method that's invoked.<br><br><b>A, B, D, E, F, </b>and<b> G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is the invocation polymorphic?<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Develop code that demonstrates the use of polymorphism. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2" isAttemped="false" userans="" chapter="A" QNo="47" id="A 47">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4701q.jpg]]></image><text order="3"><![CDATA[Which, inserted at line 9, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Beagle b2 = (Beagle) dog1;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Beagle b3 = (Beagle) dog2;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Beagle b4 = dog2;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. None of the these]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>B</b> are correct. However, at runtime, <b>A</b> will throw a <font face="Courier New">ClassCastException</font> because <font face="Courier New">dog1</font> refers to a <font face="Courier New">Dog</font> object, which can't necessarily do <font face="Courier New">Beagle</font> stuff.<br><br><b>C</b> and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Code that compiles might still throw an exception.<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Develop code that demonstrates the use of polymorphism (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5" isAttemped="false" userans="" chapter="A" QNo="48" id="A 48">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4801q.jpg]]></image><text order="3"><![CDATA[Which, inserted independently at line 10, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">A b = new A();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">A b = new B();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">A b = new C();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">B b = new A();</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">B b = new B();</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">B b = new C();</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">C b = new C();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Method <font face="Courier New">say</font>, taking a <font face="Courier New">String</font> as parameter, is only available in class B, so the reference type has to be B. Notice that C extends A, not B. Since no other classes extend class B, only <b>E</b> compiles.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[It is only statically safe to call a method on an object if this method is available in the reference type.<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Differentiate between the type of a reference and the type of an object. (Objective 7.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5;7" isAttemped="false" userans="" chapter="A" QNo="49" id="A 49">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_4901q.jpg]]></image><text order="3"><![CDATA[and the following fragments:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam01_4902q.jpg]]></image><text order="5"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. All fragments compile successfully]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Two of them will not compile]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Three of them will not compile]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Two of them will throw <font face="Courier New">ClassCastException</font> at runtime]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Three of them will throw <font face="Courier New">ClassCastException</font> at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. One of them will be executed successfully]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Two of them will be executed successfully]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C,</b> <b>E,</b> and <b>G</b> are correct. <b>C</b> is correct because fragments <font face="Courier New">F4</font>, <font face="Courier New">F7</font>, and <font face="Courier New">F8</font> will not compile, as class <font face="Courier New">FancyCar</font> doesn't have method <font face="Courier New">turn</font> in its API, and class <font face="Courier New">Car</font> doesn't have methods <font face="Courier New">turn</font> and <font face="Courier New">breakSmoothly</font> in its API. <b>E</b> is correct because fragments <font face="Courier New">F1</font>, <font face="Courier New">F2</font>, and <font face="Courier New">F3</font> will throw a <font face="Courier New">ClassCastException</font> at runtime, as the <font face="Courier New">FancyCar</font> class doesn't pass the IS-A test when tested against <font face="Courier New">Breakable</font> or <font face="Courier New">SuperFancyCar</font>. (That is, <font face="Courier New">SuperFancyCar</font> IS-A <font face="Courier New">FancyCar</font>, but not the opposite.) <b>G</b> is correct because fragments <font face="Courier New">F5</font> and <font face="Courier New">F6</font> will be executed successfully.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[It only makes sense to cast the reference of an object to another static type if the object passes the IS-A test when tested against the other type.<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Determine when casting is necessary. (Objective 7.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="A" QNo="50" id="A 50">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_5001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">42</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">4241</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">4242</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. An exception is thrown at runtime]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails only due to an error at line #1]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails only due to an error at line #2]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails due to errors at both lines #1 and #2]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F </b>is correct. The <font face="Courier New">super</font> invocation can't be used to access a parent's parent.<br><br><b>A, B, C, D, E, </b>and <b>G </b>are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Can you access a grandparent class via <font face="Courier New">super()</font>?<br><br>Reference: Chapter 2: Overriding<br><br>Objective: Use <font face="Courier New">super</font> and <font face="Courier New">this</font> to access objects and constructors. (Objective 7.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="A" QNo="51" id="A 51">
			<qst><text order="1"><![CDATA[Which declare a compilable <font face="Courier New">abstract</font> class? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">public abstract class Canine { public void speak(); }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public abstract class Canine { public void speak() { } }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">public class Canine { public abstract void speak(); }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">public class Canine abstract { public abstract void speak(); }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct because <font face="Courier New">abstract</font> classes don't have to have any <font face="Courier New">abstract</font> methods.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because <font face="Courier New">abstract</font> methods must be marked as such. <b>C</b> is incorrect because you can't have an <font face="Courier New">abstract</font> method unless the class is <font face="Courier New">abstract</font>. <b>D</b> is incorrect because the keyword <font face="Courier New">abstract</font> must come before the class keyword.]]></text></feedbacks><hint><text order="1"><![CDATA[Where are <font face="Courier New">abstract</font> methods legal, are they required, and what do they look like?<br><br>Reference: Chapter 1: Declarations<br><br>Objective: Use <font face="Courier New">abstract</font> classes and interfaces (Objective 7.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;5" isAttemped="false" userans="" chapter="A" QNo="52" id="A 52">
			<qst><text order="1"><![CDATA[Which are valid declarations within an interface? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">static long shanks = 343;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">protected static short timer = 22;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">private short hop = 23;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">final int stuffIt(short top);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">public void doMore(long bow);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">static byte doMore(double trouble);</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>E</b> are correct because they are valid interface declarations.<br><br><b>B,</b> <b>C, D,</b> and <b>F</b> are incorrect. <b>B</b> and <b>C</b> are incorrect because interface variables cannot be protected or private. <b>D</b> and <b>F</b> are incorrect because interface methods cannot be final or static.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the defaults.<br><br>Reference: Chapter 2: Implementing interfaces<br><br>Objective: Use <font face="Courier New">abstract</font> classes and interfaces. (Objective 7.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3" isAttemped="false" userans="" chapter="A" QNo="53" id="A 53">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_5301q.jpg]]></image><text order="3"><![CDATA[and the following three possible changes:<br><br>C1. Declare that <font face="Courier New">main()</font> throw an <font face="Courier New">Exception</font><br>C2. Declare that <font face="Courier New">Ping.getInt()</font> throw an <font face="Courier New">Exception</font><br>C3. Wrap the invocation of <font face="Courier New">getInt()</font> in a <font face="Courier New">try/catch</font> block<br><br>Which change(s) allow the code to compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Just C1 is sufficient]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Just C2 is sufficient]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Just C3 is sufficient]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Both C1 and C2 are required]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Both C1 and C3 are required]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Both C2 and C3 are required]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. All three changes are required]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>C</b> are correct. Remember that line 4 is making a polymorphic call so the compiler knows that an exception might be thrown. If C1 is implemented the exception has been sufficiently declared, and if C3 is implemented the exception has been sufficiently handled. C2 is not necessary in either case.<br><br><b>B,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the minimum you need to do to deal with a possible exception?<br><br>Reference: Chapter 6: Specific exceptions<br><br>Objective: Differentiate among checked exceptions, <font face="Courier New">RuntimeException</font>s, and errors. (Objective 8.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="54" id="A 54">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_5401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation fails]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. An exception is thrown at runtime]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Hello world</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Hello world Finally executing</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Finally executing Hello world</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct because <font face="Courier New">finally</font> clauses are always executed. The program will first execute the <font face="Courier New">try</font> block, printing <font face="Courier New">Hello world</font>, and will then execute the <font face="Courier New">finally</font> block, printing <font face="Courier New">Finally executing</font>.<br><br><b>A, B, C, </b>and<b> E</b> are incorrect based on the program logic just described. Remember that either a <font face="Courier New">catch</font> or a <font face="Courier New">finally</font> statement must follow a <font face="Courier New">try</font>. Since the <font face="Courier New">finally</font> is present, the <font face="Courier New">catch</font> is not required.]]></text></feedbacks><hint><text order="1"><![CDATA[Are both a <font face="Courier New">catch</font> and a <font face="Courier New">finally</font> required?<br><br>Reference: Chapter 6: Using <font face="Courier New">finally</font><br><br>Objective: Create a <font face="Courier New">try-catch</font> block and determine how exceptions alter normal program flow. (Objective 8.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="A" QNo="55" id="A 55">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_5501q.jpg]]></image><text order="3"><![CDATA[Which answer most closely indicates the behavior of the program?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The program will not compile]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The program will print <font face="Courier New">Hello world</font>, then will print that a <font face="Courier New">RuntimeException</font> has occurred, then will print <font face="Courier New">Done with try block</font>, and then will print <font face="Courier New">Finally executing</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The program will print <font face="Courier New">Hello world</font>, then will print that a <font face="Courier New">RuntimeException</font> has occurred, and then will print <font face="Courier New">Finally executing</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The program will print <font face="Courier New">Hello world</font>, then will print <font face="Courier New">Finally executing</font>, and then will print that a <font face="Courier New">RuntimeException</font> has occurred]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Once the program throws a <font face="Courier New">RuntimeException</font> (in the <font face="Courier New">throwit()</font> method) that is not caught, the <font face="Courier New">finally</font> block will be executed and the program will be terminated. If a method does not handle an exception, the <font face="Courier New">finally</font> block is executed before the exception is propagated.<br><br><b>A, B, </b>and<b> C</b> are incorrect based on the program logic just described.]]></text></feedbacks><hint><text order="1"><![CDATA[Are <font face="Courier New">catch</font> blocks required?<br><br>Reference: Chapter 6: Using <font face="Courier New">finally</font><br><br>Objective: Create a <font face="Courier New">try-catch</font> block and determine how exceptions alter normal program flow. (Objective 8.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="A" QNo="56" id="A 56">
			<qst><text order="1"><![CDATA[In which of these situations should you provide exception handling code? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. When iterating through an array]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. When performing deep recursion]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. When accessing data files]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. When verifying user input]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. When casting reference variables]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>D</b> are correct reasons to provide exception handling code.<br><br><b>A, B,</b> and <b>E</b> are incorrect. It is considered bad programming practice to provide exception handling code for the following: <font face="Courier New">ArrayIndexOutOfBoundsException</font>, <font face="Courier New">StackOverflowError</font>, and <font face="Courier New">ClassCastException</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Only two of these are correct.<br><br>Reference: Chapter 6: Exceptions<br><br>Objective: Describe what exceptions are used for in Java (Objective 8.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="A" QNo="57" id="A 57">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_5701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">hello throwit caught</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation fails]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">hello throwit RuntimeException caught after</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">hello throwit RuntimeException</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">hello throwit caught finally after</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">hello throwit caught finally after RuntimeException</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">main()</font> method properly catches and handles the <font face="Courier New">RuntimeException</font> in the <font face="Courier New">catch</font> block, <font face="Courier New">finally</font> runs (as it always does), and then the code returns to normal.<br><br><b>A, B, C, D, </b>and<b> F</b> are incorrect based on the program logic just previously. Remember that properly handled exceptions do not cause the program to stop executing.]]></text></feedbacks><hint><text order="1"><![CDATA[Is the exception properly handled?<br><br>Reference: Chapter 6: <font face="Courier New">try</font>, <font face="Courier New">catch</font>, and <font face="Courier New">finally</font><br><br>Objective: Invoke a method that throws an exception. (Objective 8.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="A" QNo="58" id="A 58">
			<qst><text order="1"><![CDATA[Which is typically NOT thrown by the JVM, being instead thrown by the developer? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">StackOverflowError</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">NullPointerException</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">NumberFormatException</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">NoClassDefFoundError</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">ArrayIndexOutOfBoundsException</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is the only one that is typically thrown by a developer (usually an API developer), and it's typically thrown when a method that is meant to convert a string to a number receives an ill-formed string.<br><br><b>A, B, D, </b>and<b> E</b> are incorrect based on the previous statement. These all tend to be thrown by the JVM when a bug of some sort is encountered.]]></text></feedbacks><hint><text order="1"><![CDATA[This is related to parsing input.<br><br>Reference: Chapter 6: Specific exceptions<br><br>Objective: Recognize common exception classes and categories. (Objective 8.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="A" QNo="59" id="A 59">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_5901q.jpg]]></image><text order="3"><![CDATA[Which is true?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The code will not compile]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The code will output: <font face="Courier New">Start Hello world</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The code will output: <font face="Courier New">Start Hello world File not found</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The code will output: <font face="Courier New">Start Hello world Catch Here File not found</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. Line 16 will cause a compiler error. The only legal statements after <font face="Courier New">try</font> blocks are either <font face="Courier New">catch</font> or <font face="Courier New">finally</font> statements.<br><br><b>B, C, </b>and<b> D</b> are incorrect based on the program logic just described. (If line 16 were removed, the code would compile and the correct answer would be <b>C</b>.)]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the rules for constructing <font face="Courier New">try</font>/<font face="Courier New">catch</font> blocks.<br><br>Reference: Chapter 6: <font face="Courier New">try/catch</font><br><br>Objective: Recognize common exception classes and categories. (Objective 8.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="A" QNo="60" id="A 60">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam01_6001q.jpg]]></image><text order="3"><![CDATA[and the command-line invocation:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam01_6002q.jpg]]></image><text order="5"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">null</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">null null</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A <font face="Courier New">ClassCastException</font> is thrown]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A <font face="Courier New">NullPointerException</font> is thrown]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">NoClassDefFoundError</font> is thrown]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An <font face="Courier New">ArithmeticException</font> is thrown]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An <font face="Courier New">IllegalArgumentException</font> is thrown]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. An <font face="Courier New">ArrayIndexOutOfBoundsException</font> is thrown]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. All of this code (which uses polymorphism, inheritance, and casting) is correct. No exceptions will be thrown, and the <font face="Courier New">getWeight()</font> method will be called twice from the <font face="Courier New">for</font> loop.<br><br><b>A, C, D, E, F, G,</b> and <b>H</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Are any exceptions thrown? If so, why?<br><br>Reference: Chapter 6: Specific exceptions<br><br>Objective: Recognize common exception classes and categories. (Objective 8.5)]]></text></hint>
		</question>
	</presetExamList>
	<presetExamList name="OCA Exam 2" sessionlimit="60" sessionimplemented="no">
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="1" id="B 1">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_0101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Bob &#8211; 6</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Bob &#8211; 7</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Bob &#8211; 16</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Bob &#8211; 22</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Since variables <font face="Courier New">name</font> and <font face="Courier New">f</font> are declared in the <font face="Courier New">for</font> loop, they can only be accessed inside it. (If these variables were declared outside the <font face="Courier New">for</font> block, before it, <b>D</b> would be correct.)<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Does a <font face="Courier New">for</font> loop have its own scope?<br><br>Reference: Chapter 3: Scope<br><br>Objective: Define the scope of variables. (Objective 1.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;5" isAttemped="false" userans="" chapter="B" QNo="2" id="B 2">
			<qst><text order="1"><![CDATA[Which are legal definitions for non-nested classes and interfaces? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">static public interface Foo {}</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">abstract public class Foo {}</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">protected interface Foo {}</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">final abstract class Foo {}</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">final public class Foo {}</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>E</b> are correct. Both are legal class declarations.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because non-nested interfaces and classes cannot be marked as <font face="Courier New">static</font>. <b>C</b> is incorrect because non-nested classes and interfaces cannot be marked as <font face="Courier New">protected</font>. <b>D</b> is incorrect because a class cannot be both abstract and final&#8212;there would be no way to use such a class.]]></text></feedbacks><hint><text order="1"><![CDATA[Think about each modifier's meaning independently, and then combine them.<br><br>Reference: Chapter 1: Define classes<br><br>Objective: Define the structure of a Java class. (Objective 1.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="B" QNo="3" id="B 3">
			<qst><text order="1"><![CDATA[Given two files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_0301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2 8</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation fails due to an error on line 7]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due to an error on line 10]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due to an error on line 11]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due to an error on line 12]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due to an error on line 15]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Although package <font face="Courier New">com.foo.in</font> belongs inside package <font face="Courier New">com.foo</font>, class <font face="Courier New">Bleh</font> is package-private because it has default access; thus it can only be accessed by other classes that are inside the <font face="Courier New">com.foo</font> package, so it is not even possible to import it in package com.foo.in. If class <font face="Courier New">Bleh</font> had public access, <b>A</b> would be correct.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Any element that has default access is only visible in the package that contains it.<br><br>Reference: Chapter 1: Class declarations and modifiers<br><br>Objective: Import other Java packages to make them accessible in your code. (Objective 1.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3" isAttemped="false" userans="" chapter="B" QNo="4" id="B 4">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_0401q.jpg]]></image><text order="3"><![CDATA[Which statement(s) inserted independently at <font face="Courier New">// insert code here</font> will allow <font face="Courier New">Bridge</font> to compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 1.0 Java Basics]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">import a.*;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">import a.b.*;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">import a.b.Car;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">import Car;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code will compile with any import]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code fails to compile for another reason]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>C</b> are correct. Java will only import from the package listed and not from any subpackages, and <font face="Courier New">a.b.*</font> expands to mean all classes in package <font face="Courier New">a.b.</font><br><br><b>A,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Think about what wildcard means in an <font face="Courier New">import</font> statement.<br><br>Reference: Chapter 1: Source file rules<br><br>Objective: Import other Java packages to make them accessible in your code. (Objective 1.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="B" QNo="5" id="B 5">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_0501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1000 1_000 2000 10001_000</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">1000 1_000 10001_000 10001_000</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">1_000 1_000 10001_000 10001_000</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">1000 1000 2000 2000</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">1_000 1_000 2000 2000</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due to an error on line 5]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails due to an error on line 6]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. Line 3 sets the value of <font face="Courier New">a</font> to <font face="Courier New">1000</font>. The underscores are only for readability. Line 5 adds two numbers and is set to a value of <font face="Courier New">2000</font>. Line 6 concatenates an <font face="Courier New">int</font> and a <font face="Courier New">String</font>.<br><br><b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Pay attention to the types.<br><br>Reference: Chapter 1: Declarations<br><br>Objective: Declare and initialize variables. (Objective 2.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="6" id="B 6">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_0601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1, 3, 5, 7, 2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">1, 3, 5, 14, 2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">1, 3, 5, 7, 3</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">1, 3, 5, 14, 3</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">1, 3, 14, 7, 2</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">1, 3, 14, 7, 3</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. None of the above because compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The update() method's <font face="Courier New">index</font> variable is incremented to <font face="Courier New">3</font> in <font face="Courier New">update()</font>. Since <font face="Courier New">int</font>s are passed by value, the <font face="Courier New">index</font> variable in <font face="Courier New">main</font> remains unchanged. The array <font face="Courier New">nums</font> is then updated, changing the element at index <font face="Courier New">3</font>. The update() method's second argument is a reference to the array. When the <b>one and only array</b> is modified, that modification is printed when execution returns to main(). Remember that array indexes begin with zero in Java, so index <font face="Courier New">3</font> is the fourth element in the array.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect due to the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which types does Java pass by value, and which does it pass by reference?<br><br>Reference: Chapter 3: Differentiating primitive variables and reference variables<br><br>Objective: Differentiate between object reference variables and primitive variables. (Objective 2.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;5" isAttemped="false" userans="" chapter="B" QNo="7" id="B 7">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A public field can be accessed and modified from anywhere]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A protected field can be accessed and modified from anywhere]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A private instance field can only be accessed from methods of the class that owns that field, as long as these methods are not static]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A private instance field can only be accessed from methods of the class that owns that field, whether or not these methods are static]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A getter instance method can return the value of a private static field]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> and <b>E</b> are correct.<br><br><b>B</b> and <b>D</b> are incorrect. <b>B</b> is incorrect because a protected field can only be accessed and modified by the class that owns that field, by classes that extend the class that owns that field, or by classes located in the same package as the class that owns that field. <b>D</b> is incorrect because a private instance field can only be accessed from instance methods of the class that owns that field.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider access rules and the differences between static variables and instance variables.<br><br>Reference: Chapter 1: Declaring, initializing, and using class members<br><br>Objective: Read or write to object fields. (Objective 2.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="7" isAttemped="false" userans="" chapter="B" QNo="8" id="B 8">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_0801q.jpg]]></image><text order="3"><![CDATA[At what point is only a single object eligible for garbage collection?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. After line 8 runs]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. After line 9 runs]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. After line 10 runs]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. After line 11 runs]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Never in this program]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>G</b> is correct. An error at line 10 causes a <font face="Courier New">NullPointerException</font> to be thrown because <font face="Courier New">e2</font> was set to <font face="Courier New">null</font> in line 8. If line 10 were moved between lines 7 and 8, <b>F</b> would be correct because until the last reference is nulled, none of the objects is eligible; and once the last reference is nulled, all three are eligible.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[The best way to solve these GC questions is to diagram the reference variables and the objects step by step.<br><br>Reference: Chapter 3: Garbage collection<br><br>Objective: Explain an object's lifecycle. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="B" QNo="9" id="B 9">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The invocation of an object's <font face="Courier New">finalize()</font> method is always the last thing that happens before an object is garbage collected]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. When a stack variable goes out of scope, it is eligible for GC]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Some reference variables live on the stack, and some live on the heap]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Only objects that have no reference variables referring to them can be eligible for GC]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. It's possible to request the GC via methods in either <font face="Courier New">java.lang.Runtime</font> or <font face="Courier New">java.lang.System</font> classes]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>E</b> are correct. When an object has a reference variable, the reference variable lives inside the object, on the heap.<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because if the first time an object's <font face="Courier New">finalize()</font> method runs the object is saved from the GC, then the second time that object is about to be garbage collected, <font face="Courier New">finalize()</font> will not run. <b>B</b> is incorrect&#8212;stack variables are not dealt with by the GC. <b>D</b> is incorrect because objects can live in "islands of isolation" and be GC eligible.]]></text></feedbacks><hint><text order="1"><![CDATA[This kind of question summarizes many facts about the topic. Expect several questions like this on the real exam. Bottom line, for each topic there will be several key concepts to know well.<br><br>Reference: Chapter 3: Garbage collection<br><br>Objective: Explain an object's lifecycle. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="B" QNo="10" id="B 10">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">StringBuilder</font> class extends <font face="Courier New">String</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">StringBuilder</font> class methods are synchronized, which make <font face="Courier New">StringBuilder</font> objects thread-safe]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">StringBuilder</font> class offers a <font face="Courier New">firstIndexOf</font> method, which takes a string as argument and returns the index of the first occurrence of the given string]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">StringBuilder</font> class offers an <font face="Courier New">append</font> method that takes a string as argument and appends this string to the end of the sequence of the object that invoked this method]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">StringBuilder</font> class offers a <font face="Courier New">concat</font> method, which inserts a string to the end of the sequence of the object that invoked the method]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because it is not even possible for a class to extend <font face="Courier New">String</font>, because the <font face="Courier New">String</font> class is final. <b>B</b> is incorrect because <font face="Courier New">StringBuilder</font> class's methods are not synchronized, unlike <font face="Courier New">StringBuffer</font>'s. <b>C</b> is incorrect because there's no <font face="Courier New">firstIndexOf</font> method, just <font face="Courier New">indexOf</font> and <font face="Courier New">lastIndexOf</font> methods. <b>E</b> is incorrect because it is not the <font face="Courier New">StringBuilder</font> class that offers a <font face="Courier New">concat</font> method, but the <font face="Courier New">String</font> class.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider inheritance rules and methods of classes <font face="Courier New">StringBuilder</font> and <font face="Courier New">String</font>.<br><br>Reference: Chapter 5: <font face="Courier New">StringBuilder</font><br><br>Objective: Manipulate data using the <font face="Courier New">StringBuilder</font> class and its methods. (Objective 2.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="B" QNo="11" id="B 11">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. .<font face="Courier New">faza</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. .<font face="Courier New">fzba</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">..azba</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">.fazba</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">..fezba</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Remember that <font face="Courier New">StringBuilder</font> objects are mutable (unlike String objects), that their methods use zero-based indexes, and that ending indexes are typically exclusive.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Are ending indexes inclusive or exclusive?<br><br>Reference: Chapter 5: <font face="Courier New">StringBuilder</font><br><br>Objective: Manipulate data using the <font face="Courier New">StringBuilder</font> class and its methods. (Objective 2.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="B" QNo="12" id="B 12">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 2.0 Working With Java Data Types]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">bing boom bang bamm</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">boom bing bang bamm bamm</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">bing boom bang bamm bamm</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. Line 7 creates a new <font face="Courier New">String</font> object with the value <font face="Courier New">"bamm bamm"</font>, but this string has no reference variable, and the reference variable <font face="Courier New">s3</font> still refers to the <font face="Courier New">String</font> with the value <font face="Courier New">"bamm"</font>.<br><br><b>B,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the logic described in the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Are references immutable?<br><br>Reference: Chapter 5: Strings<br><br>Objective: Create and manipulate strings. (Objective 2.7)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4;6" isAttemped="false" userans="" chapter="B" QNo="13" id="B 13">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1301q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Line 5 produces <font face="Courier New">true</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Line 5 produces <font face="Courier New">false</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Line 6 produces <font face="Courier New">true</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Line 6 produces <font face="Courier New">false</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Line 7 produces <font face="Courier New">true</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Line 7 produces <font face="Courier New">false</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>D,</b> and <b>F</b> are correct. The <font face="Courier New">^</font> (xor) returns <font face="Courier New">true</font> if exactly one operand is true. The <font face="Courier New">!</font> inverts the operand's boolean value. On line 6, <font face="Courier New">b2 = true</font> is an assignment, not a comparison, and it is evaluated because <font face="Courier New">&</font> does not short-circuit it.<br><br><b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Pay attention to the <font face="Courier New">!</font> and the <font face="Courier New">^</font>.<br><br>Reference: Chapter 4: Operators<br><br>Objective: Use Java operators. (Objective 3.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="B" QNo="14" id="B 14">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">1 2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">2 1</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">2 2</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">4 1</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">4 2</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct. The <font face="Courier New">%</font> (<i>remainder,</i> also known as <i>modulus</i>) operator returns the remainder of a division operation.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>G,</b> and <b>H</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Pay attention to the <font face="Courier New">% </font>(remainder) operator.<br><br>Reference: Chapter 4: Operators<br><br>Objective: Use Java operators. (Objective 3.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="15" id="B 15">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Equals... not!</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Equals! false</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Equals! true</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. An exception occurs at runtime]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because the expression on line 11 evaluates to <font face="Courier New">true</font>. The string on line 5 is not created with the keyword <font face="Courier New">new</font>, and thus it goes to the string constant pool. When the string on line 6 is created, it actually references the string that was created on line 5, so the field <font face="Courier New">word</font> that objects <font face="Courier New">e1</font> and <font face="Courier New">e2</font> have, references the same string. Thus, the expression on line 11 evaluates to <font face="Courier New">true</font>. <b>C</b> is incorrect because objects <font face="Courier New">e1</font> and <font face="Courier New">e2</font> are different instances, so the expression on line 7 evaluates to <font face="Courier New">false</font>. <b>D</b> and <b>E</b> are incorrect. The code compiles and runs without exception.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider how the string constant pool works and how instances and references are compared.<br><br>Reference: Chapter 4: Equality operators<br><br>Objective: Test equality between strings and other objects using <font face="Courier New">==</font> and <font face="Courier New">equals()</font>. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="16" id="B 16">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">OF(11) is: 56</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">OF(11) is: 100</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">OF(11) is: 89</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">OF(11) is: 111</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct because <font face="Courier New">if</font>&#8211;<font face="Courier New">else</font> constructs do not allow "<font face="Courier New">or else</font>" clauses.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Double-check the flow-control syntax.<br><br>Reference: Chapter 6: <font face="Courier New">if</font> statements<br><br>Objective: Create <font face="Courier New">if</font> and <font face="Courier New">if-else</font> constructs. (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="17" id="B 17">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">b</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">b c</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">b d</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">b c d</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. (Note: In the real world, you'd be expected to add curly braces to clarify where you want the <font face="Courier New">if-else</font> blocks to exist.) Without curly braces, the compiler makes the six lines of code starting with the first <font face="Courier New">if</font> test a single block. That means the second <font face="Courier New">else</font> statement is floating without an <font face="Courier New">if</font> statement to call its own.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[Where are code blocks implied in the code?<br><br>Reference: Chapter 6: <font face="Courier New">if</font> statements<br><br>Objective: Create <font face="Courier New">if</font> and<font face="Courier New"> if-else</font> constructs. (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="18" id="B 18">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Sounds like a dog!</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Sounds like a cat!</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Sounds like a bird!</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">It's another animal...</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. In a <font face="Courier New">switch</font> statement, there is no "<font face="Courier New">case else</font>" case. Instead, there is the "<font face="Courier New">default</font>" case, which is executed when none of the other options are executed. If line 11 had "<font face="Courier New">default:</font>" rather than "<font face="Courier New">case else:</font>", <b>D</b> would be correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the case that is executed when no other cases are executed?<br><br>Reference: Chapter 6: <font face="Courier New">switch</font> statements<br><br>Objective: Use a <font face="Courier New">switch</font> statement. (Objective 3.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="19" id="B 19">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_1901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-c</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-X</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-cm</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-cmp</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-cmXp</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. It's legal to use <font face="Courier New">enum</font>s in a <font face="Courier New">switch</font>, and normal <font face="Courier New">switch</font> fall-through logic applies; that is, once a match is made, the <font face="Courier New">switch</font> has been entered, and all remaining blocks will run if no <font face="Courier New">break</font> statement is encountered. (Note that <font face="Courier New">default</font> doesn't have to be last.)<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Assume <font face="Courier New">enum</font>s can be used in a <font face="Courier New">switch</font>.<br><br>Reference: Chapter 6: <font face="Courier New">switch</font> statements<br><br>Objective: Use a <font face="Courier New">switch</font> statement. (Objective 3.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="B" QNo="20" id="B 20">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 3.0 Using Operators and Decision Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">abc</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">abcde</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due only to an error on line 7]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due only to an error on line 8]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due only to an error on line 10]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due only to an error on line 11]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails due to errors on multiple lines]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct. A <font face="Courier New">switch</font> statement requires its case expressions to be constants, and wrapper variables (even <font face="Courier New">final static</font> ones) aren't considered constants. The rest of the code is correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which are the true constants?<br><br>Reference: Chapter 6: <font face="Courier New">switch</font> statements<br><br>Objective: Use a <font face="Courier New">switch</font> statement. (Objective 3.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="21" id="B 21">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2101q.jpg]]></image><text order="3"><![CDATA[And, if the code compiles, the command-line invocation:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam02_2102q.jpg]]></image><text order="5"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2 2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">3 3</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">4 2</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">6 3</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. <font face="Courier New">ArrayList</font>s have a <font face="Courier New">size()</font> method, and arrays have a <font face="Courier New">length</font> attribute. If the <font face="Courier New">System.out.println</font> had been <font face="Courier New">...xyz.length</font>, the answer would have been <b>D</b>.<br><br><b>A,</b> B, <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[What methods do arrays have?<br><br>Reference: Chapter 5: Use arrays and <font face="Courier New">ArrayList</font>s<br><br>Objectives: Declare, instantiate, initialize, and use a one-dimensional array. (Objective 4.1) Declare and use an <font face="Courier New">ArrayList</font>. (Objective 4.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="22" id="B 22">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">44 &#8211; Yes!</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">8 &#8211; Yes!</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">44</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">8</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The array is declared and constructed on line 3 with room for <font face="Courier New">4</font> <font face="Courier New">int</font> values, and thus the array's <font face="Courier New">length</font> property is equal to <font face="Courier New">4</font>. On line 4, the value <font face="Courier New">4</font> is assigned to the array's first index. (The first index of any array is always <font face="Courier New">0</font>.) On line 5, the value <font face="Courier New">4</font> is now assigned to the array's last index. (The array has room for <font face="Courier New">4</font> values, so the array's indexes go from <font face="Courier New">0</font> to <font face="Courier New">3</font>.). This is because the statement <font face="Courier New">a[a.length &#8211; 1]</font> is the same as <font face="Courier New">a[3]</font>. On line 6, the values at first and last indexes are summed, and <font face="Courier New">8</font> is printed. On line 7, the expression evaluates to <font face="Courier New">true</font> because, even though it is an array of <font face="Courier New">int</font> values, all arrays are objects; so any instance of any array passes the IS-A test when tested against <font face="Courier New">Object</font>. (Also, since all arrays are instances of <font face="Courier New">Object</font>, they all have the <font face="Courier New">Object</font>'s methods, such as <font face="Courier New">equals</font>, <font face="Courier New">hashCode</font>, <font face="Courier New">toString</font>, and so on.) Because the expression on line 7 is evaluated to <font face="Courier New">true</font>, line 8 is executed, printing "<font face="Courier New"> &#8211; Yes!</font>".<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider how array elements are indexed and how the class hierarchy works in Java.<br><br>Reference: Chapter 5: Arrays<br><br>Objective: Declare, instantiate, initialize, and use a one-dimensional array. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;5" isAttemped="false" userans="" chapter="B" QNo="23" id="B 23">
			<qst><text order="1"><![CDATA[Which are legal declarations? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">short x [];</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">short [] y;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">short[5] x2;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">short z2 [5];</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">short [] z [] [];</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">short [] y2 = [5];</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> and <b>E</b> are correct array declarations; <b>E</b> is a three-dimensional array.<br><br><b>C,</b> <b>D,</b> and <b>F</b> are incorrect. You can't include the size of your array in a declaration. <b>F</b> uses invalid instantiation syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[What's required when you declare the size of an array?<br><br>Reference: Chapter 5: Arrays<br><br>Objective: Declare, instantiate, initialize, and use a multi-dimensional array. (Objective 4.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="24" id="B 24">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 5]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 4.0 Creating and Using Arrays]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2 0 2 Hello!!!</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">0 0 2 Hello!!!</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">2 0 Hello!!!</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">0 0 Hello!!!</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. Method size always returns the number of elements that exist in the <font face="Courier New">ArrayList</font>, so <font face="Courier New">0</font> and <font face="Courier New">0</font> are printed on lines 14 and 16. Then, "<font face="Courier New">Hey!</font>", "<font face="Courier New">Howdy!!</font>" and "<font face="Courier New">Hello!!!</font>" are inserted at indexes <font face="Courier New">0</font>, <font face="Courier New">1</font>, and <font face="Courier New">2</font>. Since it contains the value <font face="Courier New">"Hello!!!"</font>, the expression on line 20 evaluates to <font face="Courier New">true</font>, and it prints the index that contains the value <font face="Courier New">"Hello!!!"</font> (<font face="Courier New">2</font>) on line 21. Then, on line 22, the value at index <font face="Courier New">2</font> is printed (<font face="Courier New">Hello!!!</font>).<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Are <font face="Courier New">ArrayList</font> indexes zero-based?<br><br>Reference: Chapter 5: <font face="Courier New">ArrayList</font><br><br>Objective: Declare and use an <font face="Courier New">ArrayList</font>. (Objective 4.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="B" QNo="25" id="B 25">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">I is 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">I is 1 I is 1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. No output is produced]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">I is 1 I is 1 I is 1</font> in an infinite loop]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. There are two different looping constructs in this problem. The first is a <font face="Courier New">do</font>/<font face="Courier New">while</font> loop, and the second is a <font face="Courier New">while</font> loop, nested inside the <font face="Courier New">do</font>/<font face="Courier New">while</font>. The body of the <font face="Courier New">do</font>/<font face="Courier New">while</font> is only a single statement&#8212;brackets are not needed. You are assured that the <font face="Courier New">while</font> expression will be evaluated at least once, followed by an evaluation of the <font face="Courier New">do</font>/<font face="Courier New">while</font> expression. Both expressions are <font face="Courier New">false</font>, and no output is produced.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[How many loops are in this code?<br><br>Reference: Chapter 6: <font face="Courier New">while</font> loops<br><br>Objective: Create and use <font face="Courier New">while</font> loops. (Objective 5.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="26" id="B 26">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2 1 3 0</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">2 2 3 1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">2 1 3 0 4 0</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">2 2 3 1 4 0</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Line 16 won't compile because <font face="Courier New">y</font> is out of scope.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the program logic described in the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[What's a code block?<br><br>Reference: Chapter 6: The <font face="Courier New">for</font> loop<br><br>Objective: Create and use <font face="Courier New">for</font> loops including the enhanced <font face="Courier New">for</font> loop. (Objective 5.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="B" QNo="27" id="B 27">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2701q.jpg]]></image><text order="3"><![CDATA[Which code inserted at line 4, produces the output <font face="Courier New">12</font>?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">int y = x;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">int y = 10;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">int y = 11;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">int y = 12;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">int y = 13;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. None of the above will allow compilation to succeed]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. None of the above will produce the output: 12]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Variable <font face="Courier New">x</font> reaches the value of <font face="Courier New">11</font>, at which point the while test fails; <font face="Courier New">x</font> is then incremented (after the comparison test!), and the <font face="Courier New">println()</font> method runs.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is <font face="Courier New">x</font> incremented before or after the comparison?<br><br>Reference: Chapter 6: The <font face="Courier New">do</font>/<font face="Courier New">while</font> loop<br><br>Objective: Create and use <font face="Courier New">do</font>/<font face="Courier New">while</font> loops. (Objective 5.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4;5" isAttemped="false" userans="" chapter="B" QNo="28" id="B 28">
			<qst><text order="1"><![CDATA[Which are true statements? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A <font face="Courier New">while</font> loop executes zero or more times]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A <font face="Courier New">while</font> loop executes one or more times]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A <font face="Courier New">do</font>/<font face="Courier New">while</font> loop executes zero or more times]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A <font face="Courier New">do</font>/<font face="Courier New">while</font> loop executes one or more times]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">for</font> loop can look at every other element of an array]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An enhanced <font face="Courier New">for</font> loop can look at every other element of an array]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>D,</b> and <b>E</b> are correct. A <font face="Courier New">while</font> loop will execute zero times if the condition is <font face="Courier New">false</font> initially. A <font face="Courier New">do</font>/<font face="Courier New">while</font> loop must execute at least once since the condition is at the end of the loop. A traditional <font face="Courier New">for</font> loop may have an increment expression of <font face="Courier New">i+=2</font>, which would look at every other element.<br><br><b>B,</b> <b>C,</b> and <b>F</b> are incorrect. <b>B</b> and <b>C</b> are incorrect based on the above. <b>F</b> is incorrect because the enhanced <font face="Courier New">for</font> loop goes through the whole array or collection. You could write an <font face="Courier New">if</font> statement inside the loop to skip elements, but the loop itself would still be looking at each element.]]></text></feedbacks><hint><text order="1"><![CDATA[Think about a sample of each loop.<br><br>Reference: Chapter 6: Loops<br><br>Objective: Compare loop constructs. (Objective 5.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;3;6;7" isAttemped="false" userans="" chapter="B" QNo="29" id="B 29">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_2901q.jpg]]></image><text order="3"><![CDATA[Which loops would execute three iterations? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">for (int num: a)</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">for (int i = 0; i &#60; a.length; i++)</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">for (int i = 0; i &#60; a.length; ++i)</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">for (int i = 1; i &#60; a.length; i++)</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">for (int i = 1; i &#60; a.length; ++i)</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">for (int i = 1; i &#60;= a.length; i++)</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">for (int i = 1; i &#60;= a.length; ++i)</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, C, F,</b> and <b>G</b> are correct. <b>A</b> is correct because the enhanced <font face="Courier New">for</font> loop goes through each position in the array. <b>B</b> and <b>C</b> are correct because they iterate through <font face="Courier New">i = 0</font>, <font face="Courier New">1</font>, and <font face="Courier New">2</font>. <b>F</b> and <b>G</b> are correct because they iterate through <font face="Courier New">i = 1</font>, <font face="Courier New">2</font>, and <font face="Courier New">3</font>.<br><br><b>D</b> and <b>E</b> are incorrect because they only iterate through <font face="Courier New">i = 1</font> and <font face="Courier New">2</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Does the condition get evaluated before or after the increment expression?<br><br>Reference: Chapter 6: Loops<br><br>Objective: Compare loop constructs. (Objective 5.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="B" QNo="30" id="B 30">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">i=4 j=4</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">i=4 j=5</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">i=5 j=4</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">i=5 j=5</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. None of the above]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct because <font face="Courier New">i</font> is incremented before the condition <font face="Courier New">i &#60; 5</font> is checked. The last time through the loop, it increments to <font face="Courier New">5</font> and then the condition fails; <font face="Courier New">j</font> is incremented each time through the loop except when i == 2, and <font face="Courier New">continue</font> just continues on to the next run through the loop.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[When is <font face="Courier New">j</font> incremented?<br><br>Reference: Chapter 6: <font face="Courier New">break</font> and <font face="Courier New">continue</font><br><br>Objective: Use <font face="Courier New">break</font> and <font face="Courier New">continue</font>. (Objective 5.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="31" id="B 31">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 5.0 Using Loop Constructs]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">0</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">6</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">10</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails on line 5]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails on line 6]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails on line 7]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. On the first iteration through the loop, <font face="Courier New">x</font> and <font face="Courier New">nums.length</font> are both <font face="Courier New">4</font>, so the code continues to run the loop rather than adding to <font face="Courier New">total</font>.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is the for loop valid?<br><br>Reference: Chapter 6: <font face="Courier New">break</font> and <font face="Courier New">continue</font><br><br>Objective: Use <font face="Courier New">break</font> and <font face="Courier New">continue</font>. (Objective 5.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="B" QNo="32" id="B 32">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Jump: 6 6 6 Jump: 6</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Jump: 5 5 6 Jump: 5</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Jump: 5 6 6 Jump: 5</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Compilation fails because method <font face="Courier New">printJumps</font> on line 12 is <font face="Courier New">private</font>, so it is not part of the <font face="Courier New">Wooper</font> class's public API. This means that it can only be invoked by methods of the <font face="Courier New">Wooper</font> class itself, so compilation fails due to an error on line 5. If method <font face="Courier New">printJumps</font> on line 12 were declared as <font face="Courier New">public</font>, <font face="Courier New">protected</font>, or even had default access, <b>C</b> would be correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider access rules.<br><br>Reference: Chapter 2: Methods<br><br>Objective: Create methods with arguments and return values. (Objective 6.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="33" id="B 33">
			<qst><text order="1"><![CDATA[Given that <font face="Courier New">Math.random()</font> returns a number from <font face="Courier New">0</font> to just less than <font face="Courier New">1</font>, and:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The program outputs the value <font face="Courier New">0</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The program outputs the value <font face="Courier New">1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The program outputs a value between <font face="Courier New">0</font> and <font face="Courier New">1024</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The program outputs a value between <font face="Courier New">0</font> and <font face="Courier New">1023</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The program fails to compile]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">calculateJuice()</font> method isn't a <font face="Courier New">static</font> method. If it was static, <b>D</b> would be correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Is there a <font face="Courier New">SuperJuice</font> reference variable?<br><br>Reference: Chapter 1: Static members<br><br>Objective: Apply the <font face="Courier New">static</font> keyword to method and fields. (Objective 6.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="34" id="B 34">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">chirp chirp</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">CHIRP chirp</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">chirp CHIRP</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">CHIRP CHIRP</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The argument for the second invocation of <font face="Courier New">chirp()</font> must be declared as a long: <font face="Courier New">"123_456_789_012L"</font> (lowercase <i>L</i> can also be used, but it's harder to read). If it was, the correct answer would be <b>B.</b> (Also notice the use of the underscores, available as of Java 7.)<br><br><b>A, B, C, D,</b> and<b> F </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Double-check the methods' signatures.<br><br>Reference: Chapter 2: Overloading<br><br>Objective: Create an overloaded method. (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="B" QNo="35" id="B 35">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3501q.jpg]]></image><text order="3"><![CDATA[Which method(s), inserted at line 7, will NOT compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">private long cat(int x) { return 7; }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public long cat() { return 8L; }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">long cat() { return 8; }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">protected int cat(int x) { return 7; }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Default access is more restrictive than protected.<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> and <b>D</b> are valid overloads, and <b>B</b> is a valid override.]]></text></feedbacks><hint><text order="1"><![CDATA[Check all the rules that might apply.<br><br>Reference: Chapter 2: Return types<br><br>Objective: Create an overloaded method. (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="B" QNo="36" id="B 36">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">6</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">7</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">8</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">9</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. <font face="Courier New">Minor</font>'s constructor makes an explicit call to <font face="Courier New">Uber</font>'s one-arg constructor, which makes an explicit (<font face="Courier New">this</font>) call to <font face="Courier New">Uber</font>'s no-arg constructor, which increments <font face="Courier New">y</font> and then returns to the one-arg constructor, which multiplies <font face="Courier New">y * 2</font> and then returns to <font face="Courier New">Minor</font>'s constructor, which adds <font face="Courier New">3</font> to <font face="Courier New">y</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Keep track of the difference between <i>explicit</i> and <i>implicit</i> constructor calls.<br><br>Reference: Chapter 2: Develop constructors<br><br>Objective: Differentiate between default and user-defined constructors. (Objective 6.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="37" id="B 37">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">4</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">4 8</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">8 4</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">8 4 no-arg</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">no-arg 8 4</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">main()</font> method calls the <font face="Courier New">long</font> constructor, which calls the <font face="Courier New">int</font> constructor, which then calls the no-arg constructor, which runs and then returns to the <font face="Courier New">int</font> constructor, which runs and then returns to the <font face="Courier New">long</font> constructor, which runs last.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember how <font face="Courier New">this()</font> works with multiple constructors.<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Create and overload constructors. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="38" id="B 38">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">sub super 2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">super 2 sub</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails at line 2]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails at line 8]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails at line 9]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails at line 14]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. Class <font face="Courier New">MySuper</font> does not need a no-args constructor because <font face="Courier New">MySub</font> explicitly calls the <font face="Courier New">MySuper</font> constructor with an argument.<br><br><b>A,</b> <b>C, D, E,</b> and <b>F</b> are incorrect. <b>A</b> is incorrect because other than the implicit calls to <font face="Courier New">super()</font>, constructors run in order from base class to extended class, so <font face="Courier New">MySuper</font>'s output will print first. <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect because the code compiles properly.]]></text></feedbacks><hint><text order="1"><![CDATA[When exactly do you need a no-arg constructor?<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Create and overload constructors. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="B" QNo="39" id="B 39">
			<qst><text order="1"><![CDATA[Given these classes in different files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_3901q.jpg]]></image><text order="3"><![CDATA[Which statements are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The output is <font face="Courier New">0</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The output is <font face="Courier New">5</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The output is <font face="Courier New">6</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code compiles if line 1 is removed]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code compiles if line 2 is changed to read: <font face="Courier New">Useful u = new Useful();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The <font face="Courier New">increment()</font> method must be marked <font face="Courier New">public</font> to be accessed outside of the package.<br><br><b>A,</b> <b>B,</b> <b>C, E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What's true about packages and access?<br><br>Reference: Chapter 1: Access modifiers<br><br>Objective: Apply access modifiers. (Objective 6.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4;10;11" isAttemped="false" userans="" chapter="B" QNo="40" id="B 40">
			<qst><text order="1"><![CDATA[Given two files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4001q.jpg]]></image><text order="3"><![CDATA[In order to compile these two files (which are both located in appropriate directories for their packages), what changes are necessary?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1;Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. On line 3 of <font face="Courier New">Lamentable.java</font>, this interface must be declared <font face="Courier New">public</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The method <font face="Courier New">lament()</font> in <font face="Courier New">Lamentable.java</font> must be declared <font face="Courier New">public</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The following methods must be added to <font face="Courier New">Lamentable.java</font>: <font face="Courier New">void lament(int)</font>, <font face="Courier New">int</font> <font face="Courier New">lament()</font>, and <font face="Courier New">private void lament()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The method on line 4 of <font face="Courier New">Lame.java</font> must be declared <font face="Courier New">public</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The method on line 8 of <font face="Courier New">Lame.java</font> must be declared <font face="Courier New">public</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The method on line 12 of <font face="Courier New">Lame.java</font> must be declared <font face="Courier New">public</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. The method on line 16 of <font face="Courier New">Lame.java</font> must be declared <font face="Courier New">public</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. Lines 4&#8211;6 in <font face="Courier New">Lame.java</font> must be deleted]]></text></option>
 				<option id="9"><text order="1"><![CDATA[I. Lines 8&#8211;10 in <font face="Courier New">Lame.java</font> must be deleted]]></text></option>
 				<option id="10"><text order="1"><![CDATA[J. Lines 12&#8211;14 in <font face="Courier New">Lame.java</font> must be deleted]]></text></option>
 				<option id="11"><text order="1"><![CDATA[K. Lines 16&#8211;18 in <font face="Courier New">Lame.java</font> must be deleted]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>D,</b> <b>J,</b> and <b>K</b> are correct. <b>A</b> is correct because if <font face="Courier New">Lamentable</font> is not <font face="Courier New">public</font>, then <font face="Courier New">Lame.java</font> can't use it. <b>D</b> is correct because the method in interface <font face="Courier New">Lamentable</font> was implicitly <font face="Courier New">public</font>, but the method in class <font face="Courier New">Lame</font> must be explicitly declared <font face="Courier New">public</font> in order not to have more restrictive access than the method declaration it overrides. <b>J</b> and <b>K</b> are correct because it's not legal to have multiple methods with the same signature, and neither of these methods is an acceptable override of the method in <font face="Courier New">Lamentable</font>.<br><br><b>B,</b> <b>C, E, F,</b> <b>G,</b> <b>H,</b> and <b>I</b> are incorrect. <b>B</b> is incorrect because methods in an interface are implicitly <font face="Courier New">public</font>. It would have been allowable to declare this method <font face="Courier New">public</font>, but it certainly is not necessary. <b>C</b> is incorrect because there is no requirement that an interface declare all methods that a concrete subclass implements; the requirement is the other way around. <b>E</b> and <b>I</b> are incorrect because <font face="Courier New">lament(int n)</font> is an overload, not an override, and it may have a different access level than <font face="Courier New">lament()</font>. <b>F</b> and <b>G</b> are incorrect because <b>J</b> and <b>K</b> are correct&#8212;these methods must be deleted, not made <font face="Courier New">public</font>. <b>H</b> is incorrect because this method is the only remaining way to implement the method from <font face="Courier New">Lamentable</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Focus on the access modifiers.<br><br>Reference: Chapters 1 and 10: Access modifiers<br><br>Objective: Apply access modifiers. (Objective 6.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;3;4" isAttemped="false" userans="" chapter="B" QNo="41" id="B 41">
			<qst><text order="1"><![CDATA[Which statements are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Encapsulation limits the consequences of change]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Encapsulation allows corrections to a class with minimal impact on users of that class]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Encapsulation makes it easier to reuse classes]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Encapsulation results in better testing and higher reliability]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Encapsulation ensures that member variables are readily accessible]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Encapsulation means that methods are all marked <font face="Courier New">public</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Encapsulation means that classes are members of packages]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are correct statements.<br><br><b>E,</b> <b>F,</b> and <b>G</b> are incorrect. <b>E</b> is incorrect because encapsulation ensures that only the appropriate member variables are accessible, and those only through getters and setters. <b>F</b> is incorrect because, while several public methods will usually exist in an encapsulated class, it is not necessary for all of the methods to be public. <b>G</b> is incorrect because, while packaging can provide a layer of encapsulation, the encapsulation layer is on a larger scale than encapsulation in individual classes.]]></text></feedbacks><hint><text order="1"><![CDATA[For the exam, encapsulation is always class specific.<br><br>Reference: Chapter 2: Encapsulation<br><br>Objective: Apply encapsulation principles to a class. (Objective 6.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="42" id="B 42">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">7 6</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">7 7</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">124 123</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">124 124</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The reference variables <font face="Courier New">a1</font> and <font face="Courier New">a3</font> refer to the same <font face="Courier New">long</font> array object. When the <font face="Courier New">[1]</font> element is updated in the <font face="Courier New">adjust()</font> method, it is updating the array referred to by <font face="Courier New">a1</font>. The reference variable <font face="Courier New">a2</font> refers to the same array object.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[What kind of thing is being passed?<br><br>Reference: Chapter 3: Passing object references<br><br>Objective: Determine the effect upon object references and primitive values when they are passed into methods that change the values. (Objective 6.8)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="43" id="B 43">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 6.0 Working with Methods and Encapsulation]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">one one three</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">one two one three</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">one two one two three</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">one one three one two three</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. When the <font face="Courier New">alter()</font> method is first entered, <font face="Courier New">start()</font>'s <font face="Courier New">s1</font> and <font face="Courier New">alter()</font>'s <font face="Courier New">s1</font> reference variables both refer to the same <font face="Courier New">String</font> object (with a value of <font face="Courier New">"one"</font>), and <font face="Courier New">alter()</font>'s <font face="Courier New">s1</font> is reassigned to a new object that is created when the concatenation occurs. (This second <font face="Courier New">String</font> object has a value of <font face="Courier New">"one two"</font>.) When the program returns to <font face="Courier New">start()</font>, another <font face="Courier New">String</font> object is created, referred to by <font face="Courier New">s2</font> and with a value of <font face="Courier New">"three"</font>.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[What's really being passed?<br><br>Reference: Chapter 3: Passing object references<br><br>Objective: Determine the effect upon object references and primitive values when they are passed into methods that change the values. (Objective 6.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;5" isAttemped="false" userans="" chapter="B" QNo="44" id="B 44">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4401q.jpg]]></image><text order="3"><![CDATA[Which statement(s) are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The code compiles as is]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The code fails compilation as is]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The code compiles if line 3 is removed]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The code compiles if line 6 is removed]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code compiles if line 7 is removed]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code compiles if line 10 is removed]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C</b>, and <b>E</b> are correct because only <font face="Courier New">fly()</font> and <font face="Courier New">printWingspan()</font> from the interface must be implemented by either an abstract or concrete class.<br><br><b>B,</b> <b>D,</b> and <b>F</b> are incorrect. <b>B</b> and <b>F </b>are incorrect based on the above. <b>D</b> is incorrect because one of the classes must implement <font face="Courier New">fly()</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Which methods must be implemented?<br><br>Reference: Chapter 2: Interfaces<br><br>Objective: Implement inheritance. (Objective 7.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="B" QNo="45" id="B 45">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">x x x</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">x x z</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">z y y</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">z y z</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct. The compiler trusts the cast, but at runtime the cast will fail.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[When dealing with polymorphism, is the complier or the JVM more lenient?<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Develop code that demonstrates the use of polymorphism. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4;6" isAttemped="false" userans="" chapter="B" QNo="46" id="B 46">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4601q.jpg]]></image><text order="3"><![CDATA[Which statement(s) are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. If uncommented, line 7 will compile]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. If uncommented, line 8 will compile]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. If uncommented, line 9 will compile]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. If uncommented, line 10 will compile]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. More than one of the lines from 7 to 10 can be uncommented simultaneously and still compile]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Only one of the lines from 7 to 10 can be uncommented at a time and still compile]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> <b>D,</b> and <b>F</b> are correct. Line 7 is a covariant return.<br><br><b>C</b> and <b>E</b> are incorrect. <b>C</b> is incorrect because <font face="Courier New">Animal</font> instances can't necessarily do everything that <font face="Courier New">Gerbil</font> instances can do. <b>E</b> is incorrect because that would create illegal overloads.]]></text></feedbacks><hint><text order="1"><![CDATA[Are covariant returns associated with overrides or overloads?<br><br>Reference: Chapter 2: Return types<br><br>Objective: Develop code that demonstrates the use of polymorphism. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="B" QNo="47" id="B 47">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4701q.jpg]]></image><text order="3"><![CDATA[Which statement(s) are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. You can assign a <font face="Courier New">BaseballCap</font> object to a <font face="Courier New">Bonet</font> reference]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. You can assign a <font face="Courier New">BaseballCap</font> object to a <font face="Courier New">Hat</font> reference]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. You can assign a <font face="Courier New">Bonet</font> object to a <font face="Courier New">BaseballCap</font> reference]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. You can assign a <font face="Courier New">Bonet</font> object to a <font face="Courier New">Hat</font> reference]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. You can assign a <font face="Courier New">Hat</font> object to a <font face="Courier New">BaseballCap</font> reference]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. You can assign a <font face="Courier New">Hat</font> object to a <font face="Courier New">Bonet</font> reference]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>D</b> are correct. You can assign a subclass to a superclass, but not a superclass to a subclass.<br><br><b>A,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is a superclass or a subclass more specific?<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Differentiate between the type of a reference and the type of an object. (Objective 7.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;5;6" isAttemped="false" userans="" chapter="B" QNo="48" id="B 48">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4801q.jpg]]></image><text order="3"><![CDATA[Which could be legally inserted into a class that extends class <font face="Courier New">Foo</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">public test(float [] y) { return 7; }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public int test(float x) { return 7; }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">public long test(float [] y) { return  7; }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">short test(float [] x) { return 7; }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">private short test(float x) { return 7; }</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">protected short test(float [] yahoo) { return 7; }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>E,</b> and <b>F</b> are correct. <b>B</b> and <b>E</b> are overloads (taking <font face="Courier New">float</font>s as opposed to <font face="Courier New">float</font> arrays). <b>F</b> is a valid override.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because it not a method: it has no return type. <b>C</b> is incorrect because it alters only the return type, and <b>D</b> is incorrect because it has an access level that is too restrictive.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember all of the return type considerations.<br><br>Reference: Chapter 2: Overloading and overriding<br><br>Objective: Differentiate between the type of a reference and the type of an object. (Objective 7.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="49" id="B 49">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_4901q.jpg]]></image><text order="3"><![CDATA[Which line fails compilation because of a missing cast?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Line 4]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Line 5]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Line 6]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Line 7]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Line 8]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Line 9]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. None of the above]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. A superclass requires a cast to be assigned to a subclass.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is a superclass or a subclass more specific?<br><br>Reference: Chapter 2: Polymorphism<br><br>Objective: Determine when casting is necessary. (Objective 7.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="B" QNo="50" id="B 50">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-x</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-h1 x</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-x h1 h2</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-h2 h1 x</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The code fails to compile because a call to <font face="Courier New">this</font> in a constructor must be the first statement of the constructor. If the call to this was moved to the first statement of the constructor, then constructor chaining rules would make answer <b>D </b>correct.<font face="Courier New"><br><br></font><b>A,</b> <b>B, C, D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Two words: constructor chaining<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Use super and this to access objects and constructors. (Objective 7.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="B" QNo="51" id="B 51">
			<qst><text order="1"><![CDATA[Which are valid method signatures in an interface? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1;Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">private float getArea(Boolean[] ba);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public getVol(float x);</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">public void main(String[] wow);</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">public static void main(String[] args);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">boolean setFlag(Boolean[] test[]);</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>E</b> are correct. These are valid interface method signatures.<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because an interface method must be public; if it is not explicitly declared <font face="Courier New">public</font>, it will be made public implicitly. <b>B</b> is incorrect because methods must have return types. <b>D</b> is incorrect because interface methods cannot be static.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the defaults.<br><br>Reference: Chapters 1 and 2: Declaring an interface<br><br>Objective: Use abstract classes and interfaces. (Objective 7.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="B" QNo="52" id="B 52">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5201q.jpg]]></image><text order="3"><![CDATA[Which code fragments inserted at lines 7 and 8 will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 7.0 Working with Inheritance]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam02_5201c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam02_5202c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam02_5203c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam02_5204c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam02_5205c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>E</b> are correct. <b>C</b> is a valid (if brief) implementation. <b>E</b> is correct because interfaces and abstract classes do not need to fully implement the interfaces they extend or implement (respectively).<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because a class cannot extend an interface. <b>B</b> is incorrect because an interface cannot implement anything. <b>D</b> is incorrect because the method being implemented is from the wrong interface.]]></text></feedbacks><hint><text order="1"><![CDATA[Each option may test a different concept.<br><br>Reference: Chapter 2: Declaring an interface<br><br>Objective: Use abstract classes and interfaces. (Objective 7.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;4" isAttemped="false" userans="" chapter="B" QNo="53" id="B 53">
			<qst><text order="1"><![CDATA[Which are most commonly thrown by an application developer or an API developer as opposed to being thrown by the JVM? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">ClassCastException</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">IllegalArgumentException</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">IllegalStateException</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">NumberFormatException</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">ExceptionInInitializerError</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>C,</b> and <b>D</b> are (correct), examples of checked exceptions.<br><br><b>A</b> and<b> E</b> are incorrect. <b>A</b> is incorrect because <font face="Courier New">ClassCastException</font>s are typically thrown by the JVM when a bad cast is attempted (a cast to a type that fails an IS-A test). <b>E</b> is incorrect because <font face="Courier New">ExceptionInInitializerError</font>s are typically thrown due to an error at initialization time&#8212;for instance, an error in a static initialization block.]]></text></feedbacks><hint><text order="1"><![CDATA[Developers ought to try to catch data errors.<br><br>Reference: Chapter 6: Exceptions<br><br>Objective: Checked vs. Runtime (Objective 8.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="B" QNo="54" id="B 54">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">m1catch  except</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">m1catch  except  m2finally</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">m1catch  m2finally  except</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails at line 2]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails at line 21]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown and not handled at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Because <font face="Courier New">m2()</font> doesn't handle its exception, it is passed to <font face="Courier New">main()</font>, which does handle it.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the program logic described in the previous statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember to handle or declare.<br><br>Reference: Chapter 6: Handling exceptions<br><br>Objective: Create a <font face="Courier New">try</font>/<font face="Courier New">catch</font> block and determine how exceptions alter normal program flow. (Objective 8.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="B" QNo="55" id="B 55">
			<qst><text order="1"><![CDATA[Assume you are creating a method that you know might throw a checked exception. Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Your method's signature must declare that an exception might be thrown]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. You must put the risky code inside a <font face="Courier New">try-catch</font> block]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The method's class must implement Throwable]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The method can optionally include a <font face="Courier New">finally</font> clause]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The method must return an object that extends <font face="Courier New">java.lang.Exception</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> correctly describes an exception handling rule.<br><br><b>A </b>and <b>B</b> are incorrect because only one of these two actions must be taken. <b>C,</b> and <b>E</b> are incorrect, these rules do not exist in Java.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the handle or declare rule<br><br>Reference: Chapter 6: <font face="Courier New">try</font>, <font face="Courier New">catch</font>, and <font face="Courier New">finally</font><br><br>Objective: What are exceptions used for. (Objective 8.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4;5;6" isAttemped="false" userans="" chapter="B" QNo="56" id="B 56">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5601q.jpg]]></image><text order="3"><![CDATA[Which line(s), inserted independently at <font face="Courier New">// insert code here</font>, will compile and produce the output <font face="Courier New">b</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam02_5601c.jpg]]></image></option>
				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam02_5602c.jpg]]></image></option>
				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam02_5603c.jpg]]></image></option>
				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam02_5604c.jpg]]></image></option>
				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam02_5605c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam02_5606c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>D,</b> <b>E,</b> and <b>F</b> are correct. It's okay for an overriding method to throw the same exceptions, narrower exceptions, or no exceptions. It's also okay for the overriding method to throw any runtime exceptions (e.g. NumberFormatException).<br><br><b>B</b> and <b>C</b> are incorrect. <b>B</b> is incorrect because the overriding method is trying to throw a broader exception. <b>C</b> is incorrect because this method doesn't override, so the output is <font face="Courier New">a</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[If it's an overriding method, what exception rules apply? Also, are they all overrides?<br><br>Reference: Chapter 6: <font face="Courier New">try</font>, <font face="Courier New">catch</font>, and <font face="Courier New">finally</font><br><br>Objective: Invoke a method that throws an exception. (Objective 8.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;6;8" isAttemped="false" userans="" chapter="B" QNo="57" id="B 57">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5701q.jpg]]></image><text order="3"><![CDATA[and the command-line invocations:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam02_5702q.jpg]]></image><text order="5"><![CDATA[Which statement(s) are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Line 6 is executed exactly zero times]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Line 6 is executed exactly one time]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Line 6 is executed exactly two times]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">finally</font> block is executed exactly zero times]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">finally</font> block is executed exactly one time]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The <font face="Courier New">finally</font> block is executed exactly two times]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Both invocations produce the same exceptions]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. Each invocation produces a different exception]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>F,</b> and <b>H</b> are correct. Since both invocations throw exceptions, line 6 is never reached. Since both exceptions occurred within a <font face="Courier New">try</font> block, the <font face="Courier New">finally</font> block will always execute. The first invocation throws an <font face="Courier New">ArrayIndexOutOfBoundsException</font>, and the second invocation throws an <font face="Courier New">ArithmeticException</font> for the attempt to divide by zero.<br><br><b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Each invocation will throw some sort of exception.<br><br>Reference: Chapter 6: <font face="Courier New">try</font>, <font face="Courier New">catch</font>, and <font face="Courier New">finally</font><br><br>Objective: Invoke a method that throws an exception. (Objective 8.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="B" QNo="58" id="B 58">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam02_5801c.jpg]]></image></option>
				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam02_5802c.jpg]]></image></option>
				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam02_5803c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam02_5804c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam02_5805c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam02_5806c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. <font face="Courier New">Throwable</font> is not a subclass of <font face="Courier New">Exception</font>, so the <font face="Courier New">catch</font> clause does NOT catch the <font face="Courier New">Throwable</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Is <font face="Courier New">Throwable</font> a subclass of <font face="Courier New">Exception</font>?<br><br>Reference: Chapter 6: Propagating exceptions<br><br>Objective: Invoke a method that throws an exception. (Objective 8.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="B" QNo="59" id="B 59">
			<qst><text order="1"><![CDATA[Given that all invocations of <font face="Courier New">Cruncher</font> include a value for <font face="Courier New">args[0]</font> such that <font face="Courier New">Integer.parseInt(args[0])</font> will return a valid integer, and given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_5901q.jpg]]></image><text order="3"><![CDATA[Which might be thrown? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">ClassCastException</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">StackOverflowError</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">NumberFormatException</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">IllegalArgumentException</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">ExceptionInInitializerError</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">ArrayIndexOutOfBoundsException</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The <font face="Courier New">go()</font> method calls itself recursively, and if <font face="Courier New">args[0]</font> parses into too large of an integer, the recursive invocations of <font face="Courier New">go()</font> can cause a <font face="Courier New">StackOverflowError</font>. Small values of <font face="Courier New">args[0]</font> will create a proper sum.<br><br><b>A, C, D, E, </b>and<b> F </b>are incorrect; none of these exceptions will be thrown.]]></text></feedbacks><hint><text order="1"><![CDATA[How many times might <font face="Courier New">go()</font> be invoked?<br><br>Reference: Chapter 6: Exceptions<br><br>Objective: Recognize common exception classes and categories. (Objective 8.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="B" QNo="60" id="B 60">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam02_6001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCA Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCA Objective - 8.0 Handling Exceptions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">hi</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">hi hi</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A <font face="Courier New">ClassCastException</font> is thrown at runtime]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An <font face="Courier New">IllegalStateException</font> is thrown at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. A <font face="Courier New">NoClassDefFoundError</font> is thrown at runtime]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An <font face="Courier New">IllegalArgumentException</font> is thrown at runtime]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. An <font face="Courier New">ExceptionInInitializerError</font> is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The downcast is correct, and the argument to the <font face="Courier New">println()</font> method is correct.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>F,</b> <b>G,</b> and <b>H</b> are incorrect based on the previous statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Are you sure this code is incorrect? Why?<br><br>Reference: Chapter 6: Common exceptions<br><br>Objective: Recognize common exception classes and categories. (Objective 8.5)]]></text></hint>
		</question>
	</presetExamList>
	<presetExamList name="OCP Exam 1" sessionlimit="85" sessionimplemented="no">
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="C" QNo="1" id="C 1">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Created a Father</font><br><font face="Courier New">&#160;&#160;Well, that's all right then</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Well, that's all right then</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Well, that's all right then</font><br><font face="Courier New">&#160;&#160;Created a Father</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. Subclasses always run the constructors of their parents before they run their own constructors, but the parental constructors must run. Protected parental constructors are accessible to the child classes. The <font face="Courier New">private</font> modifier in the <font face="Courier New">Oedipus</font> class doesn't matter.<br><br><b>B, C, D, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember constructor chaining rules.<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Use access modifiers. (Objective 1.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="C" QNo="2" id="C 2">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">4243</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">4342</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due only to an error on line #1]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due only to an error on line #2]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due to errors on both lines #1 and #2]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Only instance methods can be overridden, and calls to <font face="Courier New">super</font> only apply to overridden methods.<br><br><b>A, B, D, E, </b>and<b> F</b> are incorrect based on the previous statement.]]></text></feedbacks><hint><text order="1"><![CDATA[The <font face="Courier New">static</font> modifier is important!<br><br>Reference: Chapter 2: <font face="Courier New">static</font> members<br><br>Objective: Override methods. (Objective 1.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="3" id="C 3">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-abc</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-cba</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-adbc</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-dabc</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-eabc</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. In class <font face="Courier New">A</font>, the call to the <font face="Courier New">private</font> constructor is made only from within <font face="Courier New">A</font>, and it runs before the rest of the <font face="Courier New">protected</font> constructor.<br><br><b>A, B, C, E, F, </b>and<b> G</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember how <font face="Courier New">this</font> and <font face="Courier New">super</font> work.<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Overload constructors and other methods appropriately. (Objective 1.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;4;6;7" isAttemped="false" userans="" chapter="C" QNo="4" id="C 4">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0401q.jpg]]></image><text order="3"><![CDATA[Which, inserted at <font face="Courier New">// insert code</font>, will NOT compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Bongo b4 = b2;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Bongo b5 = (Bongo) b2;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Bango b6 = b3;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Bango b7 = (Bango) b3;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Bingo b8 = b3;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">Bingo b9 = (Bingo) b3;</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">Bango b10 = (Bongo) b3;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, C, D, F, </b>and<b> G</b> are all correct assignments. <b>G</b> is correct since a <font face="Courier New">Bongo</font> can do everything a <font face="Courier New">Bango</font> can do.<br><br><b>A </b>and<b> E</b> are incorrect because they will not compile. <b>A</b> needs a cast to convert <font face="Courier New">b2</font> to a <font face="Courier New">Bongo</font>, while <b>E</b> needs a cast to convert <font face="Courier New">b3</font> to a <font face="Courier New">Bingo</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Who can do everything that someone else can do?<br><br>Reference: Chapter 2: Object casting<br><br>Objective: Use the <font face="Courier New">instanceof</font> operator and casting. (Objective 1.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4" isAttemped="false" userans="" chapter="C" QNo="5" id="C 5">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0501q.jpg]]></image><text order="3"><![CDATA[Which are possible as output from calling <font face="Courier New">Helper.help</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">bang tool bang</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">bang tool work</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">work tool bang</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">work tool work</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Code fails to compile]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>D</b> are correct. <font face="Courier New">Helper.help()</font> can be passed <font face="Courier New">Tool</font> or any subclass of <font face="Courier New">Tool</font>. Since <font face="Courier New">Hammer</font> is a subclass, <font face="Courier New">bang</font> can be in the output.<br><br><b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What type(s) are required?<br><br>Reference: Chapter 2: Overriding methods<br><br>Objective: Use virtual method invocation. (Objective 1.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="C" QNo="6" id="C 6">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0601q.jpg]]></image><text order="3"><![CDATA[Which will fulfill the <font face="Courier New">equals()</font> and <font face="Courier New">hashCode()</font> contracts for this class? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam03_0601c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam03_0602c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam03_0603c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam03_0604c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and<b> D</b> are correct. The <font face="Courier New">equals()</font> algorithm must be at least as precise in defining what "meaningfully equivalent" means as the <font face="Courier New">hashCode()</font> method is.<br><br><b>A </b>and<b> B</b> are incorrect because these <font face="Courier New">equals()</font> implementations would allow instances to be equal that <font face="Courier New">hashCode()</font> would not see as equal.]]></text></feedbacks><hint><text order="1"><![CDATA[The matching criteria should be the same.<br><br>Reference: Chapter 11: Overriding <font face="Courier New">hashCode()</font><br><br>Objective: Override methods from the <font face="Courier New">Object</font> class to improve the functionality of your class. (Objective 1.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="C" QNo="7" id="C 7">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0701q.jpg]]></image><text order="3"><![CDATA[If the output is <font face="Courier New">x = 1111</font>, which will always be true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">x2.equals(x1) == true</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">x3.hashCode() != x4.hashCode()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">x5.hashCode() == x6.hashCode()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">x8.equals(x7) == true</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. By contract, if two objects are equivalent according to the <font face="Courier New">equals()</font> method, their <font face="Courier New">hashCode()</font> method must evaluate them to be <font face="Courier New">==</font>.<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because if the <font face="Courier New">hashCode()</font> values are not equal, the two objects must not be equal. <b>B</b> is incorrect because if <font face="Courier New">equals()</font> is not <font face="Courier New">true</font>, there is no guarantee of any result from <font face="Courier New">hashCode()</font>. <b>D</b> is incorrect because <font face="Courier New">hashCode()</font> will often return <font face="Courier New">equal values</font>, even if the two objects do not evaluate to <font face="Courier New">equals()</font> being <font face="Courier New">true</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[If objects aren't equal, can their <font face="Courier New">hashCodes</font> be?<br><br>Reference: Chapter 11: Overriding <font face="Courier New">hashCode()</font><br><br>Objective: Override methods from the <font face="Courier New">Object</font> class to improve the functionality of your class. (Objective 1.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3" isAttemped="false" userans="" chapter="C" QNo="8" id="C 8">
			<qst><text order="1"><![CDATA[Which are legitimate package declarations for a source file? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">package utils.mystuff.com;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">package com.mystuff.*;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">package com.mystuff.utils;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">package com.mystuff.utils;</font><br><font face="Courier New">&#160;&#160;package com.yourstuff.other;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and<b> C</b> are correct, although <b>A</b> is very, very unconventional, and you really don't want to name your packages this way... other programmers will hurt you.<br><br><b>B</b> and <b>D</b> are incorrect. <b>B</b> is incorrect because wildcards are used in imports, not in packages. <b>D</b> is incorrect because only a single package may be declared in a source file.]]></text></feedbacks><hint><text order="1"><![CDATA[How many packages can a class belong to?<br><br>Reference: Chapter 1: Package rules<br><br>Objective: Use <font face="Courier New">package</font> and <font face="Courier New">import</font> statements. (Objective 1.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="C" QNo="9" id="C 9">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_0901q.jpg]]></image><text order="3"><![CDATA[with the command line:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam03_0902q.jpg]]></image><text order="5"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-A</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">A.</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-A.</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-A.</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">_-A.</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct. The only thing wrong with this code is that the <font face="Courier New">static import</font> did not specify the member to be imported. This question is using valid (but weird) identifiers, var-args in main, and pre-incrementing logic.<br><br><b>A, B, C, D, E, </b>and<b> G</b> are incorrect based on the above. If the code was correct, <b>B</b> would be correct.]]></text></feedbacks><hint><text order="1"><![CDATA[Assume all of the identifiers are correct.<br><br>Reference: Chapter 1: Static imports<br><br>Objective: Use <font face="Courier New">package</font> and <font face="Courier New">import</font> statements. (Objective 1.7)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="C" QNo="10" id="C 10">
			<qst><text order="1"><![CDATA[Given the default classpath:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1001q.jpg]]></image><text order="3"><![CDATA[and the following three files:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam03_1002q.jpg]]></image><text order="5"><![CDATA[Which must be added to <font face="Courier New">TestXcom.java</font> to allow it to compile and run without exception? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">import xcom;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">import xcom.A;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">import xcom.B;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">package xcom;</font><br><font face="Courier New">&#160;&#160;import xcom.*;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">TextXcom.java</font> will compile and run without any changes]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. <font face="Courier New">TestXcom</font> doesn't need to know anything about class <font face="Courier New">A</font>.<br><br><b>A,</b> <b>B, D,</b> and <b>E</b> are incorrect. <b>A</b> uses incorrect syntax. A wildcard or a class must be specified. <b>B</b> won't hurt anything, but <b>C</b> is necessary. <b>D</b> is also incorrect because <font face="Courier New">TestXcom</font> is in the wrong directory to be in <font face="Courier New">package xcom</font>.<b> E</b> is incorrect because <b>C</b> needs to be added to <font face="Courier New">TestXcom.java</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[What classes does <font face="Courier New">TextXcom</font> need to know about?<br><br>Reference: Chapter 1: Using <font face="Courier New">import</font> statements<br><br>Objective: Use <font face="Courier New">package</font> and <font face="Courier New">import</font> statements. (Objective 1.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="11" id="C 11">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">ADG</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">BEH</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">CFI</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">ABDEGH</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">BAEDHG</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">GHDEAB</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">HGEDBA</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Remember, abstract classes can provide concrete implementations. In the code, first the implicit calls to <font face="Courier New">super</font> are made. Then, for each constructor, the <font face="Courier New">init</font> block runs, after which the rest of the constructor's statements run.<br><br><b>A, B, C, E, F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the rules for method implementations in abstract classes, and distinguish between <font face="Courier New">init</font> blocks, <font face="Courier New">static init</font> blocks, and constructors.<br><br>Reference: Chapter 3: Initialization blocks<br><br>Objective: Construct abstract Java classes and subclasses. (Objective 2.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="C" QNo="12" id="C 12">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-s</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-ss</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-sss</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-ssss</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-ssssss</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The <font face="Courier New">go()</font> method is called from the <font face="Courier New">static init</font> block, and then from <font face="Courier New">main</font>. The nonstatic <font face="Courier New">init</font> block is never invoked because no instance of TarsierX is created.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[When are <font face="Courier New">init</font> blocks invoked, and when are <font face="Courier New">static init</font> blocks invoked?<br><br>Reference: Chapter 3: Initialization blocks<br><br>Objective: Use the <font face="Courier New">static</font> and <font face="Courier New">final</font> keywords. (Objective 2.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="C" QNo="13" id="C 13">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1301q.jpg]]></image><text order="3"><![CDATA[Which, inserted at line 7, creates an instance of <font face="Courier New">Bar</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 12]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Foo.Bar b = new Foo.Bar();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Foo.Bar b = f.new Bar();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Bar b = new f.Bar();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Bar b = f.new Bar();</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Foo.Bar b = new f.Bar();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct because the syntax is correct&#8212;using both names (the enclosing class and the inner class) in the reference declaration, then using a reference to the enclosing class to invoke <font face="Courier New">new</font> on the inner class.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect because they all use incorrect syntax. <b>A</b> is incorrect because it doesn't use a reference to the enclosing class and also because it includes both names in the call to <font face="Courier New">new</font>. <b>C</b> is incorrect because it doesn't use the enclosing class name in the reference variable declaration and because the new syntax is wrong. <b>D</b> is incorrect because it doesn't use the enclosing class name in the reference variable declaration. <b>E</b> is incorrect because the <font face="Courier New">new</font> syntax is wrong.]]></text></feedbacks><hint><text order="1"><![CDATA[At a minimum the compiler has to be able to find <font face="Courier New">Bar</font>.<br><br>Reference: Chapter 12: Inner classes<br><br>Objective: Create top-level and nested classes. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="C" QNo="14" id="C 14">
			<qst><text order="1"><![CDATA[Which are true about an anonymous inner class? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 12]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. It can extend exactly one class and implement exactly one interface.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. It can extend exactly one class and implement multiple interfaces.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. It can extend exactly one class or implement exactly one interface.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. It can implement multiple interfaces regardless of whether it also extends a class.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. It can implement multiple interfaces if it does not extend a class.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct because the syntax of an anonymous inner class allows for only one named type after the <font face="Courier New">new</font>, and that type must be either a single interface (in which case the anonymous class implements that one interface) or a single class (in which case the anonymous class extends that one class).<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are all incorrect because they don't follow the syntax rules described in the response for <b>C</b>.]]></text></feedbacks><hint><text order="1"><![CDATA[Let's not ask too much of an inner class.<br><br>Reference: Chapter 12: Inner classes<br><br>Objective: Create top-level and nested classes. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5" isAttemped="false" userans="" chapter="C" QNo="15" id="C 15">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1501q.jpg]]></image><text order="3"><![CDATA[Which construct an anonymous inner class instance? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 12]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Runnable r = new Runnable() { };</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Runnable r = new Runnable(public void run() { });</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Runnable r = new Runnable { public void run(){}};</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Runnable r = new Runnable() {public void run{}};</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">System.out.println(new Runnable() {public void run() { }});</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">System.out.println(new Runnable(public void run() {}));</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. It defines an anonymous inner class instance, which also means it creates an instance of that new anonymous class at the same time. The anonymous class is an implementer of the <font face="Courier New">Runnable</font> interface; it must override the <font face="Courier New">run()</font> method of <font face="Courier New">Runnable</font>.<br><br><b>A,</b> <b>B, C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because it doesn't override the <font face="Courier New">run()</font> method, so it violates the rules of interface implementation. <b>B,</b> <b>C,</b> and <b>D</b> use incorrect syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[You implement an actual <font face="Courier New">run()</font> method.<br><br>Reference: Chapter 12: Inner classes<br><br>Objective: Create top-level and nested classes. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="16" id="C 16">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">5</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">6</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">18</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">21</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">22</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The key points to consider are that it's legal to switch on an <font face="Courier New">enum</font>, switches use entry point logic, and an <font face="Courier New">enum</font>'s ordinal is similar to an array's index.<br><br><b>A, B, C, E, </b>and<b> F</b> are incorrect based on the previous statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember that switches use entry-point logic.<br><br>Reference: Chapter 1: Enumerations<br><br>Objective: Use enumerated types. (Objective 2.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4;6" isAttemped="false" userans="" chapter="C" QNo="17" id="C 17">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1701q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The code compiles.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The code compiles if only line 1 is removed.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The code compiles if only line 3 is removed.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The code compiles if only line 5 is removed.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code compiles if lines 1 and 3 are removed.]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code compiles if lines 1, 3, and 5 are removed.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> and <b>F</b> are correct. Line 5 is the only line that will not compile, because <font face="Courier New">enum</font>s cannot be local to a method.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which declaration seems the least useful for an <font face="Courier New">enum</font>?<br><br>Reference: Chapter 1: Enumerations<br><br>Objective: Use enumerated types. (Objective 2.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="C" QNo="18" id="C 18">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1801q.jpg]]></image><text order="3"><![CDATA[Which, inserted independently at line 3, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Faster f = Faster.Higher;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Faster f = Better.Faster.Higher;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Better.Faster f = Better.Faster.Higher;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Bigger.Faster f = Bigger.Faster.Higher;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Better.Faster f2; f2 = Better.Faster.Longer;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">Better b; b.Faster = f3; f3 = Better.Faster.Longer;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>E</b> are correct because they use correct syntax for accessing an <font face="Courier New">enum</font> from another class.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>F</b> are incorrect because they use incorrect syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[This is totally about syntax that you'll have to know. No tricks, you just have to know the syntax. As always, we recommend writing many small programs to study the exam topics.<br><br>Reference: Chapter 1: Enumerations<br><br>Objective: Use enumerated types. (Objective 2.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="C" QNo="19" id="C 19">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_1901q.jpg]]></image><text order="3"><![CDATA[Which code fragment(s) will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">interface Base2 implements Base { }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">abstract class Class2 extends Base {</font><br><font face="Courier New">&#160;&#160;public boolean m1() { return true; } }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">abstract class Class2 implements Base { }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">abstract class Class2 implements Base {</font><br><font face="Courier New">&#160;&#160;public boolean m1() { return (true); } }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">class Class2 implements Base {</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;boolean m1() { return false; }</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;byte m2(short s) { return 42; } }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>D</b> are correct. <b>C</b> is correct because an abstract class doesn't have to implement any or all of its interface's methods. <b>D</b> is correct because the method is correctly implemented.<br><br><b>A,</b> <b>B,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because interfaces don't implement anything. <b>B</b> is incorrect because classes don't extend interfaces. <b>E</b> is incorrect because interface methods are implicitly public, so the methods being implemented must be public.]]></text></feedbacks><hint><text order="1"><![CDATA[When does method implementation actually have to happen? Also, what is implicit in these declarations?<br><br>Reference: Chapter 2: Interfaces<br><br>Objective: Write code that declares, implements, or extends interfaces. (Objective 3.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5;6" isAttemped="false" userans="" chapter="C" QNo="20" id="C 20">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_2001q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Woop</font> IS-A<font face="Courier New"> Hmpf</font> and IS-A<font face="Courier New"> Zing</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Zing</font> IS-A<font face="Courier New"> Woop</font> and HAS-A<font face="Courier New"> Hmpf</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Hmpf</font> HAS-A<font face="Courier New"> Woop</font> and<font face="Courier New"> Woop</font> HAS-A<font face="Courier New"> Zing</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Woop</font> HAS-A<font face="Courier New"> Hmpf</font> and<font face="Courier New"> Woop</font> HAS-A<font face="Courier New"> Zing</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Zing</font> HAS-A<font face="Courier New"> Hmpf</font> and<font face="Courier New"> Woop</font> IS-A<font face="Courier New"> Zing</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">Hmpf</font> HAS-A<font face="Courier New"> Zing</font> and<font face="Courier New"> Woop</font> HAS-A<font face="Courier New"> Hmpf</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E </b>and<b> F</b> are correct. <font face="Courier New">Woop</font> inherits a <font face="Courier New">Hmpf</font> from <font face="Courier New">Zing</font>.<br><br><b>A, B, C, </b>and<b> D</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[What is inherited in this case?<br><br>Reference: Chapter 10: IS-A<br><br>Objective: Choose between interface inheritance and class inheritance. (Objective 3.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;4" isAttemped="false" userans="" chapter="C" QNo="21" id="C 21">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. IS-A relationships always rely on inheritance]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. IS-A relationships always rely on instance variables]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. IS-A relationships always require at least two class types]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Polymorphism always relies on IS-A relationships]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. IS-A relationships are always tightly coupled]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, C, </b>and<b> D</b> are correct.<br><br><b>B</b> and <b>E</b> are incorrect. <b>B</b> is incorrect because inheritance is independent of the existence of instance variables. <b>E</b> is incorrect because coupling is not used to evaluate classes within the same inheritance tree.]]></text></feedbacks><hint><text order="1"><![CDATA[HAS-A classes don't typically inherit from each other.<br><br>Reference: Chapter 10: IS-A<br><br>Objective: Apply cohesion, low-coupling, IS-A, and HAS-A principles. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="C" QNo="22" id="C 22">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. HAS-A relationships always rely on inheritance]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. HAS-A relationships always rely on instance variables]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. HAS-A relationships always require at least two class types]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. HAS-A relationships always rely on polymorphism]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. HAS-A relationships are always tightly coupled]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> and <b>D</b> are incorrect because they describe other object-oriented topics. <b>C</b> is incorrect because a class can have an instance of itself. <b>E</b> is incorrect because while HAS-A relationships can lead to tight coupling, it is by no means always the case.]]></text></feedbacks><hint><text order="1"><![CDATA[How do you access the thing your class "has"?<br><br>Reference: Chapter 10: IS-A<br><br>Objective: Apply cohesion, low-coupling, IS-A, and HAS-A principles. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="23" id="C 23">
			<qst><text order="1"><![CDATA[Which instantiation creates the tightest coupling?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">BioDiesel b1 = new BioDiesel();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">BioDiesel b2 = new BioDiesel(new String("canola"));</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">BioDiesel b3 = new BioDiesel(new Integer(42));</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">BioDiesel b4 = new BioDiesel(new Viscosity());</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. This instantiation requires that <font face="Courier New">BioDiesel</font> knows something about the <font face="Courier New">Viscosity</font> class.<br><br><b>A, B, </b>and<b> C</b> are incorrect. All of these classes are part of the standard API.]]></text></feedbacks><hint><text order="1"><![CDATA[What's in the standard API?<br><br>Reference: Chapter 10: Coupling<br><br>Objective: Apply object composition principles (including HAS-A relationships). (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3" isAttemped="false" userans="" chapter="C" QNo="24" id="C 24">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A class must be well encapsulated in order to be highly cohesive]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Method delegation is used in object composition]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Good encapsulation helps promote loose coupling]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. High cohesion allows you to change a method's implementation without having to change its API]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Tight coupling helps promote low cohesion]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>C</b> are correct statements concerning these OO principles.<br><br><b>A,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because cohesion refers to how well the purpose of a class is focused. <b>D</b> is also incorrect, because this is the description of encapsulation. <b>E</b> is nonsense.]]></text></feedbacks><hint><text order="1"><![CDATA[Distinguish between key object-oriented concepts.<br><br>Reference: Chapter 10: Composition<br><br>Objective: Apply object composition principles (including HAS-A relationships). (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="C" QNo="25" id="C 25">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_2501q.jpg]]></image><text order="3"><![CDATA[Which is true?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. This is the factory pattern]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. This is almost the factory pattern but contains an error]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. This is object composition]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. This is almost object composition but contains an error]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. This is the singleton pattern]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. This is almost the singleton pattern but contains an error]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. While this class does not follow good naming conventions, it does have a single instance of <font face="Courier New">Stadium</font> that it returns each time. With proper naming conventions, <font face="Courier New">i</font> should only be used for integer indexes, and singleton methods should be called <font face="Courier New">getInstance()</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect. <b>A</b> and <b>B</b> are incorrect because the factory pattern involves interfaces. <b>C</b> and <b>D</b> are incorrect because methods are not delegating to another class and there is no interface. <b>F</b> is incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Ignore the object and method names and just think about the code.<br><br>Reference: Chapter 10: Object composition principles<br><br>Objective: Design a class using the singleton design pattern. (Objective 3.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2" isAttemped="false" userans="" chapter="C" QNo="26" id="C 26">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A factory can create a new object each time you call it]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A factory can have a public constructor]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A factory implements a singleton]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A singleton can create a new object each time you call it]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A singleton can have a public constructor]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. A singleton implements IS-A]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>B</b> are correct. A factory typically returns a new instance of an object each time you call a method such as <font face="Courier New">newXXX()</font>. The <font face="Courier New">newXXX()</font> methods are helper methods for configuration. Callers can still use a constructor to instantiate the object directly.<br><br><b>C, D,</b> <b>E,</b> and <b>F</b> are incorrect. <b>C</b> is incorrect because factory and singleton are different patterns.<b> D,</b> <b>E,</b> and <b>F</b> are incorrect because singletons require calling a static method to return the same object each time. Singletons do not implement an interface or extend a superclass.]]></text></feedbacks><hint><text order="1"><![CDATA[Which pattern can return a different object each time?<br><br>Reference: Chapter 10: Object composition principles<br><br>Objective: Design and create objects using a factory and use factories from the API. (Objective 3.7)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;6" isAttemped="false" userans="" chapter="C" QNo="27" id="C 27">
			<qst><text order="1"><![CDATA[Given that <font face="Courier New">CharSequence</font> is an interface implemented by both the <font face="Courier New">String</font> and <font face="Courier New">StringBuilder</font> classes, and given the following method:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_2701q.jpg]]></image><text order="3"><![CDATA[Which can be inserted at <font face="Courier New">// INSERT HERE</font> to compile and run without error?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">return s;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">return (Object) s;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">return s.toString();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">return new StringBuilder(s);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">return (S) new StringBuilder(s);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">return null;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>and<b> F</b> are correct. Whatever type <font face="Courier New">S</font> may represent, we know that <font face="Courier New">s</font> is of that type, and <font face="Courier New">null</font> can be assigned to any type.<br><br><b>B,</b> <b>C,</b> and <b>E</b> are incorrect. <b>B</b> is incorrect because returning an <font face="Courier New">Object</font> is too general. <b>C, D, </b>and<b> E</b> are incorrect because although <font face="Courier New">String</font> and <font face="Courier New">StringBuffer</font> are both subtypes of <font face="Courier New">CharSequence</font>, they are not necessarily the same subtype as whatever is passed in (<font face="Courier New">S</font>).]]></text></feedbacks><hint><text order="1"><![CDATA[What is necessarily a subtype of what?<br><br>Reference: Chapter 11: Generic methods<br><br>Objective: Create a generic class. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4;5" isAttemped="false" userans="" chapter="C" QNo="28" id="C 28">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_2801q.jpg]]></image><text order="3"><![CDATA[Which can be inserted at <font face="Courier New">// INSERT HERE</font> to compile and run without error?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">public static &#60;T&#62; List&#60;T&#62; backwards(List&#60;T&#62; input)</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public static &#60;T&#62; List&#60;T&#62; backwards(List&#60;? extends T&#62; input)</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">public static &#60;T&#62; List&#60;T&#62; backwards(List&#60;? super T&#62; input)</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">public static &#60;T&#62; List&#60;? extends T&#62; backwards(List&#60;T&#62; input)</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">public static &#60;T&#62; List&#60;? super T&#62; backwards(List&#60;T&#62; input)</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">public static &#60;? extends T&#62; List&#60;T&#62; backwards(List&#60;T&#62; input)</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">public static &#60;? super T&#62; List&#60;T&#62; backwards(List&#60;T&#62; input)</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, D, </b>and<b> E</b> are correct declarations.<br><br><b>C,</b> <b>F,</b> and <b>G</b> are incorrect. <b>C</b> is incorrect because if the input can contain any supertype of <font face="Courier New">T</font> (such as <font face="Courier New">Object</font>), and those elements can't be added to an output list of type <font face="Courier New">T</font>. <b>F </b>and<b> G</b> are incorrect because you can't use wildcards in the type variable declaration.]]></text></feedbacks><hint><text order="1"><![CDATA[When are wildcards legal?<br><br>Reference: Chapter 11: Generic methods<br><br>Objective: Create a generic class. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="7" isAttemped="false" userans="" chapter="C" QNo="29" id="C 29">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_2901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1 2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">a b</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">1 b</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">a 2</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code does not compile]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. None of the above]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>G</b> is correct. The <font face="Courier New">mangle()</font> method essentially creates a new <font face="Courier New">Map</font> with the values and keys reversed. It's even typed correctly&#8212;if you pass it a <font face="Courier New">Map&#60;String,Integer&#62;</font>, it will return a <font face="Courier New">Map&#60;Integer, String&#62;</font>. Unfortunately, the <font face="Courier New">main</font> method calls it using a raw <font face="Courier New">Map</font>, with no type information. This causes a warning but does not prevent compiling and running. The call to <font face="Courier New">m2.get("a")</font> returns a <font face="Courier New">null</font> (with no error), while the call to <font face="Courier New">m2.get(2)</font> returns <font face="Courier New">"b"</font>, so the output is <font face="Courier New">"null b"</font>, not listed. (Note: On the real exam you will NOT see any "None of the above" questions, but our job is to toughen you up!)<br><br><b>A, B, C, D, E, </b>and<b> F</b> are incorrect based on the preceding explanation.]]></text></feedbacks><hint><text order="1"><![CDATA[What if the compiler issues a warning?<br><br>Reference: Chapter 11: Generic methods<br><br>Objective: Create a generic class. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;6" isAttemped="false" userans="" chapter="C" QNo="30" id="C 30">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3001q.jpg]]></image><text order="3"><![CDATA[Which replacement(s) can you make without failing compilation? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Replace line 3 with <font face="Courier New">class Check&#60;&#62;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Replace line 3 with <font face="Courier New">class Check&#60;?&#62;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Replace line 5 with <font face="Courier New">Map&#60;Weather, A&#62; l1 = new HashMap&#60;&#62;();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Replace line 5 with <font face="Courier New">Map&#60;Weather, A&#62; l1 = new HashMap&#60;?, ?&#62;();</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Replace line 5 with <font face="Courier New">Map&#60;&#62; l1 = new HashMap&#60;Weather, A&#62;();</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Replace line 5 with <font face="Courier New">Map&#60;?, ?&#62; l1 = new HashMap&#60;Weather, A&#62;();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>F</b> are correct. <b>C</b> is the diamond operator introduced in Java 7. It allows you to reuse the type definitions to the left of an assignment operator without repeating them. <b>F</b> is a wildcard. You can assign to a wildcard because the right side specifies the types.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> and <b>B</b> are incorrect because a generic class must define a type parameter. <b>D</b> is incorrect because Java needs to know what types to create. <b>E</b> is incorrect because the diamond operator can only be on the right side of an assignment.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the difference between <font face="Courier New">&#60;&#62;</font> and <font face="Courier New">&#60;?&#62;</font>?<br><br>Reference: Chapter 11: Generic methods<br><br>Objective: Use the diamond syntax to create a collection. (Objective 4.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;6" isAttemped="false" userans="" chapter="C" QNo="31" id="C 31">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3101q.jpg]]></image><text order="3"><![CDATA[Which may be inserted at <font face="Courier New">// INSERT HERE</font> to compile and run without error? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">tree.add(3.14);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">tree.add("42");</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">tree.add(Integer.valueOf("-1"));</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">tree.add(null);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">tree.add(new Long(123));</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">tree.add(0xCAFE);</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. None of the above]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and <b>F </b>are correct. The <font face="Courier New">TreeSet</font> will allow only <font face="Courier New">Number</font>s&#8212;but those <font face="Courier New">Number</font>s must be mutually comparable as well. The <font face="Courier New">108</font> autoboxes to an <font face="Courier New">Integer</font>, so anything else added must be another <font face="Courier New">Integer</font>&#8212;otherwise, an error will result. <b>C</b> is correct since <font face="Courier New">valueOf</font> returns an <font face="Courier New">Integer</font>. <b>F</b> is correct because <font face="Courier New">0xCAFE</font> is a valid hex literal for an <font face="Courier New">int</font>.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect. <b>A</b> is incorrect because <font face="Courier New">3.14</font> autoboxes to a <font face="Courier New">Double</font>. <b>B</b> is incorrect because <font face="Courier New">"42"</font> is a <font face="Courier New">String</font>. <b>D</b> is incorrect because it will cause a <font face="Courier New">NullPointerException</font>. <b>E</b> is incorrect because it adds a <font face="Courier New">Long</font>. <b>G</b> is incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Are all subclasses of <font face="Courier New">Number</font> mutually comparable?<br><br>Reference: Chapter 11: Generic types<br><br>Objective: Analyze the interoperability of collections that use raw and generic types. (Objective 4.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="C" QNo="32" id="C 32">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">hi hi</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">hi low</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">low hi</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. The first invocation of the <font face="Courier New">go()</font> method tests whether boxing beats out var-args, which it does.<br><br><b>A, B, D, </b>and<b> E</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Both autoboxing and var-args must be considered.<br><br>Reference: Chapter 11. Method matching<br><br>Objective: Use wrapper classes and autoboxing. (Objective 4.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="C" QNo="33" id="C 33">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">4</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">6</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">8</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">[2, 4]</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">[6, 8]</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">[2, 4, 6]</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The <font face="Courier New">ceiling()</font> method was added to <font face="Courier New">TreeSet</font> in Java 6. The <font face="Courier New">ceiling()</font> method returns the smallest element <font face="Courier New">&#62;=</font> (greater than or equal) to the argument. The newly added <font face="Courier New">higher()</font> method returns the smallest element <font face="Courier New">&#62;</font> (greater than) the argument.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.<br><br>Note to readers: As you might recall from the book, we're not sure you'll get any questions on the real exam pertaining to navigable or backed collections, but we added a question here, just in case.]]></text></feedbacks><hint><text order="1"><![CDATA[Are <font face="Courier New">TreeSet</font>s sorted?<br><br>Reference: Chapter 11: Navigable collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="34" id="C 34">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation fails]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">one two three four</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">four three two one</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">four one three two</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">one two three four one</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">one four three two one</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. The print order is not guaranteed]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. <font face="Courier New">TreeSet</font> assures no duplicate entries; also, when it is accessed it will return elements in natural order, which for strings means alphabetical order.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> <b>F,</b> <b>G,</b> and <b>H</b> are incorrect based on the logic described above. (Note: Even though as of Java 5 you don't have to use an iterator, you still can.)]]></text></feedbacks><hint><text order="1"><![CDATA[Is it okay to use old-fashioned code here?<br><br>Reference: Chapter 11: Collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4;6" isAttemped="false" userans="" chapter="C" QNo="35" id="C 35">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3501q.jpg]]></image><text order="3"><![CDATA[Which, inserted at <font face="Courier New">// insert code here</font>, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">List&#60;String&#62; x = new LinkedList&#60;String&#62;();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">TreeSet&#60;String&#62; x = new TreeSet&#60;String&#62;();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">HashSet&#60;String&#62; x = new HashSet&#60;String&#62;();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Queue&#60;String&#62; x = new PriorityQueue&#60;String&#62;();</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">ArrayList&#60;String&#62; x = new ArrayList&#60;String&#62;();</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">LinkedList&#60;String&#62; x = new LinkedList&#60;String&#62;();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> and <b>F</b> are correct. The <font face="Courier New">poll()</font> method is associated with <font face="Courier New">Queue</font>s. The <font face="Courier New">LinkedList</font> class implements the <font face="Courier New">Queue</font> interface.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because the List interface does not implement <font face="Courier New">Queue</font>, and the polymorphic instantiation would restrict <font face="Courier New">x</font> to invoking only those methods declared in the List interface. <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[The important method to consider is <font face="Courier New">poll()</font>.<br><br>Reference: Chapter 11: Collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="C" QNo="36" id="C 36">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Veronica Wallace Duncan</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Veronica Wallace Duncan 42</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Duncan Wallace Veronica</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">42 Duncan Wallace Veronica</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception occurs at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. There is a compiler warning at line 19 because of an unchecked assignment, but other than that everything compiles and runs. Although <font face="Courier New">q</font> was originally declared as <font face="Courier New">Queue&#60;String&#62;</font>, in <font face="Courier New">showAll()</font> it's passed as an untyped <font face="Courier New">Queue</font>&#8212;nothing in the compiler or JVM prevents us from adding an <font face="Courier New">Integer</font> after that. The <font face="Courier New">add()</font> method puts things at the end of the queue, while <font face="Courier New">remove()</font> takes them from the beginning, so everything prints in the order in which it was inserted.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does it mean that <font face="Courier New">showAll()</font> takes a <font face="Courier New">Queue</font>?<br><br>Reference: Chapter 11: Collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5;7" isAttemped="false" userans="" chapter="C" QNo="37" id="C 37">
			<qst><text order="1"><![CDATA[A programmer needs his application to support a collection that will allow the fastest possible traversal of extended travel itineraries. In addition, the application must support the fastest possible traversal of all customers based on the order in which they applied for discount cards. Which class(es) best support these requirements? (Choose one or two.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.util.Vector</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.util.HashSet</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.util.TreeSet</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.util.HashList</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">java.util.ArrayList</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">java.util.LinkedList</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">java.util.LinkedHashSet</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> and <b>G</b> are correct. <font face="Courier New">ArrayList</font> provides the fastest iterations through collections that can have duplicates, and duplicates are common in extended itineraries. <font face="Courier New">LinkedHashSet</font> provides the fastest iteration through a (no-duplicates) set where you care about the order in which entries were added.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which of these classes are more specialized?<br><br>Reference: Chapter 11: Collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="38" id="C 38">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_3801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">3</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The <font face="Courier New">add()</font> method does not apply to <font face="Courier New">Map</font>s. To insert entries into <font face="Courier New">Map</font>s you must use the <font face="Courier New">put()</font> method. If the code used <font face="Courier New">put()</font>, <b>C</b> would be correct.<br><br><b>A, B, C, </b>and<b> E</b> are incorrect based on the previous statement.]]></text></feedbacks><hint><text order="1"><![CDATA[How do you add elements to <font face="Courier New">Map</font>s?<br><br>Reference: Chapter 11: Collections<br><br>Objective: Create and use a Map. (Objective 4.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="C" QNo="39" id="C 39">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. You can use <font face="Courier New">java.lang.Comparable</font> and <font face="Courier New">java.util.Comparator</font> to sort collections whose elements are of any valid Java type, as long as all of the collection's elements are of the same class]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">java.lang.Object</font> class implements the <font face="Courier New">java.lang.Comparable</font> interface]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Many commonly used classes in the Java API (such as <font face="Courier New">String</font>, <font face="Courier New">Integer</font>, <font face="Courier New">Date</font>, and so on) implement the <font face="Courier New">java.lang.Comparable</font> interface]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. If your class implements <font face="Courier New">java.lang.Comparable</font> but you don't explicitly override <font face="Courier New">Comparable</font>'s method, collections containing elements of your class will be sorted in natural order by default]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. When using the <font face="Courier New">java.util.Comparator</font> interface, you will typically create a separate class for every different sort sequence you want to implement]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The <font face="Courier New">java.util.Comparator</font> interface's method can take either one or two arguments]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. The <font face="Courier New">binarySearch()</font>, <font face="Courier New">reverse()</font>, and <font face="Courier New">reverseOrder()</font> methods in the <font face="Courier New">java.util.Collections</font> class all require that the collection is sorted before the method can be invoked successfully]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and <b>E </b>are correct statements.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>F,</b> and <b>G</b> are incorrect. <b>A </b>is incorrect because if a class is final and does not already implement <font face="Courier New">Comparable</font>, then <font face="Courier New">Comparable</font> can't be used to sort that class. <b>B </b>is incorrect because <font face="Courier New">java.lang.Object</font> doesn't implement <font face="Courier New">java.lang.Comparable</font>. <b>D </b>is incorrect because you can't implement <font face="Courier New">Comparable</font> without implementing the <font face="Courier New">compareTo()</font> method. <b>F </b>is incorrect because <font face="Courier New">compare()</font> can take only two arguments. <b>G </b>is incorrect because the <font face="Courier New">reverse()</font> method does not require that a collection be sorted.]]></text></feedbacks><hint><text order="1"><![CDATA[These are important facts. Also, <font face="Courier New">Comparable</font> can't be added to final classes.<br><br>Reference: Chapter 11: Sorting collections<br><br>Objective: Use <font face="Courier New">java.util.Comparator</font> and <font face="Courier New">java.util.Comparable</font>. (Objective 4.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="C" QNo="40" id="C 40">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">[17, 42, 5, 812]</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">[5, 17, 42, 812]</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">[5, 42, 17, 812]</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E </b>is correct. Autoboxing will cause the value <font face="Courier New">812</font> to be cast to a <font face="Courier New">Long</font>. Since <font face="Courier New">Long</font> objects and <font face="Courier New">Integer</font> objects are not comparable, the call to <font face="Courier New">sort()</font> will throw an exception.<br><br><b>A, B, C, </b>and <b>D </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What's possible with boxing and what's true about runtime exceptions?<br><br>Reference: Chapter 11: Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="C" QNo="41" id="C 41">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Good</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Bad</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Ugly</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The code does not compile]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. There are a couple of things to notice. First, it's fine to declare the <font face="Courier New">Comparator</font> as an inner class. Second, the <font face="Courier New">compare()</font> method, as implemented, reverses the natural order... using the array element's SECOND character. Ouch!<br><br><b>B, C, D, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember what <font face="Courier New">compare()</font> returns mean.<br><br>Reference: Chapter 11: Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="42" id="C 42">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1 3 -5</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-1 -3 5</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">3 1 -5</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-3 -1 5</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code does not compile]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. The code will compile and run without error, but the order of the output cannot be determined.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Since we have a <font face="Courier New">TreeSet</font>, it doesn't matter in what order the numbers are added into each set&#8212;they still get sorted in increasing order. The <font face="Courier New">negate()</font> method returns a new <font face="Courier New">Numbers</font> with all negated values, but they're again sorted in increasing order.<br><br><b>A, B, C, E, F, </b>and<b> G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What superpower does <font face="Courier New">TreeSet</font> have?<br><br>Reference: Chapter 11: Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="C" QNo="43" id="C 43">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4301q.jpg]]></image><text order="3"><![CDATA[and the output:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam03_4302q.jpg]]></image><text order="5"><![CDATA[Which, added at <font face="Courier New">// insert code here</font>, will produce this output? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">public int compare(MyStuff m) { return name.compare(m.name); }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public int compare(MyStuff m) { return m.name.compare(name); }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">public int compareTo(MyStuff m) { return name.compareTo(m.name); }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">public int compareTo(MyStuff m) { return m.name.compareTo(name); }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. No code needs to be added to produce the listed output]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. The <font face="Courier New">Comparable</font> interface requires a <font face="Courier New">compareTo()</font> method, and the <font face="Courier New">Comparator</font> interface requires <font face="Courier New">compare()</font>. Since you want to sort alphabetically using <font face="Courier New">String</font>s to sort, you want to invoke <font face="Courier New">compareTo()</font> using this object, not the object passed to <font face="Courier New">compareTo()</font>.<br><br><b>A, B, D, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which method name makes more sense for a single argument?<br><br>Reference: Chapter 11: Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4;5" isAttemped="false" userans="" chapter="C" QNo="44" id="C 44">
			<qst><text order="1"><![CDATA[Which are true about using <font face="Courier New">java.util.Scanner</font> objects? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The default delimiter is the comma.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The default delimiter is whitespace.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">hasNext()</font> method causes the <font face="Courier New">Scanner</font> to advance through the data to be scanned.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">hasNext()</font> method does NOT cause the <font face="Courier New">Scanner</font> to advance through the data to be scanned.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">nextInt()</font> method causes the <font face="Courier New">Scanner</font> to advance through the data to be scanned.]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The <font face="Courier New">nextInt()</font> method does NOT cause the <font face="Courier New">Scanner</font> to advance through the data to be scanned.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, D, </b>and<b> E</b> are correct. It's important to understand which <font face="Courier New">Scanner</font> methods advance through data and which do not, because it's easy to create infinite loops if you use the wrong methods.<br><br><b>A,</b> <b>C,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[These methods work like <font face="Courier New">Iterator</font> methods.<br><br>Reference: Chapter 8: Regular expressions<br><br>Objective: Search, parse, and build strings (including <font face="Courier New">Scanner</font>, <font face="Courier New">StringTokenizer</font>, <font face="Courier New">StringBuilder</font>, <font face="Courier New">String</font>, and <font face="Courier New">Formatter</font>). (Objective 5.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="C" QNo="45" id="C 45">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4501q.jpg]]></image><text order="3"><![CDATA[Which, inserted independently at line 4, compile and produce the output <font face="Courier New">123 82</font>?<br>(Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam03_4501c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam03_4502c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam03_4503c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam03_4504c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam03_4505c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam03_4506c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>D</b> are correct. Whitespace is the default delimiter, and the <font face="Courier New">while</font> loop advances through the string using <font face="Courier New">nextInt()</font> or <font face="Courier New">next()</font>.<br><br><b>A,</b> <b>B, E,</b> and <b>F</b> are incorrect. <b>A</b> and <b>B</b> are incorrect because the <font face="Courier New">while</font> loop won't progress past the first non-<font face="Courier New">int</font>. <b>E</b> and <b>F</b> are incorrect because the <font face="Courier New">do</font> loop will loop endlessly once the first non-<font face="Courier New">int</font> is found, as <font face="Courier New">hasNext()</font> does not advance through data.]]></text></feedbacks><hint><text order="1"><![CDATA[Some methods move through a string, and some methods only report on what's in a string.<br><br>Reference: Chapter 8: Regular expressions<br><br>Objective: Search, parse, and build strings (including <font face="Courier New">Scanner</font>, <font face="Courier New">StringTokenizer</font>, <font face="Courier New">StringBuilder</font>, <font face="Courier New">String</font>, and <font face="Courier New">Formatter</font>). (Objective 5.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="C" QNo="46" id="C 46">
			<qst><text order="1"><![CDATA[Which are true about Java regex? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">\w</font> metacharacter searches for whitespace.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">\d</font> metacharacter searches for numeric digits.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">.</font> metacharacter searches for alphabetic characters.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The string <font face="Courier New">[af]</font> searches for a, b, c, d, e, or f characters.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because <font face="Courier New">\w</font> searches for "word" characters (digits, letters, and separators). <b>C</b> is incorrect as well because the <font face="Courier New">.</font> searches for any character. <b>D</b> is incorrect because <font face="Courier New">[a-f]</font> would actually be the correct string for this option.]]></text></feedbacks><hint><text order="1"><![CDATA[Think about word characters and ranges.<br><br>Reference: Chapter 8: Regular expressions<br><br>Objective: Search, parse, and replace strings by using regular expressions, using expression patterns for matching limited to <font face="Courier New">.</font> (dot), <font face="Courier New">*</font> (star), <font face="Courier New">+</font> (plus), <font face="Courier New">?</font>, <font face="Courier New">\d</font>, <font face="Courier New">\D</font>, <font face="Courier New">\s</font>, <font face="Courier New">\S</font>, <font face="Courier New">\w</font>, <font face="Courier New">\W</font>, <font face="Courier New">\b</font>, <font face="Courier New">\B</font>, <font face="Courier New">[]</font>, and <font face="Courier New">()</font>. (Objective 5.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;6;7" isAttemped="false" userans="" chapter="C" QNo="47" id="C 47">
			<qst><text order="1"><![CDATA[Which will compile and run without exception? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">System.out.format("%b", 123);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">System.out.format("%c", "x");</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">System.out.printf("%d", 123);</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">System.out.printf("%f", 123);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">System.out.printf("%d", 123.45);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">System.out.printf("%f", 123.45);</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">System.out.format("%s", new Long("123"));</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> <b>F,</b> and <b>G</b> are correct. The <font face="Courier New">%b</font> (boolean) conversion character returns <font face="Courier New">true</font> for any non-<font face="Courier New">null</font>, non-boolean argument.<br><br><b>B,</b> <b>D,</b> and <b>E</b> are incorrect. <b>B</b> is incorrect because the <font face="Courier New">%c</font> (character) conversion character expects a character, not a string. <b>D</b> is incorrect because the <font face="Courier New">%f</font> (floating-point) conversion character won't automatically promote an integer type. <b>E</b> is incorrect because the <font face="Courier New">%d</font> (integral) conversion character won't take a floating- point number. (Note: The <font face="Courier New">format()</font> and <font face="Courier New">printf()</font> methods behave identically.)]]></text></feedbacks><hint><text order="1"><![CDATA[This is all about what conversion characters match to what types.<br><br>Reference: Chapter 8: Formatting<br><br>Objective: Format strings using the formatting parameters <font face="Courier New">%b</font>, <font face="Courier New">%c</font>, <font face="Courier New">%d</font>, <font face="Courier New">%f</font>, and <font face="Courier New">%s</font> in format strings. (Objective 5.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="C" QNo="48" id="C 48">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4801q.jpg]]></image><text order="3"><![CDATA[and given that all methods of class <font face="Courier New">FileInputStream</font> throw an <font face="Courier New">IOException</font>, which is true? (Choose one.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6;Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. This program compiles successfully.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. This program fails to compile due to an error at line 4.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. This program fails to compile due to an error at line 6.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. This program fails to compile due to an error at line 9.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. This program fails to compile due to an error at line 13.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E </b>is correct. Any method (in this case, <font face="Courier New">the main()</font> method) that throws a checked exception (in this case, <font face="Courier New">in.close()</font>) must be called within a <font face="Courier New">try</font> clause, or the method must declare that it throws the exception. Either <font face="Courier New">main()</font> must declare that it throws an exception, or the call to <font face="Courier New">in.close()</font> in the <font face="Courier New">finally</font> block must fall inside a (in this case nested) <font face="Courier New">try-catch</font> block.<br><br><b>A, B, C, </b>and <b>D </b>are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember to handle or declare.<br><br>Reference: Chapters 6 and 7: Exceptions<br><br>Objective: Use <font face="Courier New">throw</font> and <font face="Courier New">throws</font> statements. (Objective 6.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4;5;6" isAttemped="false" userans="" chapter="C" QNo="49" id="C 49">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_4901q.jpg]]></image><text order="3"><![CDATA[Which lines cause compilation errors? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation fails at line 3]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation fails at line 5]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails at line 6]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails at line 8]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails at line 9]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails at line 11]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation succeeds]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D,</b> <b>E,</b> and <b>F</b> are correct. The correct syntax for a multi-catch block uses <font face="Courier New">|</font>, not <font face="Courier New">||</font>. Objects declared in a try-with-resources are only available within the <font face="Courier New">try</font> block.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[How do you catch multiple exceptions?<br><br>Reference: Chapter 7: Exceptions<br><br>Objective: Use the <font face="Courier New">try</font> statement with <font face="Courier New">multi-catch</font> and <font face="Courier New">finally</font> clauses (Objective 6.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4;5;6" isAttemped="false" userans="" chapter="C" QNo="50" id="C 50">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">AutoCloseable</font> extends <font face="Courier New">Closeable</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Closeable</font> extends <font face="Courier New">AutoCloseable</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Closeable</font> is a marker interface and does not require the implementer to define any methods]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A class implementing <font face="Courier New">Closeable</font> must implement at least one method]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Classes implementing <font face="Courier New">AutoCloseable</font> can be in the <font face="Courier New">try</font> of try-with-resources]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Classes implementing <font face="Courier New">Closeable</font> can be in the <font face="Courier New">try</font> of try-with-resources]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are correct. <font face="Courier New">AutoCloseable</font> was added after <font face="Courier New">Closeable</font>, and <font face="Courier New">Closeable</font> extends it for existing code to work. Both interfaces have a <font face="Courier New">close()</font> method to work with Automatic Resource Management for try-with-resources.<br><br><b>A</b> and <b>C</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which interface was added with Java 7?<br><br>Reference: Chapter 7: Exceptions<br><br>Objective: Develop code that uses try-with-resources statements (including using classes that implement the <font face="Courier New">AutoCloseable</font> interface). (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="C" QNo="51" id="C 51">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_5101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">threw ME</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. An uncaught exception is thrown]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due only to an error on line D]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due only to an error on line A]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due to multiple error(s) on line(s) A, B, and/or C]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The custom exception code is all valid, but it doesn't catch a runtime exception like the <font face="Courier New">ArithmeticException</font> that the code will throw.<br><br><b>A, C, D,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the Exception inheritance tree.<br><br>Reference: Chapter 6: Exception<br><br>Objective: Create custom exceptions. (Objective 6.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="C" QNo="52" id="C 52">
			<qst><text order="1"><![CDATA[Given that assertions are enabled, and given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_5201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">done</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">bar done</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">foo done</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">bar foo done</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An <font face="Courier New">AssertionError</font> is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>is correct. Both <font face="Courier New">assert</font> statements are true, so the <font face="Courier New">bar()</font> and <font face="Courier New">foo()</font> methods are not called.<br><br><b>B, C, D, E, </b>and <b>F </b>are incorrect based on the program logic described in the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the basic assertion rules.<br><br>Reference: Chapter 7: Using assertions<br><br>Objective: Test invariants by using assertions. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="C" QNo="53" id="C 53">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. It is not good practice to place assertions where you think execution should never reach]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. It is sometimes appropriate to call getters and setters from assertions]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Use assertions to verify the arguments of private methods]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Assertions can be disabled for a particular class]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Never throw an <font face="Courier New">AssertionError</font> explicitly]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and <b>D </b>are correct.<br><br><b>A,</b> <b>B,</b> and <b>E</b> are incorrect. <b>A </b>is incorrect because one of the most common uses of <font face="Courier New">assert</font> statements in debugging is to verify that locations in code that have been designed to be unreachable are in fact never reached. <b>B </b>is incorrect because it is not recommended for assertions to cause side effects, which setter methods would do. <b>E </b>is incorrect, throwing an <font face="Courier New">AssertionError</font> explicitly is considered bad practice.]]></text></feedbacks><hint><text order="1"><![CDATA[Review the basic assertion guidelines.<br><br>Reference: Chapter 7: Using assertions<br><br>Objective: Test invariants by using assertions. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="C" QNo="54" id="C 54">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_5401q.jpg]]></image><text order="3"><![CDATA[What is the result? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation fails.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A <font face="Courier New">NullPointerException</font> is never thrown.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A <font face="Courier New">NullPointerException</font> is always thrown.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A <font face="Courier New">NullPointerException</font> is sometimes thrown.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The JVM is not guaranteed to have a <font face="Courier New">console</font>. If it does not, the <font face="Courier New">System.console()</font> method returns a <font face="Courier New">null</font>.<br><br><b>A,</b> <b>B,</b> and <b>C</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Does every type of JVM have access to a console?<br><br>Reference: Chapter 9: Console class<br><br>Objective: Read and write data from the console. (Objective 7.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3" isAttemped="false" userans="" chapter="C" QNo="55" id="C 55">
			<qst><text order="1"><![CDATA[To create a reference variable for an instance of a new, Java 6 <font face="Courier New">Console</font> object, class(es) from which package(s) must be used? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.io</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.awt</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.lang</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.text</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">java.util</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">javax.swing</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>C</b> are correct. A line of code such as <font face="Courier New">Console</font> <font face="Courier New">c = System.console();</font> creates a new instance of <font face="Courier New">java.io.Console</font>, and the <font face="Courier New">System</font> class is in the <font face="Courier New">java.lang</font> package.<br><br><b>B, D, E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[We're just talking about creation time, and we're not talking about GUIs.<br><br>Reference: Chapter 9: <font face="Courier New">Console</font> class<br><br>Objective: Read and write data from the console. (Objective 7.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;4;6" isAttemped="false" userans="" chapter="C" QNo="56" id="C 56">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">java.io.FileReader</font> class has a method to read a line of data at a time]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">java.io.BufferedReader</font> class has a method to read a line of data at a time]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">java.io.FileReader</font> class has a <font face="Courier New">read()</font> method]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">java.io.BufferedReader</font> class has a <font face="Courier New">read()</font> method]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">java.io.BufferedReader</font> can be constructed with a <font face="Courier New">java.io.File</font> instance]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. A <font face="Courier New">java.io.BufferedReader</font> can be constructed with a <font face="Courier New">java.io.FileReader</font> instance]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, C, D, </b>and<b> F</b> are correct.<br><br><b>A</b> is incorrect because <font face="Courier New">FileReader</font>s don't have a method that reads up to a newline character.]]></text></feedbacks><hint><text order="1"><![CDATA[Which classes perform higher-level functions?<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Use streams to read from and write to files by using classes in the <font face="Courier New">java.io</font> package, including <font face="Courier New">BufferedReader</font>, <font face="Courier New">BufferedWriter</font>, <font face="Courier New">File</font>, <font face="Courier New">FileReader</font>, <font face="Courier New">FileWriter</font>, <font face="Courier New">DataInputStream</font>, <font face="Courier New">DataOutputStream</font>, <font face="Courier New">ObjectOutputStream</font>, <font face="Courier New">ObjectInputStream</font>, and <font face="Courier New">PrintWriter</font>. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;4" isAttemped="false" userans="" chapter="C" QNo="57" id="C 57">
			<qst><text order="1"><![CDATA[Which can be constructed using an instance of <font face="Courier New">java.io.File</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.io.FileWriter</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.io.BufferedWriter</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.io.PrintWriter</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.io.FileReader</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">java.io.BufferedReader</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, C, </b>and<b> D</b> are correct.<br><br><b>B </b>and<b> E</b> are incorrect. These classes don't have constructors that take a file.]]></text></feedbacks><hint><text order="1"><![CDATA[Which classes wrap which?<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Use streams to read from and write to files by using classes in the <font face="Courier New">java.io</font> package, including <font face="Courier New">BufferedReader</font>, <font face="Courier New">BufferedWriter</font>, <font face="Courier New">File</font>, <font face="Courier New">FileReader</font>, <font face="Courier New">FileWriter</font>, <font face="Courier New">DataInputStream</font>, <font face="Courier New">DataOutputStream</font>, <font face="Courier New">ObjectOutputStream</font>, <font face="Courier New">ObjectInputStream</font>, and <font face="Courier New">PrintWriter</font>. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;6" isAttemped="false" userans="" chapter="C" QNo="58" id="C 58">
			<qst><text order="1"><![CDATA[Given this directory structure at the root of the c: drive and the fact that no other files exist:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_5801q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">System.out.println(Paths.get("c:/x/z/..").normalize());</font><br><font face="Courier New">&#160;&#160;&#160;</font>prints <font face="Courier New">c:/x</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">System.out.println(Paths.get("c:/x/z/..").normalize());</font><br><font face="Courier New">&#160;&#160;&#160;</font>prints <font face="Courier New">c:/x/z/..</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">System.out.println(Paths.get("c:/x/z/..").normalize());</font><br><font face="Courier New">&#160;&#160;&#160;</font>throws a <font face="Courier New">NoSuchFileException</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">System.out.println(Paths.get("c:/x/z/..").toRealPath());</font><br><font face="Courier New">&#160;&#160;&#160;</font>prints <font face="Courier New">c:/x</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">System.out.println(Paths.get("c:/x/z/..").toRealPath());</font><br><font face="Courier New">&#160;&#160;&#160;</font>prints <font face="Courier New">c:/x/z/..</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">System.out.println(Paths.get("c:/x/z/..").toRealPath());</font><br><font face="Courier New">&#160;&#160;&#160;</font>throws a <font face="Courier New">NoSuchFileException</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>F</b> are correct. The <font face="Courier New">normalize()</font> function creates the shortest logical path. In this case, it sees <font face="Courier New">..</font> and removes the prior directory. The <font face="Courier New">toRealPath()</font> function actually looks at the file system. Since there is no directory named "z", an exception is thrown.<br><br><b>B,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Two periods (<font face="Courier New">..</font>) means go up one directory.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Operate on file and directory paths with the <font face="Courier New">Path</font> class. (Objective 8.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="C" QNo="59" id="C 59">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_5901q.jpg]]></image><text order="3"><![CDATA[which compile and run without error in Windows? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">BasicFileAttributes attr =</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;Files.readAttributes(dir, BasicFileAttributes.class);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">BasicFileAttributes attr =</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;Files.readAttributes(dir, DosFileAttributes.class);</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">DosFileAttributes attr =</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;Files.readAttributes(dir, BasicFileAttributes.class);</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">DosFileAttributes attr =</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;Files.readAttributes(dir, DosFileAttributes.class);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">BasicFileAttributes attr = new BasicFileAttributes(dir);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">BasicFileAttributes attr =dir.getBasicFileAttributes();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect. <b>A</b> and <b>B</b> are incorrect because the <font face="Courier New">archive</font> attribute only exists on the Windows platform. The code fails to compile since <font face="Courier New">archive</font> is not found on <font face="Courier New">BasicFileAttributes</font>. <b>C</b> is incorrect because you cannot cast a more general type to a more specific type. <b>E</b> and <b>F</b> are incorrect because those methods do not exist. You must use the <font face="Courier New">Files</font> class to get the attributes.]]></text></feedbacks><hint><text order="1"><![CDATA[The <font face="Courier New">archive</font> attribute only exists on the Windows platform.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Read and change file and directory attributes, focusing on the <font face="Courier New">BasicFileAttributes</font>, <font face="Courier New">DosFileAttributes</font>, and <font face="Courier New">PosixFileAttributes</font> interfaces. (Objective 8.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4" isAttemped="false" userans="" chapter="C" QNo="60" id="C 60">
			<qst><text order="1"><![CDATA[Which of the following, when inserted independently, will print out the provided directory and all subdirectories? (Choose all that apply.)<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_6001q.jpg]]></image></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam03_6001c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam03_6002c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam03_6003c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam03_6004c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam03_6005c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>D</b> are correct. They show you can print the directory either before or after the directory contents are visited.<br><br><b>B</b> is incorrect because it doesn't output anything. <font face="Courier New">visitFile()</font> is called for only files and not directories. This means that <font face="Courier New">attrs.isDirectory()</font> will never return true in this method. C is incorrect because it does not compile. Checking if an object is a directory is not a method on a <font face="Courier New">Path</font> object. It is a method on <font face="Courier New">BasicFileAttributes</font>. It is also a <font face="Courier New">static</font> method on <font face="Courier New">Files</font>. <b>E</b> is incorrect because <font face="Courier New">visitDirectory</font> is not a method in <font face="Courier New">SimpleFileVisitor</font> so it's never invoked. The methods for directories are <font face="Courier New">preVisitDirectory</font> and <font face="Courier New">postVisitDirectory</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Think about the path through directories and subdirectories.<br><br>Reference: Chapter 9: Directory attributes<br><br>Objective: Recursively access a directory tree using the <font face="Courier New">DirectoryStream</font> and <font face="Courier New">FileVisitor</font> interfaces. (Objective 8.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="C" QNo="61" id="C 61">
			<qst><text order="1"><![CDATA[Which creates a <font face="Courier New">PathMatcher</font> that identifies paths starting with the letter "x"?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">PathMatcher matcher = Files.getPathMatcher("glob:x");</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">PathMatcher matcher = Files.getPathMatcher("glob:x*");</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">PathMatcher matcher = Files.getPathMatcher("glob:x.*");</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">PathMatcher matcher = FileSystems.getDefault().getPathMatcher("glob:x");</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">PathMatcher matcher = FileSystems.getDefault().getPathMatcher("glob:x*");</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">PathMatcher matcher = FileSystems.getDefault().getPathMatcher("glob:x.*");</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct because <font face="Courier New">glob</font>s use <font face="Courier New">*</font> to mean zero or more of any character.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect. <b>A,</b> <b>B,</b> and <b>C</b> are incorrect because <font face="Courier New">Files</font> does not have a method to get a path matcher directly. You must get it from the file system. <b>D</b> is incorrect because it matches a path simply named "x" with nothing after it. The path "x123" would not match this <font face="Courier New">glob</font>. <b>F</b> is incorrect because it requires that a path contain a period in order to match. This answer tries to trick you because regular expressions use <font face="Courier New">.*</font> to match zero or more of any character.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the difference between a <font face="Courier New">glob</font> and a regular expression?<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Find a file with <font face="Courier New">PathMatcher</font> interface. (Objective 8.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4;5" isAttemped="false" userans="" chapter="C" QNo="62" id="C 62">
			<qst><text order="1"><![CDATA[In order to be JDBC compliant, for which interfaces must vendors supply implementations? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Driver</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">ResultSet</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Savepoint</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Statement</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Connection</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">DriverManager</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, D,</b> and <b>E</b> are the interfaces that must be implemented to be JDBC compliant.<br><br><b>C</b> is incorrect; <font face="Courier New">Savepoint</font> is optional. <b>F</b> is incorrect; <font face="Courier New">DriverManager</font> is a class.]]></text></feedbacks><hint><text order="1"><![CDATA[We're sorry, just some necessary API facts.<br><br>Reference: Chapter 15: Connections<br><br>Objective: Describe the interfaces that make up the core of the JDBC API (including the <font face="Courier New">Driver</font>, <font face="Courier New">Connection</font>, <font face="Courier New">Statement</font>, and <font face="Courier New">ResultSet</font> interfaces and their relationship to provider implementations). (Objective 9.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="63" id="C 63">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_6301q.jpg]]></image><text order="3"><![CDATA[And if the code compiles the <font face="Courier New">ResultSet</font> contains three records, what is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The instruction on line 18 is executed two times]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The instruction on line 18 is executed three times]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A <font face="Courier New">SQLException</font> is thrown on line 15]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A <font face="Courier New">SQLException</font> is thrown on line 16]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. A different exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The <font face="Courier New">ResultSet</font> "<font face="Courier New">rs</font>" is created on line 14, originated from the <font face="Courier New">Statement</font> "<font face="Courier New">s</font>", created on line 13. On line 15, "<font face="Courier New">s</font>" is closed, which automatically closes any associated resources with it&#8212;that is, the <font face="Courier New">ResultSet</font> "<font face="Courier New">rs</font>". When line 16 is reached, a <font face="Courier New">SQLException</font> is thrown because "<font face="Courier New">rs</font>" has automatically been closed.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Any resource is automatically closed when the resource that originated it is closed.<br><br>Reference: Chapter 15: JDBC<br><br>Objective: Submit queries and read results from the database (including creating statements, returning result sets, iterating through the results, and properly closing result sets, statements, and connections). (Objective 9.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="C" QNo="64" id="C 64">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_6401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Zero names are displayed.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. One name is displayed.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Two names are displayed.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">SQLException</font> is thrown on line 7.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. Since the <font face="Courier New">ResultSet</font> is positioned above the first row&#8212;that is, before the two records that are returned at line 5, the execution of the first movement of <font face="Courier New">next()</font> on line 6 positions the cursor in the first row. Right after, the second movement of <font face="Courier New">next()</font> positions the cursor in the second row. On line 7, <font face="Courier New">next()</font> is called again, positioning the cursor after the second row, and thus, it returns <font face="Courier New">false</font>, so the <font face="Courier New">while</font> loop is not executed.<br><br><b>B,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[The cursor of a <font face="Courier New">ResultSet</font> is initially positioned above the first row.<br><br>Reference: Chapter 15: JDBC<br><br>Objective: Submit queries and read results from the database (including creating statements, returning result sets, iterating through the results, and properly closing result sets, statements, and connections). (Objective 9.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="C" QNo="65" id="C 65">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_6501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. No names are displayed]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. One name is displayed]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Two names are displayed]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Three names are displayed]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Four names are displayed]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Since the <font face="Courier New">PreparedStatement</font> was not created indicating a scroll type (either <font face="Courier New">ResultSet.TYPE_SCROLL_SENSITIVE</font> or <font face="Courier New">ResultSet.TYPE_SCROLL_INSENSITIVE</font>), it is not possible to move the <font face="Courier New">ResultSet</font>'s cursor, which is why a <font face="Courier New">SQLException</font> is thrown when line 6 is reached. If a scroll type had been indicated, <b>B</b> would be correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D, F</b>, and<b> G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What are the prerequisites for scrolling over a <font face="Courier New">ResultSet</font> object?<br><br>Reference: Chapter 15: JDBC<br><br>Objective: Create and use <font face="Courier New">PreparedStatement</font> and <font face="Courier New">CallableStatement</font> objects. (Objective 9.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4;6;7" isAttemped="false" userans="" chapter="C" QNo="66" id="C 66">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_6601q.jpg]]></image><text order="3"><![CDATA[Which results are NOT possible? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">a1bc23</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">abc123</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">12c3ab</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">1ab3c2</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">123abc</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code does not compile]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An error occurs at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C, D, F, </b>and<b> G</b> are correct. The code compiles and runs fine. <b>C</b> is impossible because <font face="Courier New">c</font> can't come before <font face="Courier New">a</font>. <b>D</b> is impossible because <font face="Courier New">3</font> can't come before <font face="Courier New">2</font>.<br><br><b>A,</b> <b>B,</b> and <b>E</b> are incorrect because those answers are possible.]]></text></feedbacks><hint><text order="1"><![CDATA[What's true about the two threads?<br><br>Reference: Chapter 13: Starting threads<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4" isAttemped="false" userans="" chapter="C" QNo="67" id="C 67">
			<qst><text order="1"><![CDATA[Which methods are defined in the <font face="Courier New">Thread</font> class? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">start()</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">wait()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">notify()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">run()</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">terminate()</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>and<b> D</b> are correct. Only <font face="Courier New">start()</font> and <font face="Courier New">run()</font> are defined by the <font face="Courier New">Thread</font> class.<br><br><b>B,</b> <b>C,</b> and <b>E</b> are incorrect. <b>B </b>and<b> C</b> are incorrect because they are methods of the <font face="Courier New">Object</font> class. <b>E</b> is incorrect because there's no such method in any thread-related class.]]></text></feedbacks><hint><text order="1"><![CDATA[What can objects of any type do concerning threads?<br><br>Reference: Chapter 13: Starting threads<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1" isAttemped="false" userans="" chapter="C" QNo="68" id="C 68">
			<qst><text order="1"><![CDATA[Which construct a <font face="Courier New">Runnable</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Runnable r = new Runnable() {public void run(){ }};</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Runnable r = new Runnable((public void run() { }));</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Runnable r = new Runnable() { };</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">System.out.println(new Runnable {public void run() { }});</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Runnable r = new Runnable ( public void run(){});</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. None of the above]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. It defines an anonymous inner class instance, which also means it creates an instance of that new anonymous class at the same time. The anonymous class is an implementer of the <font face="Courier New">Runnable</font> interface, so it must implement the <font face="Courier New">run()</font> method of <font face="Courier New">Runnable</font>.<br><br><b>B,</b> <b>C, D,</b> <b>E,</b> and <b>F</b> are incorrect. <b>B, D, </b>and<b> E</b> are incorrect because they use incorrect syntax. <b>C</b> is incorrect because it doesn't implement the <font face="Courier New">run()</font> method, so it violates the rules of interface implementation. <b>F</b> is incorrect based on the reason for <b>A</b>.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember what you're implementing.<br><br>Reference: Chapter 13: Anonymous<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="C" QNo="69" id="C 69">
			<qst><text order="1"><![CDATA[Assume you create a program and one of your threads (called <font face="Courier New">backgroundThread</font>) does some lengthy numerical processing. What would be the proper way of setting its priority to try to get the rest of the system to be very responsive while the thread is running? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">backgroundThread.setPriority(Thread.LOW_PRIORITY);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">backgroundThread.setPriority(Thread.MAX_PRIORITY);</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">backgroundThread.setPriority(1);</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">backgroundThread.setPriority(Thread.NO_PRIORITY);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">backgroundThread.setPriority(Thread.MIN_PRIORITY);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">backgroundThread.setPriority(Thread.NORM_PRIORITY);</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">backgroundThread.setPriority(10);</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and<b> E</b> are correct. <b>C</b> is correct because <font face="Courier New">1</font> is the minimum value; although for code clarity; it is recommended that <font face="Courier New">Thread.MIN_PRIORITY</font> be used. In <b>E</b>, the constant <font face="Courier New">Thread.MIN_PRIORITY</font> is the lowest priority that a thread can have, and the background thread should have a very low priority or the lowest.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>F,</b> and <b>G</b> are incorrect. <b>A </b>and<b> D</b> are incorrect because there are no such variables in the <font face="Courier New">Thread</font> class. <b>B</b> is also incorrect because using <font face="Courier New">MAX_PRIORITY</font> would make other threads have fewer chances of getting a turn of the CPU, even to the point of freezing until the numerical processing is finished. <b>F</b> is incorrect because the thread would still compete for the CPU time and even delay other threads. <b>G</b> is incorrect because <font face="Courier New">10</font> is the value of <font face="Courier New">MAX_PRIORITY</font>, so it would be equivalent to <b>B</b>.]]></text></feedbacks><hint><text order="1"><![CDATA[Are small numbers usually associated with low or high priority?<br><br>Reference: Chapter 13: Thread priorities<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;5;6" isAttemped="false" userans="" chapter="C" QNo="70" id="C 70">
			<qst><text order="1"><![CDATA[Assuming that an interrupted exception has NOT been thrown and that <font face="Courier New">aLiveThread</font> is a runnable thread, which three guarantee that a thread will leave the running state?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">yield()</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">wait()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">notify()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">notifyAll()</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">sleep(1000)</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">aLiveThread.join()</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">Thread.killThread()</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, E, </b>and<b> F</b> are correct. <b>B</b> is correct because <font face="Courier New">wait()</font> always causes the current thread to go into the object's wait pool. <b>E</b> is correct because <font face="Courier New">sleep()</font> will always pause the currently running thread for at least the duration specified in the <font face="Courier New">sleep</font> argument (unless an interrupted exception is thrown). <b>F</b> is correct because assuming that the thread you're calling <font face="Courier New">join()</font> on is alive, the thread calling <font face="Courier New">join()</font> will immediately block until the thread you're calling <font face="Courier New">join()</font> on is no longer alive.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>G</b> are incorrect. <b>A</b> is incorrect, but tempting. The <font face="Courier New">yield()</font> method is not guaranteed to cause a thread to leave the running state, although if there are runnable threads of the same priority as the currently running thread, then the current thread will probably leave the running state. <b>C </b>and<b> D</b> are incorrect because they don't cause the thread invoking them to leave the running state. <b>G</b> is incorrect because there is no such method.]]></text></feedbacks><hint><text order="1"><![CDATA[Which methods really cause state changes?<br><br>Reference: Chapter 13: Thread priorities<br><br>Objective: Manage and control thread lifecycle. (Objective 10.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;6" isAttemped="false" userans="" chapter="C" QNo="71" id="C 71">
			<qst><text order="1"><![CDATA[Which are methods of the <font face="Courier New">Object</font> class? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">notify();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">notifyAll();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">isInterrupted();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">synchronized();</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">interrupt();</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">wait(long msecs);</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">sleep(long msecs);</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. <font face="Courier New">yield();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> and <b>F</b> are correct. They are all related to the list of threads waiting on the specified object.<br><br><b>C,</b> <b>D,</b> <b>E,</b> <b>G,</b> and <b>H</b> are incorrect. <b>C</b> and <b>E</b> are incorrect because the methods <font face="Courier New">isInterrupted()</font> and <font face="Courier New">interrupt()</font> are instance methods of <font face="Courier New">Thread</font>. <b>D</b> is incorrect because <font face="Courier New">synchronized</font> is a keyword, and the <font face="Courier New">synchronized()</font> construct is part of the Java language. <b>G</b> and <b>H</b> are incorrect because the methods <font face="Courier New">sleep()</font> and <font face="Courier New">yield()</font> are static methods of <font face="Courier New">Thread</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[What gets locked?<br><br>Reference: Chapter 13: Using <font face="Courier New">wait()</font> and <font face="Courier New">notify()</font><br><br>Objective: Manage and control thread lifecycle. (Objective 10.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4;6" isAttemped="false" userans="" chapter="C" QNo="72" id="C 72">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Deadlock will not occur if <font face="Courier New">wait()</font>/<font face="Courier New">notify()</font> is used]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A thread will resume execution as soon as its sleep duration expires]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Synchronization can prevent two objects from being accessed by the same thread]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">wait()</font> method is overloaded to accept a duration]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">notify()</font> method is overloaded to accept a duration]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Both <font face="Courier New">wait() </font>and <font face="Courier New">notify()</font> must be called from a synchronized context]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. The <font face="Courier New">wait()</font> method does NOT throw a checked exception]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. The <font face="Courier New">sleep()</font> method does NOT throw a checked exception]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D </b>and<b> F</b> are correct. <b>D</b> is correct because the <font face="Courier New">wait()</font> method is overloaded to accept a wait duration in milliseconds. If the thread has not been notified by the time the wait duration has elapsed, then the thread will move back to runnable even without having been notified. <b>F</b> is correct because <font face="Courier New">wait()</font>, <font face="Courier New">notify()</font>, and <font face="Courier New">notifyAll()</font> must all be called from within a synchronized context. A thread must own the lock on the object it's invoking <font face="Courier New">wait()</font>, <font face="Courier New">notify()</font>, or <font face="Courier New">notifyAll()</font> on.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> <b>G,</b> and <b>H</b> are incorrect. <b>A</b> is incorrect because <font face="Courier New">wait()</font>/<font face="Courier New">notify()</font> will not prevent deadlock. <b>B</b> is incorrect because a sleeping thread will return to runnable when it wakes up, but it might not necessarily resume execution right away. To resume executing, the newly awakened thread must still be moved from runnable to running by the scheduler. <b>C</b> is incorrect because synchronization prevents two or more threads from accessing the same object. <b>E</b> is incorrect because <font face="Courier New">notify()</font> is not overloaded to accept a duration. <b>G </b>and<b> H</b> are incorrect because <font face="Courier New">wait()</font> and <font face="Courier New">sleep()</font> both declare a checked exception (<font face="Courier New">InterruptedException</font>).]]></text></feedbacks><hint><text order="1"><![CDATA[Remember fun facts concerning object locking.<br><br>Reference: Chapter 13: Object locking<br><br>Objective: Synchronize thread access to shared data. (Objective 10.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="C" QNo="73" id="C 73">
			<qst><text order="1"><![CDATA[Given that the following code is intended to create a single <font face="Courier New">WidgetMaker</font> that makes <font face="Courier New">Widget</font> objects and several <font face="Courier New">WidgetUser</font>s who wait for a <font face="Courier New">Widget</font> to be made:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_7301q.jpg]]></image><text order="3"><![CDATA[If each <font face="Courier New">WidgetUser</font> should receive its own <font face="Courier New">Widget</font>, which no other <font face="Courier New">WidgetUser</font> is using, what code should be inserted in place of the comment <font face="Courier New">// INSERT SOMETHING HERE</font>?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam03_7301c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam03_7302c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam03_7303c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam03_7304c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam03_7305c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam03_7306c.jpg]]></image></option>
 				<option id="7"><image order="1"><![CDATA[assets/questimages/Exam03_7307c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Looking at the options, this question is really comprised of two questions: One, should we synchronize on <font face="Courier New">this</font>, on <font face="Courier New">WidgetMaker.class</font>, or on <font face="Courier New">finishedWidgets</font>? And two, should we use <font face="Courier New">notify()</font> or <font face="Courier New">notifyAll()</font>? For the first part, since all the options invoke <font face="Courier New">notify()</font> or <font face="Courier New">notifyAll()</font> using <font face="Courier New">finishedWidgets</font>, we must synchronize on <font face="Courier New">finishedWidgets</font>; <font face="Courier New">this</font> and <font face="Courier New">WidgetMaker.class</font> are irrelevant. For the second part, <font face="Courier New">notifyAll()</font> would be a mistake here because only one of the waiting threads may use a single <font face="Courier New">Widget</font> anyway. If we use <font face="Courier New">notifyAll()</font> here, all three waiting threads would try to get the <font face="Courier New">Widget</font>. One of them would succeed, but the other two would probably throw an exception because the threads try to get the <font face="Courier New">Widget</font> without double-checking to see if it is still available. (It's not.) Thus, <b>C</b> is correct because we need to synchronize on <font face="Courier New">finishedWidgets</font> and use <font face="Courier New">notify()</font> rather than <font face="Courier New">notifyAll()</font>.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What object should you really synchronize on?<br><br>Reference: Chapter 13: Using <font face="Courier New">wait()</font> and <font face="Courier New">notify()</font><br><br>Objective: Synchronize thread access to shared data. (Objective 10.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="74" id="C 74">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_7401q.jpg]]></image><text order="3"><![CDATA[and assuming that data must be protected from corruption, which changes must you make to the preceding code to ensure the integrity of the data?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Synchronize the run method]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Wrap a <font face="Courier New">synchronize(this)</font> around the call to <font face="Courier New">foo.increase()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. No changes are necessary]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Synchronize the <font face="Courier New">increase()</font> method]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Put in a <font face="Courier New">wait()</font> call prior to invoking the <font face="Courier New">increase()</font> method]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct because synchronizing the code that actually does the increase will protect the code from being accessed by more than one thread at a time.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because synchronizing the <font face="Courier New">run()</font> method would not prevent other <font face="Courier New">Increaser</font> threads from accessing the <font face="Courier New">increase()</font> method. The other threads would lock on different Increaser instances and would not block each other. <b>B</b> is incorrect for virtually the same reason as answer <b>A</b>: synchronizing the code that calls the <font face="Courier New">increase()</font> method does not prevent other code from calling the <font face="Courier New">increase() </font>method. <b>C </b>is incorrect because the current code allows data to be corrupted. <b>E</b> is incorrect because it will simply prevent the call to <font face="Courier New">increase()</font> from ever happening from this thread. The <font face="Courier New">wait()</font> method waits forever if there's no <font face="Courier New">notify()</font>, and this code has no <font face="Courier New">notify()</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[What's the important method to protect?<br><br>Reference: Chapter 13: Using <font face="Courier New">wait()</font> and <font face="Courier New">notify()</font><br><br>Objective: Synchronize thread access to shared data. (Objective 10.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="C" QNo="75" id="C 75">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A thread must own the lock on the current thread before it can call <font face="Courier New">wait()</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A thread must own the lock on the current thread before it can call <font face="Courier New">notify()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A thread must own the lock on the object whose <font face="Courier New">wait()</font> method is to be called]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A thread must own the lock on the object whose <font face="Courier New">yield()</font> method is to be called]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A thread must own the lock on the object whose <font face="Courier New">join()</font> method is to be called]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> and <b>B </b>are incorrect because you lock an object, not a thread. <b>D </b>and <b>E </b>are incorrect because a lock is not needed to call these methods.]]></text></feedbacks><hint><text order="1"><![CDATA[Who locks whom?<br><br>Reference: Chapter 13: Using <font face="Courier New">wait()</font> and <font face="Courier New">notify()</font><br><br>Objective: Identity potential threading problems. (Objective 10.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="C" QNo="76" id="C 76">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_7601q.jpg]]></image><text order="3"><![CDATA[If this code is compiled and run, which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Every second (approximately), exactly one of the three <font face="Courier New">Listener</font>s will report a new temperature]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Every second (approximately), all three <font face="Courier New">Listener</font>s will report a new temperature]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Every 1,000 seconds (approximately), exactly one of the three <font face="Courier New">Listener</font>s will report a new temperature]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Every 1,000 seconds (approximately), all three <font face="Courier New">Listener</font>s will report a new temperature]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code will not compile]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>is correct. Although complex, all the code here is legal and does not cause an exception<b>. </b>Because the code uses <font face="Courier New">notifyAll()</font> rather than <font face="Courier New">notify()</font>, all three <font face="Courier New">Listener</font>s will be notified every time a new temperature is found. Because the argument to <font face="Courier New">sleep()</font> is in milliseconds, <font face="Courier New">sleep(1000)</font> causes a delay of only 1 second, not 1,000 seconds.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the difference between <font face="Courier New">notify()</font> and <font face="Courier New">notifyAll()</font>, and remember <font face="Courier New">sleep()</font>'s argument.<br><br>Reference: Chapter 13: Thread interaction<br><br>Objective: Identity potential threading problems. (Objective 10.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="C" QNo="77" id="C 77">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_7701q.jpg]]></image><text order="3"><![CDATA[What happens when the <font face="Courier New">work</font> method is invoked on an instance of the <font face="Courier New">ConcurrentModificator</font> class?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A <font face="Courier New">ConcurrentModificationException</font> occurs at runtime]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">while</font> loop never ends because there will always be a next element]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">100</font> is printed]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">200</font> is printed]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">RuntimeException</font> other than <font face="Courier New">ConcurrentModificationException</font> is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. A <font face="Courier New">CopyOnWriteArrayList</font> allows modifications while being iterated with an <font face="Courier New">Iterator</font> because the iteration happens on a reference of the <font face="Courier New">List</font> that reflects how it was when the <font face="Courier New">Iterator</font> was originated, which is why <b>B</b> is incorrect. This means that if it were an <font face="Courier New">ArrayList</font> rather than a <font face="Courier New">CopyOnWriteArrayList</font> on line 2, <b>A</b> would be correct. Line 8 adds elements to the original <font face="Courier New">list</font> object, so when line 10 is reached there will be 200 elements on the list. This is because the <font face="Courier New">list</font> object initially contains 100 elements, meaning that it will be iterated 100 times and that 100 more elements will be added.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[The class name is a hint.<br><br>Reference: Chapter 14: <font face="Courier New">concurrent</font><br><br>Objective: Use collections from the <font face="Courier New">java.util.concurrent</font> package with a focus on the advantages over and differences from the traditional <font face="Courier New">java.util</font> collections. (Objective 11.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3" isAttemped="false" userans="" chapter="C" QNo="78" id="C 78">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_7801q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Class <font face="Courier New">Calculator</font> is thread-safe]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The instruction on line 6 will always print <font face="Courier New">true</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The instruction on line 6 would always print <font face="Courier New">true</font> if a <font face="Courier New">Lock</font> were used before line 4 and after line 6, locking and unlocking, respectively]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Class <font face="Courier New">Calculator</font> would be thread-safe if method <font face="Courier New">addAndGet</font> were used in place of the <font face="Courier New">compareAndSet</font> method on line 6]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Class <font face="Courier New">Calculator</font> could only be thread-safe if method <font face="Courier New">add</font> were synchronized]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>C</b> are correct.<br><br><b>B,</b> <b>D,</b> and <b>E</b> are incorrect. <b>B</b> is incorrect because if Thread A executes the instruction on line 4 and right after Thread B executes the instruction on line 6, the value contained by Thread A would be outdated and the <font face="Courier New">compareAndSet</font> method would return <font face="Courier New">false</font>. <b>D</b> and <b>E</b> are incorrect because class <font face="Courier New">Calculator</font> is thread-safe.]]></text></feedbacks><hint><text order="1"><![CDATA[Think of the various ways to achieve thread safety.<br><br>Reference: Chapter 14: <font face="Courier New">concurrent</font><br><br>Objective: Use <font face="Courier New">Lock</font>, <font face="Courier New">ReadWriteLock</font>, and <font face="Courier New">ReentrantLock</font> classes in the <font face="Courier New">java.util.concurrent.locks</font> package to support lock-free, thread-safe programming on single variables. (Objective 11.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3" isAttemped="false" userans="" chapter="C" QNo="79" id="C 79">
			<qst><text order="1"><![CDATA[When using <font face="Courier New">ExecutorService</font> instances from the <font face="Courier New">Executors</font> class, which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. When constructing a fixed thread pool, you specify how many threads will be used to execute tasks]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. When constructing a cached thread pool, you specify how many threads will be used to execute tasks]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Cached thread pools can reuse threads that have become free]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. When using fixed thread pools, tasks that cannot be executed immediately are placed in a task pool for later execution]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The Java API does NOT provide a way to determine the number of hardware processors that are available at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>C </b>are correct statements.<br><br><b>B</b> is incorrect; cached thread pools grow dynamically, which can be dangerous. <b>D</b> is incorrect; such tasks are queued, not pooled. <b>E</b> is incorrect; <font face="Courier New">java.lang.Runtime</font> has an <font face="Courier New">availableProcessors()</font> method.]]></text></feedbacks><hint><text order="1"><![CDATA[The API names are meaningful, and think in terms of standard collections.<br><br>Reference: Chapter 14: Executors<br><br>Objective: Use <font face="Courier New">Executor</font>, <font face="Courier New">ExecutorService</font>, <font face="Courier New">Executors</font>, <font face="Courier New">Callable</font>, and <font face="Courier New">Future</font> to execute tasks using thread pools. (Objective 11.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="C" QNo="80" id="C 80">
			<qst><text order="1"><![CDATA[Given that the class <font face="Courier New">MyRecursiveInitClass</font> is a valid implementation of <font face="Courier New">java.util.concurrent.RecursiveAction</font> that initializes a large <font face="Courier New">int</font> array with random numbers using a fork-join, work-stealing approach, and given this code fragment in which a valid instance of <font face="Courier New">MyRecursiveInitClass</font> is created:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_8001q.jpg]]></image><text order="3"><![CDATA[and assuming <font face="Courier New">doStuff()</font> expects <font face="Courier New">myData</font> to be fully initialized, which are necessary for the code to compile and execute as specified? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Nothing needs to change]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">fj</font> must be an instance of <font face="Courier New">ForkJoinPool</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">fj</font> must be an instance of <font face="Courier New">ForkJoinWorkerThread</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">fj</font> must invoke <font face="Courier New">invoke(action)</font> instead of <font face="Courier New">submit(action)</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">fj</font> must invoke <font face="Courier New">execute(action)</font> instead of <font face="Courier New">submit(action)</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">fj</font> must invoke <font face="Courier New">forkJoin(action)</font> instead of <font face="Courier New">submit(action)</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>D</b> are correct. These changes use the API correctly.<br><br><b>A</b> is incorrect, because the code will not compile as is. <b>C</b> is incorrect based on the above. <b>E</b> is incorrect because <font face="Courier New">execute() </font>does not guarantee synchronous completion. F is incorrect because <font face="Courier New">ForkJoinPool</font> doesn't have a <font face="Courier New">forkJoin()</font> method.]]></text></feedbacks><hint><text order="1"><![CDATA[Do all fork-join methods guarantee synchronous completion?<br><br>Reference: Chapter 14: Fork-Join<br><br>Objective: Use the parallel Fork/Join Framework. (Objective 11.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4;5" isAttemped="false" userans="" chapter="C" QNo="81" id="C 81">
			<qst><text order="1"><![CDATA[Which classes are usually instantiated via factory methods? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.util.Date</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.util.Locale</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.util.Calendar</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.text.DateFormat</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">java.text.NumberFormat</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C, D, </b>and<b> E</b> are correct.<br><br><b>A</b> and <b>B</b> are incorrect. <b>A</b> is incorrect because Date objects are constructed via new. <b>B</b> is incorrect because while <font face="Courier New">Locale</font>s <i>can</i> be constructed via a factory method, they also have several constructors available.]]></text></feedbacks><hint><text order="1"><![CDATA[Sorry, this is just a memory question.<br><br>Reference: Chapter 8: Locales and Dates<br><br>Objective: Use a Locale object (Objective 12.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="C" QNo="82" id="C 82">
			<qst><text order="1"><![CDATA[Which will create a <font face="Courier New">ResourceBundle</font> for United States English when run with a default <font face="Courier New">Locale</font> of US English? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">new ResourceBundle("bundle");</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">new ResourceBundle("bundle", Locale.getDefault());</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">ResourceBundle.getBundle("bundle");</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">ResourceBundle.getBundle("bundle", new Locale("en", "US"));</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">ResourceBundle.getBundle("bundle", new Locale("US", "en"));</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">ResourceBundle.getBundle(new Locale("US", "en"), "bundle");</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">ResourceBundle.getBundle(new Locale("en", "US"), "bundle");</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>D</b> are correct. <b>C</b> works because we are able to assume the <font face="Courier New">Locale</font> of the JVM matches the <font face="Courier New">Locale</font> we want. <b>D</b> successfully creates a bundle with the requested <font face="Courier New">Locale</font>.<br><br><b>A,</b> <b>B,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect. <b>A</b> and <b>B</b> are incorrect because a <font face="Courier New">ResourceBundle</font> must be created through a factory rather than a constructor. <b>E</b> is incorrect because the language must be provided to the <font face="Courier New">Locale</font> before the country code. <b>F</b> and <b>G</b> are incorrect because the name of the resource bundle is the first parameter to get the bundle.]]></text></feedbacks><hint><text order="1"><![CDATA[Is the language or country more specific?<br><br>Reference: Chapter 8: <font face="Courier New">ResourceBundle</font><br><br>Objective: Call a resource bundle from an application. (Objective 12.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="6" isAttemped="false" userans="" chapter="C" QNo="83" id="C 83">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam03_8301q.jpg]]></image><text order="3"><![CDATA[Which is true?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The code throws a <font face="Courier New">RuntimeException</font> because <font face="Courier New">Bundle</font> is in the default package]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The code fails to compile because it should call <font face="Courier New">rb.getString()</font> instead of <font face="Courier New">rb.getObject()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The code fails to compile because it should call <font face="Courier New">rb.getInteger()</font> instead of <font face="Courier New">rb.getObject()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The code fails to compile because no locale is specified]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The code runs and prints <font face="Courier New">null</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code runs and prints <font face="Courier New">456</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. The code fails compilation for another reason]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect. <b>A</b> is incorrect because the default package is allowed. It isn't good practice, though. <b>B</b> is incorrect because <font face="Courier New">456</font> is an <font face="Courier New">Integer</font> and can't be cast to a <font face="Courier New">String</font>.<br><br><b>C</b> is incorrect because there is no method <font face="Courier New">getInteger()</font> defined. <b>D</b> is incorrect because a default is assumed. <b>E</b> and <b>G</b> are incorrect because the code does not print <font face="Courier New">null</font> but does compile.]]></text></feedbacks><hint><text order="1"><![CDATA[Watch the types.<br><br>Reference: Chapter 8: <font face="Courier New">ResourceBundle</font><br><br>Objective: Call a resource bundle from an application. (Objective 12.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;4;5" isAttemped="false" userans="" chapter="C" QNo="84" id="C 84">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">DateFormat.getDate()</font> is used to convert a <font face="Courier New">String</font> to a <font face="Courier New">Date</font> instance.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Both <font face="Courier New">DateFormat</font> and <font face="Courier New">NumberFormat</font> objects can be constructed to be <font face="Courier New">Locale</font> specific.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Currency</font> objects must be constructed using static methods.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. If a <font face="Courier New">NumberFormat</font> instance's <font face="Courier New">Locale</font> is to be different than the current <font face="Courier New">Locale</font>, it must be specified at creation time.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A single instance of <font face="Courier New">NumberFormat</font> can be used to create <font face="Courier New">Number</font> objects from <font face="Courier New">String</font>s and to create formatted numbers from numbers.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>C,</b> <b>D,</b> and <b>E</b> are correct.<br><br><b>A</b> is incorrect because <font face="Courier New">DateFormat.parse()</font> is used to convert a <font face="Courier New">String</font> to a <font face="Courier New">Date</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Only one of these is incorrect.<br><br>Reference: Chapter 8: Formatting<br><br>Objective: Format dates, numbers, and currency values for localization with the <font face="Courier New">NumberFormat</font> and <font face="Courier New">DateFormat</font> classes (including number format patterns). (Objective 12.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4;6" isAttemped="false" userans="" chapter="C" QNo="85" id="C 85">
			<qst><text order="1"><![CDATA[Which are true about using a <font face="Courier New">DateFormat</font> to print the value of a single <font face="Courier New">Calendar</font> object using different <font face="Courier New">Locale</font>s? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 1]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. You would use the <font face="Courier New">DateFormat.parse()</font> method]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. You would use the <font face="Courier New">DateFormat.format()</font> method]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. You could use a single <font face="Courier New">DateFormat</font> object to handle all the <font face="Courier New">Locale</font>s you need to print]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. You would have to use a different <font face="Courier New">DateFormat</font> object for each <font face="Courier New">Locale</font> you need to print]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. You can pass the <font face="Courier New">Calendar</font> object to the proper <font face="Courier New">DateFormat</font> method for printing]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. You must convert the <font face="Courier New">Calendar</font> object to a <font face="Courier New">Date</font> object in order to send it to the <font face="Courier New">DateFormat</font> method for printing]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, D, </b>and<b> F</b> are correct.<br><br><b>A,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because the <font face="Courier New">parse</font> method is used to convert a <font face="Courier New">String</font> to a <font face="Courier New">Date</font>. <b>C</b> is incorrect because a <font face="Courier New">DateFormat</font>'s locale is set at the time of instantiation. <b>E</b> is incorrect because the <font face="Courier New">Format</font> method doesn't take a <font face="Courier New">Calendar</font> object, only a <font face="Courier New">Date</font> object.]]></text></feedbacks><hint><text order="1"><![CDATA[Sorry, this is just a memory question.<br><br>Reference: Chapter 8: Using dates<br><br>Objective: Format dates, numbers, and currency values for localization with the <font face="Courier New">NumberFormat</font> and <font face="Courier New">DateFormat</font> classes (including number format patterns). (Objective 12.4)]]></text></hint>
		</question>
	</presetExamList>
	<presetExamList name="OCP Exam 2" sessionlimit="85" sessionimplemented="no">
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="D" QNo="1" id="D 1">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 3]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2 2 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">3 2 1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">2 3 3</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">3 3 3</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. Variables are not overridden; instead they are shadowed. While this is considered bad practice, it is legal. Polymorphic references access the variable related to the type of the reference variable.<br><br><b>B, C, D, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Can variables be overridden?<br><br>Reference: Chapter 3: Shadowing<br><br>Objective: Override methods. (Objective 1.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;5;6" isAttemped="false" userans="" chapter="D" QNo="2" id="D 2">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0201q.jpg]]></image><text order="3"><![CDATA[Which, inserted at line 5, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Programmer debug() { return this; }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">SCJP debug() { return this; }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Object debug() { return this; }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">int debug() { return 1; }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">int debug(int x) { return 1; }</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">Object debug(int x) { return this; }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> <b>E,</b> and <b>F</b> are correct. <b>A</b> and <b>B</b> are examples of overriding; specifically, <b>B</b> is an example of overriding using a covariant return. <b>E</b> and <b>F</b> are examples of overloading.<br><br><b>C</b> and <b>D</b> are incorrect. They are illegal overrides because their return types are incompatible. They are illegal overloads because their arguments did not change.]]></text></feedbacks><hint><text order="1"><![CDATA[Maybe this question is about more than overriding.<br><br>Reference: Chapter 2: Legal return types<br><br>Objective: Override methods. (Objective 1.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="3" id="D 3">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">basic FP</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">mutating</font> <font face="Courier New">state</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">basic FP mutating state</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. No output is produced]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Since class <font face="Courier New">FP</font> has an explicit constructor (in this case, it takes a <font face="Courier New">String</font>), the compiler will not build a no-arg constructor for you in class <font face="Courier New">FP</font>. The call to <font face="Courier New">new</font> in <font face="Courier New">main()</font> needs a no-arg constructor in its parent class&#8212;<font face="Courier New">FP</font>&#8212;to compile.<br><br><b>A, B, C, D,</b> and <b>F</b> are incorrect based on the above. If a no-arg constructor was added to class <font face="Courier New">FP</font>, then answer <b>C</b> would have been correct.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember when constructors are automatic.<br><br>Reference: Chapter 2: Constructors<br><br>Objective: Overload constructors. (Objective 1.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="4" id="D 4">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">a b</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">a d</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">c b</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">c d</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>is correct. Remember that polymorphism applies only to instance methods, not to <font face="Courier New">static</font> methods.<br><br><b>A, C, D, E, </b>and <b>F </b>are incorrect based on the above.<br><br>Note to readers: You could argue that a polymorphism question shouldn't be associated with this objective, and we'd sort of agree. But as of summer 2014, the word "polymorphism" doesn't appear in the official OCP 7 objectives, and we're sure you're going to get questions about polymorphism on the exam. This objective didn't seem too far from the mark.]]></text></feedbacks><hint><text order="1"><![CDATA[When does polymorphism apply?<br><br>Reference: Chapter 2: Polymorphism and statics<br><br>Objective: Overload constructors and other methods [sic]. (Objective 1.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="D" QNo="5" id="D 5">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">5 56</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">5 58</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">5 78</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">7 56</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">7 58</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">7 78</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>is correct. Remember that polymorphism applies only to instance methods, not to <font face="Courier New">static</font> methods and not to <font face="Courier New">static</font> or instance variables.<br><br><b>B, C, D, E, F, G, </b>and <b>H </b>are incorrect based on the preceding statement.<br><br>Note to readers: You could argue that a polymorphism question shouldn't be associated with this objective, and we'd sort of agree. But as of summer 2014, the word "polymorphism" doesn't appear in the official OCP 7 objectives, and we're sure you're going to get questions about polymorphism on the exam. This objective didn't seem too far from the mark.]]></text></feedbacks><hint><text order="1"><![CDATA[When does polymorphism apply?<br><br>Reference: Chapter 2: Polymorphism and statics<br><br>Objective: Overload constructors and other methods [sic]. (Objective 1.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="6" id="D 6">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">a</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">b</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">ab</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>is correct. The first <font face="Courier New">if</font> test explicitly casts the <font face="Courier New">instanceof</font> call to a boolean, and then the compiler unboxes it back to a boolean. The second <font face="Courier New">if</font> test is true because the <font face="Courier New">valueOf()</font> method returns a <font face="Courier New">Long</font>, which extends <font face="Courier New">java.lang.Number</font>.<br><br><b>A, C, D, </b>and <b>E </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember autoboxing capabilities.<br><br>Reference: Chapter 4: The <font face="Courier New">instanceof</font> operator<br><br>Objective: Use the <font face="Courier New">instanceof</font> operator and casting. (Objective 1.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="D" QNo="7" id="D 7">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0701q.jpg]]></image><text order="3"><![CDATA[Which, inserted independently at line 5, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 4]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">b = (Number instanceof s);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">b = (s instanceof Short);</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">b = s.instanceof(Short);</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">b = (s instanceof Number);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">b = s.instanceof(Object);</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">b = (s instanceof String);</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>D</b> are correct because they correctly use boxing and <font face="Courier New">instanceof</font> together.<br><br><b>A,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect. <b>A</b> is incorrect because the operands are reversed. <b>C</b> and <b>E</b> use incorrect <font face="Courier New">instanceof</font> syntax. <b>F</b> is incorrect because <font face="Courier New">Short</font> isn't in the same inheritance tree as <font face="Courier New">String</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the syntax, and also remember inheritance trees in the API.<br><br>Reference: Chapter 4: The <font face="Courier New">instanceof</font> operator<br><br>Objective: Use the <font face="Courier New">instanceof</font> operator and casting. (Objective 1.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="8" id="D 8">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_0801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">-1 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">-1 2</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-12 1</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-12 2&#96;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>is correct. The <font face="Courier New">equals()</font> method shown in the code doesn't properly override <font face="Courier New">Object.equals()</font>, which takes an object. Therefore, when the code adds instances to the set, the default <font face="Courier New">equals</font> method from class <font face="Courier New">Object</font> is used.<br><br><b>A, C, D, E, </b>and <b>F </b>are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[What are the <font face="Courier New">equals()</font> method's details?<br><br>Reference: Chapter 11: Overriding <font face="Courier New">equals()</font><br><br>Objective: Override methods from the <font face="Courier New">Object</font> class to improve the functionality of your class. (Objective 1.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="D" QNo="9" id="D 9">
			<qst><text order="1"><![CDATA[If class <font face="Courier New">Dog</font> follows the <font face="Courier New">equals</font> and <font face="Courier New">hashCode</font> contracts, and if <font face="Courier New">x</font> and <font face="Courier New">y</font> are reference variables for two <font face="Courier New">Dog</font> objects, which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. If <font face="Courier New">x.equals(y)</font> is true, then <font face="Courier New">x == y</font> must be true.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. If <font face="Courier New">x.equals(y)</font> is false, then <font face="Courier New">x == y</font> may be true.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. If <font face="Courier New">x.equals(y)</font> is true, then <font face="Courier New">x == y</font> may be false.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. If <font face="Courier New">x.equals(y)</font> is true, then <font face="Courier New">(x.hashCode() == y.hashCode())</font> may be false.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. If <font face="Courier New">x.equals(y)</font> is false, then <font face="Courier New">(x.hashCode() == y.hashCode())</font> may be true.]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. If <font face="Courier New">x == y</font> is false, then <font face="Courier New">x.equals(y) </font>must be false.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>E</b> are correct. <b>C</b> is correct because <font face="Courier New">equals()</font> can be less strict than <font face="Courier New">==</font>. <b>E</b> is correct because <font face="Courier New">hashCode()</font> can be less strict than <font face="Courier New">equals()</font>.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>F</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the relative strictness of <font face="Courier New">==</font>, <font face="Courier New">equals()</font>, and <font face="Courier New">hashCode()</font>.<br><br>Reference: Chapter 11: <font face="Courier New">equals()</font> and <font face="Courier New">hashCode()</font><br><br>Objective: Override methods from the <font face="Courier New">Object</font> class to improve the functionality of your class. (Objective 1.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="10" id="D 10">
			<qst><text order="1"><![CDATA[Given two files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">25</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">30</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">36</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D </b>is correct. To import static members, an <font face="Courier New">import</font> statement must begin with <font face="Courier New">import static</font>, and include, either with a wildcard or explicitly, the static members to be imported.<br><br><b>A, B, C, </b>and <b>E </b>are incorrect based on the preceding statement. If the code was correct, then <b>B</b> would be correct.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember <font face="Courier New">import</font> syntax.<br><br>Reference: Chapter 1: Static imports<br><br>Objective: Use <font face="Courier New">package</font> and <font face="Courier New">import</font> statements. (Objective 1.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="11" id="D 11">
			<qst><text order="1"><![CDATA[Given two files:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">25</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">30</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">36</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. To import static members, an <font face="Courier New">import</font> statement must begin with <font face="Courier New">import static</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the above. If the import was correct, then <b>B</b> would be correct.]]></text></feedbacks><hint><text order="1"><![CDATA[Where did "<font face="Courier New">out</font>" come from?<br><br>Reference: Chapter 1: Static imports<br><br>Objective: Use <font face="Courier New">package</font> and <font face="Courier New">import</font> statements. (Objective 1.7)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;5;6" isAttemped="false" userans="" chapter="D" QNo="12" id="D 12">
			<qst><text order="1"><![CDATA[Given the following directory structure:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1201q.jpg]]></image><text order="3"><![CDATA[and the following source file:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam04_1202q.jpg]]></image><text order="5"><![CDATA[Which must be added for the source file to compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 1.0 Java Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">package org;</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">import org.*;</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">package org.*;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">package org.ex;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">import org.ex.*;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">package org.ex.why;</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">package org.ex.why.Dog;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>E,</b> and <b>F</b> are correct because they are required. The only way to access class <font face="Courier New">Dog</font> is via <b>F</b>, which is a <font face="Courier New">package</font> statement. Since you can have only one <font face="Courier New">package</font> statement in a source file, you have to get access to class <font face="Courier New">Robot</font> and class <font face="Courier New">Pet</font> using <font face="Courier New">import</font> statements. <b>B</b> accesses <font face="Courier New">Robot</font>, and <b>E</b> accesses <font face="Courier New">Pet</font>.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>G</b> are incorrect based on the above. In addition, <b>C</b> and <b>G</b> use incorrect syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[Consider both access rules and source file rules.<br><br>Reference: Chapter 1: Imports<br><br>Objective: Use <font face="Courier New">package</font> and <font face="Courier New">import</font> statements. (Objective 1.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="13" id="D 13">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">B C b-m1 c-m1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">C B c-m1 b-m1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">B C b-m1 B C c-m1 B C</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">C B b-m1 C B c-m1 C B</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due only to an error in class <font face="Courier New">B</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due only to an error in class <font face="Courier New">C</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails due to errors in both classes]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Three new C objects are constructed, and normal constructor chaining rules apply to abstract classes.<br><br><b>A, B,</b> and <b>D</b> are incorrect based on the above. <b>E</b> is wrong; it's legal for an abstract class to implement methods. <b>F</b> is wrong because it's legal to call <font face="Courier New">super</font> on an abstract class's implemented method. <b>G</b> is wrong, based on <b>E</b> and <b>F</b>.]]></text></feedbacks><hint><text order="1"><![CDATA[Can an abstract class implement methods?<br><br>Reference: Chapter 1: Abstract classes<br><br>Objective: Identify when and how to apply abstract classes. (Objective 2.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="14" id="D 14">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Flip a Clidlet</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Flip a Clidder</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Flip a Clidder</font><br><font face="Courier New">&#160;&#160;Flip a Clidlet</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Flip a Clidlet</font><br><font face="Courier New">&#160;&#160;Flip a Clidder</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct because <font face="Courier New">final</font> methods cannot be overridden.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[How do you access the thing your class "has"?<br><br>Reference: Chapter 1: Final methods<br><br>Objective: Use the <font face="Courier New">static</font> and <font face="Courier New">final</font> keywords. (Objective 2.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="D" QNo="15" id="D 15">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1501q.jpg]]></image><text order="3"><![CDATA[Which, if placed in a class other than <font face="Courier New">MyOuter</font> or <font face="Courier New">MyInner</font>, instantiates an instance of the nested class?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 12]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">MyOuter.MyInner m = new MyOuter.MyInner();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">MyOuter.MyInner mi = new MyInner();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">MyOuter m = new MyOuter(); MyOuter.MyInner mi = m.new MyOuter.MyInner();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">MyInner mi = new MyOuter.MyInner();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. <font face="Courier New">MyInner</font> is a <font face="Courier New">static</font> nested class, so it must be instantiated using the fully scoped name of <font face="Courier New">MyOuter.MyInner</font>.<br><br><b>B,</b> <b>C,</b> and <b>D</b> are incorrect. <b>B</b> is incorrect because it doesn't use the enclosing name in the <font face="Courier New">new</font>. <b>C</b> is incorrect because it uses incorrect syntax. When you instantiate a nested class by invoking <font face="Courier New">new</font> on an instance of the enclosing class, you do not use the enclosing name. The difference between <b>A</b> and <b>C</b> is that <b>C</b> is calling <font face="Courier New">new</font> on an instance of the enclosing class rather than just <font face="Courier New">new</font> by itself. <b>D</b> is incorrect because it doesn't use the enclosing class name in the variable declaration.]]></text></feedbacks><hint><text order="1"><![CDATA[Both sides of the assignment need to know about both classes.<br><br>Reference: Chapter 12: Inner classes<br><br>Objective: Create top-level and nested classes. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="16" id="D 16">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 12]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation fails]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. An error occurs at runtime]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">foobarhi</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">barhi</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">hi</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">foohi</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct because first the <font face="Courier New">Foo</font> instance is created, which means the <font face="Courier New">Foo</font> constructor runs and prints <font face="Courier New">foo</font>. Next, the <font face="Courier New">makeBar()</font> method is invoked, which creates an anonymous <font face="Courier New">Bar</font>. This means the <font face="Courier New">Bar</font> constructor runs and prints <font face="Courier New">bar</font>, and finally an instance is created (of an anonymous subtype of <font face="Courier New">Bar</font>), on which the <font face="Courier New">go()</font> method is invoked. Note that the line <font face="Courier New">(new Bar() {}).go();</font> creates a tiny anonymous inner class, a subtype of <font face="Courier New">Bar</font>.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember to factor in the constructors!<br><br>Reference: Chapter 12: Inner classes<br><br>Objective: Create top-level and nested classes. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="17" id="D 17">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 12]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. An exception occurs at runtime at line 10]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Zippo</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails because of an error on line 3]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails because of an error on line 9]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails because of an error on line 10]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails because of an error on a line of code other than 3, 9, or 10]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The code in the <font face="Courier New">HorseTest</font> class is perfectly legal. Line 9 creates an instance of the method-local inner class <font face="Courier New">Horse</font> using a reference variable declared as type <font face="Courier New">Object</font>. Line 10 casts the <font face="Courier New">Horse</font> object to a <font face="Courier New">Horse</font> reference variable, which allows line 11 to compile.<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the program logic described above.]]></text></feedbacks><hint><text order="1"><![CDATA[What is possible with class <font face="Courier New">Object</font>?<br><br>Reference: Chapter 12: Inner classes<br><br>Objective: Create top-level and nested classes. (Objective 2.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="18" id="D 18">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_1801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 1]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 2.0 Advanced Class Design]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">ON</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">bright</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. No output is produced]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct. The <font face="Courier New">enum</font> constants are declared with a <font face="Courier New">String</font> argument, which means that an <font face="Courier New">enum</font> constructor that takes a <font face="Courier New">String</font> must be supplied.<br><br><b>A, B, D, </b>and <b>E </b>are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Think of <font face="Courier New">ON</font> and <font face="Courier New">OFF</font> as instances.<br><br>Reference: Chapter 1: Enumerations<br><br>Objective: Use enumerated types. (Objective 2.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;4;5" isAttemped="false" userans="" chapter="D" QNo="19" id="D 19">
			<qst><text order="1"><![CDATA[Assume that a Java developer is creating a custom class, <font face="Courier New">MyClass</font>, for an application. Which statements, taken independently, are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 2]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">MyClass</font> can inherit from <font face="Courier New">java.lang.Comparable</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">MyClass</font> must inherit from <font face="Courier New">java.lang.Object</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">MyClass</font> can implement <font face="Courier New">java.util.Comparator</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">MyClass</font> can implement <font face="Courier New">java.util.List </font>and <font face="Courier New">java.util.Set</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">MyClass</font> can extend <font face="Courier New">java.util.ArrayList</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, C, D,</b> and <b>E</b> are correct.<br><br><b>A</b> is incorrect because <font face="Courier New">Comparable</font> is an interface not a class.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember your interface and inheritance rules.<br><br>Reference: Chapter 2: Inheritance<br><br>Objective: Choose between interface inheritance and class inheritance. (Objective 3.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="D" QNo="20" id="D 20">
			<qst><text order="1"><![CDATA[If class <font face="Courier New">Mulder</font> IS-A <font face="Courier New">Scully</font>, and HAS-A <font face="Courier New">Skinner</font>, which declarations are correct? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">class Mulder implements Scully, Skinner { }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">class Mulder extends Scully, implements Skinner { }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">class Mulder&#60;T extends Scully&#62;, implements Skinner { }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">class Mulder extends Scully { Skinner s = new Skinner(); }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">class Mulder implements Skinner { Scully s = new Scully(); }</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">class Mulder&#60;T extends Scully&#62; { Skinner s = new Skinner(); }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D </b>is correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>E,</b> and <b>F</b> are incorrect. <b>A,</b> <b>B, </b>and <b>C </b>are incorrect because (among other things) HAS-A relationships are not associated with inheritance. <b>E </b>mixes up the HAS-A and IS-A relationships. <b>F </b>is incorrect because the <font face="Courier New">&#60;T</font> <font face="Courier New">extends</font> <font face="Courier New">Scully&#62;</font> syntax specifies the bounds of the <font face="Courier New">Mulder</font> class's type parameter, not an inheritance relationship between <font face="Courier New">Mulder</font> and <font face="Courier New">Scully</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Are HAS-A relationships typically defined in terms of inheritance?<br><br>Reference: Chapter 10: HAS-A<br><br>Objective: Apply cohesion, low-coupling, IS-A, and HAS-A principles. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="D" QNo="21" id="D 21">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. HAS-A relationships are, by definition, well encapsulated.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A covariant return requires the existence of a HAS-A relationship.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Overriding requires the existence of an IS-A relationship.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. In some cases, IS-A relationships are used in the process of autoboxing.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. HAS-A relationships are always defined with instance variables.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and <b>D </b>are correct. For instance, you can autobox an <font face="Courier New">int</font> to a <font face="Courier New">Number</font> (via an <font face="Courier New">Integer</font>).<br><br><b>A,</b> <b>B,</b> and <b>E</b> are incorrect. <b>A </b>is incorrect because these two concepts are not tightly related. <b>B </b>is incorrect because covariant returns depend on inheritance. <b>E </b>is incorrect because class variables (statics) can also be used to define HAS-A relationships.]]></text></feedbacks><hint><text order="1"><![CDATA[IS-A relationships have to do with inheritance.<br><br>Reference: Chapter 10: IS-A<br><br>Objective: Apply cohesion, low-coupling, IS-A, and HAS-A principles. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="4" isAttemped="false" userans="" chapter="D" QNo="22" id="D 22">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_2201q.jpg]]></image><text order="3"><![CDATA[Which is true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Woop</font> IS-A <font face="Courier New">Hmpf</font> and HAS-A <font face="Courier New">Zing</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Zing</font> IS-A <font face="Courier New">Woop</font> and HAS-A <font face="Courier New">Hmpf</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Hmpf</font> HAS-A <font face="Courier New">Woop</font> and <font face="Courier New">Woop</font> IS-A <font face="Courier New">Zing</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Woop</font> HAS-A <font face="Courier New">Hmpf</font> and <font face="Courier New">Woop</font> IS-A <font face="Courier New">Zing</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Zing</font> HAS-A <font face="Courier New">Hmpf</font> and <font face="Courier New">Zing</font> IS-A <font face="Courier New">Woop</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. <font face="Courier New">Woop</font> inherits a <font face="Courier New">Hmpf</font> from <font face="Courier New">Zing</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>E</b> are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[Make an inheritance diagram of the code.<br><br>Reference: Chapter 10: IS-A<br><br>Objective: Apply cohesion, low-coupling, IS-A, and HAS-A principles. (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5;6" isAttemped="false" userans="" chapter="D" QNo="23" id="D 23">
			<qst><text order="1"><![CDATA[Select the two statements that best indicate a situation with loose-coupling. (Choose two.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The attributes of the class are all private.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The class refers to a small number of other objects.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The object contains only a small number of variables.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The object is referred to using an anonymous variable, not directly.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The reference variable is declared for an interface type, not a class. The interface provides a small number of methods.]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. It is unlikely that changes made to one class will require any changes in another.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> and <b>F</b> are correct. Only having access to a small number of methods implies limited coupling. If the access is via a reference of interface type, it may be argued that there is even less opportunity for coupling, as the class type itself is not visible. Stating that changes in one part of a program are unlikely to cause consequences in another part is really the essence of loose-coupling. There is no such thing as an anonymous variable. Referring to only a small number of other objects might imply loose-coupling, but if each object has many methods, and all are used, then coupling is high. Variables (attributes) in a class should usually be private, but this describes encapsulation rather than loose-coupling. Of course, good encapsulation tends to reduce coupling as a consequence.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Coupling is NOT about hiding data, and coupling is NOT about how well focused a class's capabilities are.<br><br>Reference: Chapter 10: Coupling<br><br>Objective: Cohesion, coupling, IS-A, HAS-A (Objective 3.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="D" QNo="24" id="D 24">
			<qst><text order="1"><![CDATA[Given a class <font face="Courier New">House</font>, which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">House</font> HAS-A <font face="Courier New">Roof</font> would be considered tight coupling]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A <font face="Courier New">turnOnStereo()</font> method would NOT be considered cohesive]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">House</font> IS-A <font face="Courier New">Dwelling</font> would be considered good encapsulation]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">House</font> HAS-A <font face="Courier New">Door</font> would be considered loose coupling]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">getAddress()</font> method would NOT be considered cohesive]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>and <b>D </b>are correct. A <font face="Courier New">turnOnStereo()</font> method would probably be associated with a <font face="Courier New">Stereo</font> class, and a <font face="Courier New">House</font> will almost certainly have a <font face="Courier New">Door</font> so this is considered loose coupling.<br><br><b>A,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A </b>is incorrect because a <font face="Courier New">House</font> will almost certainly have a <font face="Courier New">Roof</font>, so this is not considered tight coupling. <b>C </b>describes inheritance, not encapsulation. <b>E </b>is incorrect because <font face="Courier New">getAddress()</font> would probably represent good cohesion.]]></text></feedbacks><hint><text order="1"><![CDATA[Don't get these three terms confused.<br><br>Reference: Chapter 10: Coupling<br><br>Objective: Apply object composition principles (including HAS-A relationships). (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="6" isAttemped="false" userans="" chapter="D" QNo="25" id="D 25">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_2501q.jpg]]></image><text order="3"><![CDATA[Which can you change (independently), and still have object composition? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Change line 3 to <font face="Courier New">class A extends Object</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Change line 6 to <font face="Courier New">public A(D d)</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Change line 7 to <font face="Courier New">b = b;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Change line 10 to <font face="Courier New">b = b;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Remove line 7]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Remove line 12]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct because it removes a method that has nothing to do with object composition or delegation.<br><br><b>A,</b> <b>B, C, D,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because object composition requires implementing the same interface you are delegating to. <b>B</b> is incorrect because referring to a concrete class makes the class less generic and doesn't let the class delegate to any implementation. <b>C</b> and <b>E</b> result in equivalent behavior and never set the instance variable <font face="Courier New">b</font>, causing a NullPointerException when <font face="Courier New">c()</font> is called. <b>D</b> removes the delegation that is needed in this pattern.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the interface used for?<br><br>Reference: Chapter 10: Object composition principles<br><br>Objective: Apply object composition principles (including HAS-A principles). (Objective 3.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="D" QNo="26" id="D 26">
			<qst><text order="1"><![CDATA[Which are true of the DAO pattern? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">equals</font> and <font face="Courier New">hashCode</font> methods are implemented to compare the object stored in the database]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The DAO implementation must implement an interface]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The DAO implementation must not implement an interface]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The DAO pattern increases cohesion]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The DAO pattern increases coupling]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>D</b> are correct. The DAO pattern declares an interface and one or more implementations. It increases cohesion by separating the data access code from the object representing data in the database.<br><br><b>A,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because these methods should be implemented on objects other than the DAO. <b>C</b> is incorrect based on the explanation in the preceding paragraph. <b>E</b> is incorrect because increasing coupling is not desirable and would not be in a design pattern.]]></text></feedbacks><hint><text order="1"><![CDATA[How many implementations of a DAO can you have?<br><br>Reference: Chapter 10: Object composition principles<br><br>Objective: Write code to implement the DAO pattern. (Objective 3.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;5" isAttemped="false" userans="" chapter="D" QNo="27" id="D 27">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_2701q.jpg]]></image><text order="3"><![CDATA[Which of the following are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 10]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 3.0 Object-Oriented Design Principles]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The code <font face="Courier New">f1 == f2</font> will always return <font face="Courier New">true</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The code <font face="Courier New">f1 == f2</font> will never return <font face="Courier New">true</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. If <font face="Courier New">f3 == f4</font> always returns <font face="Courier New">true</font>, <font face="Courier New">DateFormat</font> is a factory]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. If <font face="Courier New">f3 == f4</font> always returns <font face="Courier New">true</font>, <font face="Courier New">DateFormat</font> is a singleton]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. If <font face="Courier New">f3 == f4</font> never returns <font face="Courier New">true</font>, <font face="Courier New">DateFormat</font> is a factory]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. If <font face="Courier New">f3 == f4</font> never returns <font face="Courier New">true</font>, <font face="Courier New">DateFormat</font> is a singleton]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B,</b> <b>C,</b> and <b>E</b> are correct. The reference variables <font face="Courier New">f1</font> and <font face="Courier New">f2</font> cannot refer to the same object since <font face="Courier New">new</font> <font face="Courier New">SimpleDateFormat()</font> is called. You can tell that <font face="Courier New">DateFormat</font> is a factory rather than a singleton because the methods take a parameter. Singletons do not take parameters since there is only one per class. You can't tell that <font face="Courier New">DateFormat</font> is a factory from the code example, but this is one of the most common ones, so you should remember it.<br><br><b>A,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the interface used for?<br><br>Reference: Chapter 10: Object composition principles<br><br>Objective: Design and create objects using a factory and use factories from the API. (Objective 3.7)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4;6" isAttemped="false" userans="" chapter="D" QNo="28" id="D 28">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_2801q.jpg]]></image><text order="3"><![CDATA[Which, inserted at <font face="Courier New">// insert code here</font>, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">static void basket(List&#60;? super Apple&#62; list)</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{list.add(new Object()); }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">static void basket(List&#60;? super Apple&#62; list)</font><br><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{list.add(new Apple()); }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">static void basket(List&#60;Apple&#62; list) {list.add(new Object()); }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">static void basket(List&#60;Apple&#62; list) {list.add(new Apple()); }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">static void basket(List&#60;?&#62; list) {list.add(new Apple()); }</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">static void basket(List&#60;?&#62; list) {list.size(); }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, D, </b>and <b>F </b>are correct; they use generics rules and syntax correctly.<br><br><b>A,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A </b>and <b>C </b>are incorrect because a supertype object (in this case of type <font face="Courier New">Object</font>) can't be inserted into a <font face="Courier New">List</font> of <font face="Courier New">Apple</font>s. <b>E </b>is incorrect because the <font face="Courier New">add()</font> method isn't compatible with the <font face="Courier New">?</font> syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the main intention of generic collections.<br><br>Reference: Chapter 11: Generic types<br><br>Objective: Create a generic class. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;6" isAttemped="false" userans="" chapter="D" QNo="29" id="D 29">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_2901q.jpg]]></image><text order="3"><![CDATA[Which, inserted at <font face="Courier New">// insert code here</font>, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">class Pie&#60;T extends Food&#62; {</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">class Pie&#60;T extends Fruit&#62; {</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">class Pie&#60;T extends Apple&#62; {</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">class Pie&#60;T extends Pie&#62; {</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">class Pie&#60;T super Apple&#62; {</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">class Pie&#60;T&#62; {</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, </b>and <b>F </b>are correct generic class declarations, given the types already declared.<br><br><b>C,</b> <b>D,</b> and <b>E</b> are incorrect. <b>C </b>and <b>D </b>are incorrect because <font face="Courier New">Fruit</font> is not "in bounds" as a type of <font face="Courier New">Apple</font> or <font face="Courier New">Pie</font> when you try to instantiate a new <font face="Courier New">Pie</font>. <b>E </b>is incorrect syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[Study the inheritance trees.<br><br>Reference: Chapter 11: Generic types<br><br>Objective: Create a generic class. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="6" isAttemped="false" userans="" chapter="D" QNo="30" id="D 30">
			<qst><text order="1"><![CDATA[Given that <font face="Courier New">String</font> implements <font face="Courier New">java.lang.CharSequence</font>, and:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3001q.jpg]]></image><text order="3"><![CDATA[Which declarations could be inserted at <font face="Courier New">// INSERT DECLARATION HERE</font> so that the program will compile and run? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam04_3001c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam04_3002c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam04_3003c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam04_3004c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam04_3005c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam04_3006c.jpg]]></image></option>
 				<option id="7"><image order="1"><![CDATA[assets/questimages/Exam04_3007c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect. <b>A</b> is close, but it's incorrect because the return value is too vague. The last line of the main method expects the return value to be <font face="Courier New">Collection&#60;String&#62;</font>, not <font face="Courier New">Collection&#60;? extends CharSequence&#62;</font>. <b>B</b> is incorrect because <font face="Courier New">longWords</font> has been declared as a <font face="Courier New">Collection&#60;E&#62;</font>, and that can't be implicitly converted to a <font face="Courier New">List&#60;E&#62;</font> to match the declared return value. (Even though we know that <font face="Courier New">longWords</font> is really an <font face="Courier New">ArrayList&#60;E&#62;</font>, the compiler only knows what it's been declared as.) <b>C,</b> <b>D,</b> and <b>E</b> are incorrect because they do not declare a type variable <font face="Courier New">E</font> (there's no <font face="Courier New">&#60;&#62;</font> before the return value), so the <font face="Courier New">getLongWords()</font> method body will not compile. <b>G</b> is incorrect because <font face="Courier New">E super</font> <font face="Courier New">CharSequence</font> makes no sense&#8212;<font face="Courier New">super</font> could be used in conjunction with a wildcard but not a type variable like <font face="Courier New">E</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[This is a hard one&#8212;probably harder than what you'll see on the real exam. You have to remember <i>lots</i> of generics rules to solve this one.<br><br>Reference: Chapter 11: Generic types<br><br>Objective: Create a generic class. (Objective 4.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3" isAttemped="false" userans="" chapter="D" QNo="31" id="D 31">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3101q.jpg]]></image><text order="3"><![CDATA[Which, inserted at <font face="Courier New">//insert code here</font>, will compile? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">List&#60;Weather&#62; l1 = new ArrayList&#60;&#62;();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">List&#60;Weather&#62; l2 = new ArrayList&#60;Rain&#62;();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">List&#60;Weather&#62; l3 = new ArrayList&#60;Weather&#62;();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">List&#60;Weather&#62; l4 = new List&#60;&#62;();</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">List&#60;Weather&#62; l5 = new List&#60;Rain&#62;();</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">List&#60;Weather&#62; l6 = new List&#60;Weather&#62;();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>C</b> are correct. In Java 7, <font face="Courier New">new</font> <font face="Courier New">ArrayList&#60;&#62;</font> means a new <font face="Courier New">ArrayList</font> of the type mentioned to the left of the assignment operator.<br><br><b>B,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect. <b>B</b> is incorrect because Java doesn't allow assigning a more specific generic argument in a <font face="Courier New">List</font>. <b>D,</b> <b>E,</b> and <b>F</b> are incorrect because <font face="Courier New">List</font> is not a concrete class and therefore cannot be instantiated.]]></text></feedbacks><hint><text order="1"><![CDATA[What does <font face="Courier New">&#60;&#62;</font> infer?<br><br>Reference: Chapter 11: Generic methods<br><br>Objective: Use the diamond syntax to create a collection. (Objective 4.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5;9" isAttemped="false" userans="" chapter="D" QNo="32" id="D 32">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3201q.jpg]]></image><text order="3"><![CDATA[Which of the following statements are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">before()</font> method will print <font face="Courier New">"1 2 "</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">before()</font> method will print <font face="Courier New">"1 2 3 "</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">before()</font> method will print three numbers, but the order cannot be reliably determined]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">before()</font> method will not compile]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">before()</font> method will throw an exception at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The <font face="Courier New">after()</font> method will print <font face="Courier New">"1 2 "</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. The <font face="Courier New">after()</font> method will print <font face="Courier New">"1 2 3 "</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. The <font face="Courier New">after()</font> method will print three numbers, but the order cannot be reliably determined]]></text></option>
 				<option id="9"><text order="1"><![CDATA[I. The <font face="Courier New">after()</font> method will not compile]]></text></option>
 				<option id="10"><text order="1"><![CDATA[J. The <font face="Courier New">after()</font> method will throw an exception at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E </b>and <b>I </b>are correct. For both methods, the problem is trying to put both <font face="Courier New">String</font>s and <font face="Courier New">int</font>s into the same <font face="Courier New">TreeSet</font>. For <font face="Courier New">before()</font>, with no generics, the compiler has no way of knowing what type is appropriate for this <font face="Courier New">TreeSet</font>, so it allows everything to compile. At runtime, however, the <font face="Courier New">TreeSet</font> will try to sort the elements as they're added, and when it tries to compare an <font face="Courier New">Integer</font> with a <font face="Courier New">String</font>, it will throw a <font face="Courier New">ClassCastException</font> before printing anything. For the <font face="Courier New">after()</font> method, with generics the compiler knows that <font face="Courier New">set</font> is a <font face="Courier New">Set</font> of <font face="Courier New">String</font>s, so it will give a compile error the moment you try to add an <font face="Courier New">Integer</font>. Note that although the <font face="Courier New">before()</font> method does not use generics, it does (perhaps accidentally) use autoboxing. This may be easy to overlook if you're thinking of code as using either JDK 1.4 or 5.0 features. Code may use some new features and some old features mixed together.<br><br><b>A, B, C, D, F, G, H, </b>and <b>J </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What's getting added to the <font face="Courier New">TreeSet</font>?<br><br>Reference: Chapter 11: Generic types<br><br>Objective: Analyze the interoperability of collections that use raw and generic types. (Objective 4.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="7" isAttemped="false" userans="" chapter="D" QNo="33" id="D 33">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3301q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">2 1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">3 1</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">4 1</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">2 3</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">3 3</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">4 3</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>G</b> is correct. Two rules apply to the first invocation of <font face="Courier New">doX()</font>. You can't widen and then box in one step, and var-args are always chosen last. Therefore, you can't widen <font face="Courier New">short</font>s to either <font face="Courier New">int</font>s or <font face="Courier New">long</font>s and then box them to <font face="Courier New">Integer</font>s or <font face="Courier New">Long</font>s, but you can box <font face="Courier New">short</font>s to <font face="Courier New">Short</font>s and then widen them to <font face="Courier New">Number</font>s, and this takes priority over using a var-args method. The second invocation uses a simple box from <font face="Courier New">int</font> to <font face="Courier New">Integer</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E, F</b> and <b>H</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Think about the kinds of conversions necessary and which kinds can be combined in a single situation.<br><br>Reference: Chapter 11: Method matching<br><br>Objective: Use wrapper classes and autoboxing. (Objective 4.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;4;5" isAttemped="false" userans="" chapter="D" QNo="34" id="D 34">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3401q.jpg]]></image><text order="3"><![CDATA[Which will compile using Java 5 (or later), but will NOT compile using Java 1.4? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Line 4]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Line 5]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Line 6]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Line 7]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Line 8]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Line 9]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>D,</b> and <b>E</b> are correct. Because of the methods' return types, these method calls require autoboxing to compile.<br><br><b>B,</b> <b>C,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Autoboxing was added in Java 5.<br><br>Reference: Chapter 11. Method matching<br><br>Objective: Use wrapper classes and autoboxing. (Objective 4.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="35" id="D 35">
			<qst><text order="1"><![CDATA[Which of the following collection classes is best suited to implement a stack and does not have the overhead of synchronized methods?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.util.TreeMap</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.util.TreeSet</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.util.LinkedList</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.util.Vector</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">java.util.LinkedHashMap</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct. <font face="Courier New">LinkedList</font> allows duplicate entries (which a stack might contain) and has methods appropriate for pushing or popping the top element in the stack (<font face="Courier New">addFirst()</font> and <font face="Courier New">getFirst()</font>).<br><br><b>A, B, D, </b>and <b>E </b>are incorrect based on the preceding statement.]]></text></feedbacks><hint><text order="1"><![CDATA[What defines a list, a set, or a map?<br><br>Reference: Chapter 11: Collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="36" id="D 36">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">meter yard</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">chain yard</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">chain meter</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">meter meter</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct. The <font face="Courier New">asList()</font> method copies an array to a <font face="Courier New">List</font>. Subsequent changes (not additions) to either the <font face="Courier New">List</font> or the <font face="Courier New">array</font> will be reflected in the other.<br><br><b>A, B, D, E, </b>and <b>F </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Why would <font face="Courier New">asList()</font> return a fixed-size list?<br><br>Reference: Chapter 11: Using collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="37" id="D 37">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">[4, 6, 8]</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">[8, 6, 4]</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">[2, 4, 6, 8]</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">[2, 8, 6, 4]</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. The <font face="Courier New">tailSet</font> method returns a <font face="Courier New">Set</font> backed by the <font face="Courier New">TreeSet</font> stuff. The boolean argument means "inclusive," and of course <font face="Courier New">TreeSet</font>s are sorted.<br><br><b>A, B, C, E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does the addition of the boolean argument mean?<br><br>Reference: Chapter 11: Backed collections<br><br>Objective: Create and use a List, a Set, and a Deque. (Objective 4.5)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="38" id="D 38">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3801q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">1 false</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">3 true</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">3 false</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">4 true</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">4 false</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">5 true</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">5 false</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. Compilation fails]]></text></option>
 				<option id="9"><text order="1"><![CDATA[I. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Autoboxing takes care of turning the <font face="Courier New">int</font> keys into Integers. When a <font face="Courier New">put()</font> is called using an existing key, the old value associated with that key is replaced with the new value. (Notice the use of the Java 7 diamond operator.)<br><br><b>A, B, C, D, F, G, H,</b> and <b>I </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What kind of duplicates do Maps allow?<br><br>Reference: Chapter 11: Using Maps<br><br>Objective: Create and use a Map (Objective 4.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="39" id="D 39">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_3901q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">2</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">3</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">4</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">5</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Unlike <font face="Courier New">Treemap</font>s, <font face="Courier New">LinkedHashMap</font>s do NOT require their keys to be sortable, and since <font face="Courier New">MyTrees</font> doesn't override equals, none of the keys are equal.<br><br><b>A, B, C,</b> <b>E, </b>and<b> F</b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What are <font face="Courier New">LinkedHashMap</font>'s characteristics?<br><br>Reference: Chapter 11: Using Maps<br><br>Objective: Create and use a Map. (Objective 4.6)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="40" id="D 40">
			<qst><text order="1"><![CDATA[Given<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">abby niki tabby</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">tabby niki abby</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The output is not predictable]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">Arrays.sort</font> method can sort only arrays of types that implement <font face="Courier New">Comparable</font>, which class <font face="Courier New">Kittens</font> does not.<br><br><b>A, B, C, </b>and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Are things automatically sortable?<br><br>Reference: Chapter 11: Comparable<br><br>Objective: Use <font face="Courier New">java.util.Comparator</font> and <font face="Courier New">java.util.Comparable</font>. (Objective 4.7)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5" isAttemped="false" userans="" chapter="D" QNo="41" id="D 41">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4101q.jpg]]></image><text order="3"><![CDATA[and the output:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam04_4102q.jpg]]></image><text order="5"><![CDATA[Which, inserted at <font face="Courier New">// insert code here</font>, will produce the preceding output? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam04_4101c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam04_4102c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam04_4103c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam04_4104c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam04_4105c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. Natural ordering would produce output in reverse sequence to that listed. The <font face="Courier New">Collections.reverseOrder()</font> method returns a <font face="Courier New">Comparator</font>, not a <font face="Courier New">Comparable</font>, to re-sort a <font face="Courier New">Collection</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is the output listed in natural order?<br><br>Reference: Chapter 11: Sorting collections<br><br>Objective: Use <font face="Courier New">java.util.Comparator</font> and <font face="Courier New">java.util.Comparable</font>. (Objective 4.7)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="7" isAttemped="false" userans="" chapter="D" QNo="42" id="D 42">
			<qst><text order="1"><![CDATA[Given a properly prepared <font face="Courier New">String</font> array containing five elements, which range of results could a proper invocation of <font face="Courier New">Arrays.binarySearch()</font> produce?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">0</font> through <font face="Courier New">4</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">0</font> through <font face="Courier New">5</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">-1</font> through <font face="Courier New">4</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">-1</font> through <font face="Courier New">5</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">-5</font> through <font face="Courier New">4</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">-5</font> through <font face="Courier New">5</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">-6</font> through <font face="Courier New">4</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. <font face="Courier New">-6</font> through <font face="Courier New">5</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>G</b> is correct. If a match is found, <font face="Courier New">binarySearch() </font>will return the index of the element that was matched. If no match is found, <font face="Courier New">binarySearch()</font> will return a negative number that, if inverted and then decremented, gives you the insertion point (array index) at which the value searched on should be inserted into the array to maintain a proper sort.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>H</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does <font face="Courier New">binarySearch()</font> return when it can't find a match?<br><br>Reference: Chapter 11 Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;7" isAttemped="false" userans="" chapter="D" QNo="43" id="D 43">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4301q.jpg]]></image><text order="3"><![CDATA[What <font face="Courier New">java.util.Arrays</font> and/or <font face="Courier New">java.util.Collections</font> methods could you use to convert <font face="Courier New">sa</font> to a <font face="Courier New">List</font> and then use to search the <font face="Courier New">List</font> to find the index of the element whose value is <font face="Courier New">"foo"</font>? (Choose from one to three methods.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">sort()</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">asList()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">toList()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">search()</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">sortList()</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">contains()</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">binarySearch()</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> and <b>G</b> are required. The <font face="Courier New">asList()</font> method converts an array to a <font face="Courier New">List</font>. You can find the index of an element in a <font face="Courier New">List</font> with the <font face="Courier New">binarySearch()</font> method, but before you do that you must sort the list using <font face="Courier New">sort()</font>.<br><br><b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect. <b>C,</b> <b>D,</b> and <b>E</b> are incorrect because these methods are not defined in the <font face="Courier New">Arrays</font> or <font face="Courier New">Collections</font> classes. <b>F</b> is incorrect because <font face="Courier New">contains()</font> returns a boolean, not an index.]]></text></feedbacks><hint><text order="1"><![CDATA[What is required before you can search?<br><br>Reference: Chapter 11 Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="44" id="D 44">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">[17, 42, 5, 812]</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">[5, 17, 42, 812]</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">[5, 42, 17, 812]</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. The elements will be sorted in numerical order. Autoboxing handles converting <font face="Courier New">5</font> and <font face="Courier New">812</font> into <font face="Courier New">Integer</font> objects. The <font face="Courier New">parseInt()</font> method throws a <font face="Courier New">NumberFormatException</font>, but since it's a runtime exception it doesn't need to be handled to compile and run. Finally, a <font face="Courier New">static</font> <font face="Courier New">import</font> is used to allow the shorthand invocation of the <font face="Courier New">sort()</font> method.<br><br><b>A, C, D, </b>and<b> E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What is possible with boxing and what is true about runtime exceptions?<br><br>Reference: Chapter 11 Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="45" id="D 45">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">4</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">16</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">23</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">42</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">100</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code does not compile]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An error is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D </b>is correct. The <font face="Courier New">100</font> is just the initial capacity of the queue&#8212;it's not a number that's in the queue. Normally, a <font face="Courier New">PriorityQueue</font> would sort in natural (increasing) order and <font face="Courier New">poll()</font> would remove the first (lowest) number, but the <font face="Courier New">Comparator cmp</font> effectively reverses the natural order; so the largest number (<font face="Courier New">42</font>) is removed and printed.<br><br><b>A, B, C, E, F, </b>and <b>G </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does the <font face="Courier New">Comparator</font> do in this case?<br><br>Reference: Chapter 11 Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="6" isAttemped="false" userans="" chapter="D" QNo="46" id="D 46">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4601q.jpg]]></image><text order="3"><![CDATA[Which occur at least once when the code is compiled and run? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 11]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 4.0 Generics and Collections]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Adding Hans</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Adding Lotte</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Adding Jane</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Total: 3</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Total: 5</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code does not compile]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>F</b> is correct. The problem here is in <font face="Courier New">Group</font>'s <font face="Courier New">add()</font> method&#8212;it should have been <font face="Courier New">add(Person)</font> because the class extends <font face="Courier New">HashSet&#60;Person&#62;</font>; so this doesn't compile. Pop Quiz: What would happen if you fixed this code, changing <font face="Courier New">add(Object)</font> to <font face="Courier New">add(Person)</font>? Try running the code to see if the results match what you thought.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Double-check the class declaration!<br><br>Reference: Chapter 11: Sorting<br><br>Objective: Sort and search arrays and lists. (Objective 4.8)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2" isAttemped="false" userans="" chapter="D" QNo="47" id="D 47">
			<qst><text order="1"><![CDATA[Which about the three <font face="Courier New">java.lang</font> classes&#8212;<font face="Courier New">String</font>, <font face="Courier New">StringBuilder</font>, and <font face="Courier New">StringBuffer</font>&#8212;are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. All three classes have a <font face="Courier New">length()</font> method.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Objects of type <font face="Courier New">StringBuffer</font> are thread-safe.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. All three classes have overloaded <font face="Courier New">append()</font> methods.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">+</font> is an overloaded operator for all three classes.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. According to the API, <font face="Courier New">StringBuffer</font> will be faster than <font face="Courier New">StringBuilder</font> under most implementations.]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The value of an instance of any of these three types can be modified through various methods in the API.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> and <b>B</b> are correct.<br><br><b>C, D, E,</b> and <b>F</b> are incorrect. <b>C</b> is incorrect because <font face="Courier New">String</font> does not have an "<font face="Courier New">append</font>" method. <b>D</b> is incorrect because only <font face="Courier New">String</font> objects can be operated on using the overloaded + operator. For <b>E,</b> the reverse is true; <font face="Courier New">StringBuilder</font> is typically faster because it's not thread-safe. <b>F</b> is incorrect because <font face="Courier New">String</font> objects are immutable. A <font face="Courier New">String</font> reference can be altered to refer to a different <font face="Courier New">String</font> object, but the objects themselves are immutable.]]></text></feedbacks><hint><text order="1"><![CDATA[The key points are which types are "thread-safe" and which types have mutable instances.<br><br>Reference: Chapter 8: <font face="Courier New">String</font>s and <font face="Courier New">StringBuilder</font>s<br><br>Objective: Search, parse, and build strings (including <font face="Courier New">Scanner</font>, <font face="Courier New">StringTokenizer</font>, <font face="Courier New">StringBuilder</font>, <font face="Courier New">String</font>, and <font face="Courier New">Formatter</font>). (Objective 5.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="D" QNo="48" id="D 48">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_4801q.jpg]]></image><text order="3"><![CDATA[and the command line:<br>]]></text><image order="4"><![CDATA[assets/questimages/Exam04_4802q.jpg]]></image><text order="5"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">44 w 93 1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">012s 44 w 833 1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">012s 44 w 93 1</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">2s 4 6w 3 93 1</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">01 12 2s 3  44 5  6w 7  83 93 10  111</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>is correct. The <font face="Courier New">\d </font>is looking for digits, the <font face="Courier New">\s</font> is looking for whitespace, and the <font face="Courier New">\w</font> is looking for any "word" character. The <font face="Courier New">start()</font> method returns the starting position of a match, and the <font face="Courier New">group()</font> method returns the group that was matched. In this case, two groups match: "<font face="Courier New">4 w</font>" and "<font face="Courier New">3 1</font>".<br><br><b>B, C, D, E, </b>and <b>F </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember your metacharacters, and remember what <font face="Courier New">start()</font> and <font face="Courier New">group()</font> return.<br><br>Reference: Chapter 8: Regular expressions<br><br>Objective: Search, parse, and replace strings by using regular expressions, using expression patterns for matching limited to <font face="Courier New">.</font> (dot), <font face="Courier New">*</font> (star), <font face="Courier New">+</font> (plus), <font face="Courier New">?</font>, <font face="Courier New">\d</font>, <font face="Courier New">\D</font>, <font face="Courier New">\s</font>, <font face="Courier New">\S</font>, <font face="Courier New">\w</font>, <font face="Courier New">\W</font>, <font face="Courier New">\b</font>, <font face="Courier New">\B</font>, <font face="Courier New">[]</font>, and <font face="Courier New">()</font>. (Objective 5.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="D" QNo="49" id="D 49">
			<qst><text order="1"><![CDATA[Which are true about format string syntax? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 5.0 String Processing]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Parameter <font face="Courier New">%b</font> formats bytes]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Parameter <font face="Courier New">%c</font> formats chars]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Parameter <font face="Courier New">%d</font> formats doubles]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Parameter <font face="Courier New">%f</font> formats floats]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Parameter <font face="Courier New">%i</font> formats integer types]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>and <b>D </b>are correct.<br><br><b>A </b>is incorrect because <font face="Courier New">%b</font> formats booleans. <b>C </b>is incorrect because <font face="Courier New">%d</font> formats decimal integers. <b>E </b>is incorrect because <font face="Courier New">%i</font> isn't defined.]]></text></feedbacks><hint><text order="1"><![CDATA[You must remember these formatting characters.<br><br>Reference: Chapter 8: Formatting<br><br>Objective: Formatting Strings (Objective 5.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="50" id="D 50">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5001q.jpg]]></image><text order="3"><![CDATA[And given that <font face="Courier New">TestFile.txt</font> does not exist, what is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">done</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">got io error</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">got io error done</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An uncaught exception is thrown]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. Because <font face="Courier New">go()</font> declares that it throws a checked exception, it doesn't matter that it also handles it. Any method invoking <font face="Courier New">go()</font> must handle or declare the exception that <font face="Courier New">go()</font> might throw.<br><br><b>A, B, C,</b> and <b>E</b> are incorrect based on the above. If <font face="Courier New">go()</font> didn't declare that it throws a checked exception, <b>C</b> would have been correct.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the "handle or declare" rules.<br><br>Reference: Chapter 6: Exceptions<br><br>Objective: Use <font face="Courier New">throw</font> and <font face="Courier New">throws</font> statements. (Objective 6.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;6" isAttemped="false" userans="" chapter="D" QNo="51" id="D 51">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5101q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation succeeds.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation will succeed when line 7 is changed to<br><font face="Courier New">&#160;&#160;} catch(Rain e) {</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation will succeed when line 7 is changed to<br><font face="Courier New">&#160;&#160;} catch(Thunderstorm e) {</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation will succeed when line 7 is changed to<br><font face="Courier New">&#160;&#160;} catch(Rain e | Thunderstorm e) {</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation will succeed when line 7 is changed to<br><font face="Courier New">&#160;&#160;} catch(Rain e1 | Thunderstorm e2) {</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation will succeed when line 7 is changed to<br><font face="Courier New">&#160;&#160;} catch(Exception e) {</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>F</b> are correct. The multi-catch block may not contain exception types that are in the same hierarchy. Since <font face="Courier New">Rain</font> is a superclass of <font face="Courier New">Thunderstorm</font>, having <font face="Courier New">Thunderstorm</font> is not allowed (and is redundant). Catching the superclass <font face="Courier New">Rain</font> or its superclass <font face="Courier New">Exception</font> has the same effect without the need for the multi-catch.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> and <b>C</b> are incorrect because of the above. <b>D</b> and <b>E</b> are incorrect both because of the subclass/superclass relationship and because of incorrect syntax.]]></text></feedbacks><hint><text order="1"><![CDATA[What types of exceptions can be caught together?<br><br>Reference: Chapter 7: Exceptions<br><br>Objective: Develop code that handles multiple exception types in a single <font face="Courier New">catch</font> block. (Objective 6.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4;5" isAttemped="false" userans="" chapter="D" QNo="52" id="D 52">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5201q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The text <font face="Courier New">"Bad"</font> is printed]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The text <font face="Courier New">"Good" </font>is printed]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The exception <font face="Courier New">"bad exception"</font> is thrown as the top-level exception]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The exception <font face="Courier New">"try exception"</font> is thrown as the top-level exception]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The exception <font face="Courier New">"bad exception"</font> is thrown as a suppressed exception]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The exception <font face="Courier New">"try exception"</font> is thrown as a suppressed exception]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are correct. Both resources are automatically closed even if one fails. The exception thrown in the <font face="Courier New">try</font> block is considered the main/top-level exception, and any exceptions thrown during resource management are added to it as suppressed exceptions.<br><br><b>C, F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[If one exception is thrown, does the next one get to execute?<br><br>Reference: Chapter 7: Exceptions<br><br>Objective: Develop code that uses try-with-resources statements (including using classes that implement the <font face="Courier New">AutoCloseable</font> interface). (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="D" QNo="53" id="D 53">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5301q.jpg]]></image><text order="3"><![CDATA[What is the result? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. try]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. catch]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. finally]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. An <font face="Courier New">ArrayIndexOutOfBoundsException</font> is thrown]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. A <font face="Courier New">NullPointerException</font> is thrown]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>D</b> are correct. Exception <font face="Courier New">"try"</font> is, in fact, thrown. Then Automatic Resource Management calls <font face="Courier New">close()</font> on a triggering exception <font face="Courier New">"catch"</font>. The finally block throws exception <font face="Courier New">"finally"</font> causing Java to forget about the other two exceptions. If the finally block were commented out, the code would print <font face="Courier New">"try"</font> and <font face="Courier New">"java.lang.Exception: catch"</font>. For the <font face="Courier New">try</font> block, suppressed exceptions are, in fact, stored.<br><br><b>A, C, E,</b> and <b>F</b> are incorrect because of the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which exception is thrown first?<br><br>Reference: Chapter 7: Exceptions<br><br>Objective: Autoclose resources with a try-with-resources statement. (Objective 6.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="54" id="D 54">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5401q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 6]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">threw ce</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. No output is produced]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. An uncaught <font face="Courier New">ArithmeticException</font> is thrown]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due only to an error on line A]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due only to an error on line D]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due to error(s) on lines A and/or B and/or C]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. First off, watch out for misleading code like <font face="Courier New">"0/7"</font>! All of the code is legal and no exceptions or throwables are thrown.<br><br><b>A, C, D, E,</b> and <b>F</b> are incorrect based on the above. If the code had been <font face="Courier New">"7/0"</font> answer <b>A</b> would have been correct; the <font face="Courier New">ArithmeticException</font> (thrown at runtime when attempting to divide by 0), would have been caught.]]></text></feedbacks><hint><text order="1"><![CDATA[How does class <font face="Courier New">Exception</font> relate to class <font face="Courier New">Throwable</font>?<br><br>Reference: Chapter 6: Exceptions<br><br>Objective: Create custom exceptions. (Objective 6.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="55" id="D 55">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5501q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">bar</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">done</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">foo done</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">bar foo done</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">bar()</font> method returns <font face="Courier New">void</font>. It is a perfectly acceptable method, but because it returns <font face="Courier New">void</font> it cannot be used in an <font face="Courier New">assert</font> statement. Thus, line 13 will not compile.<br><br><b>A, B, C, D, </b>and<b> F</b> are incorrect based on the program logic above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember the basic assertion rules.<br><br>Reference: Chapter 7: Using assertions<br><br>Objective: Test invariants by using assertions. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="D" QNo="56" id="D 56">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 7]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 6.0 Exceptions and Assertions]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. In an <font face="Courier New">assert</font> statement, the expression after the <font face="Courier New">:</font> (colon) can be any Java expression.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. If a <font face="Courier New">switch</font> block has no default, adding an <font face="Courier New">assert</font> default is considered appropriate.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. In an <font face="Courier New">assert</font> statement, if the expression after the : (colon) does not have a value, the <font face="Courier New">assert</font>'s error message will be empty.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. It is appropriate to handle assertion failures using a catch clause.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. Adding an <font face="Courier New">assert</font> statement to a <font face="Courier New">switch</font> statement that previously had no default case is considered an excellent use of the <font face="Courier New">assert</font> mechanism.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because only Java expressions that return a value can be used. For instance, a method that returns <font face="Courier New">void</font> is illegal. <b>C</b> is incorrect because the expression after the colon must have a value. <b>D</b> is incorrect because assertions throw errors (not exceptions), and assertion errors do cause program termination and should not be handled.]]></text></feedbacks><hint><text order="1"><![CDATA[What must <font face="Courier New">assert</font> statements return?<br><br>Reference: Chapter 7: Using assertions<br><br>Objective: Test invariants by using assertions. (Objective 6.5)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4;6" isAttemped="false" userans="" chapter="D" QNo="57" id="D 57">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_5701q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation succeeds]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation fails due to a single error in the code]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due to multiple errors in the code]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. By default, the <font face="Courier New">readLine()</font> method echoes the user's keystrokes]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. By default, the <font face="Courier New">readPassword()</font> method echoes the user's keystrokes]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. All of the <font face="Courier New">Console</font> class's methods that write to the console's output stream allow you to specify the format of the output stream]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C,</b> <b>D,</b> and <b>F</b> are correct. The <font face="Courier New">System</font> class method is <font face="Courier New">console()</font>, not <font face="Courier New">getConsole()</font>, and the <font face="Courier New">readline()</font> method returns a <font face="Courier New">String</font>, not a <font face="Courier New">char[]</font>.<br><br><b>A,</b> <b>B,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Why does <font face="Courier New">readPassword()</font> return something unexpected?<br><br>Reference: Chapter 9: <font face="Courier New">Console</font> class<br><br>Objective: Read and write data from the console. (Objective 7.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4" isAttemped="false" userans="" chapter="D" QNo="58" id="D 58">
			<qst><text order="1"><![CDATA[Which can be constructed using a <font face="Courier New">String</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.io.File</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.io.FileWriter</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.io.BufferedWriter</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.io.PrintWriter</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">java.io.BufferedReader</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, </b>and <b>D </b>are correct.<br><br><b>C </b>and <b>E </b>are incorrect. These classes don't have constructors that can take a <font face="Courier New">String</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[It might help to consider who wraps whom.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Use streams to read from and write to files by using classes in the <font face="Courier New">java.io</font> package, including <font face="Courier New">BufferedReader</font>, <font face="Courier New">BufferedWriter</font>, <font face="Courier New">File</font>, <font face="Courier New">FileReader</font>, <font face="Courier New">FileWriter</font>, <font face="Courier New">DataInputStream</font>, <font face="Courier New">DataOutputStream</font>, <font face="Courier New">ObjectOutputStream</font>, <font face="Courier New">ObjectInputStream</font>, and <font face="Courier New">PrintWriter</font>. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;3;4" isAttemped="false" userans="" chapter="D" QNo="59" id="D 59">
			<qst><text order="1"><![CDATA[What is true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A <font face="Courier New">java.io.File</font> object can represent a file on a file system.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. A <font face="Courier New">java.io.File</font> object can represent a directory on a file system.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">File.delete()</font> method can delete directories only if they are empty.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">File.renameTo()</font> method can rename directories even if they are NOT empty.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, B, C, </b>and <b>D </b>are all correct statements concerning the capabilities of the <font face="Courier New">File</font> class.]]></text></feedbacks><hint><text order="1"><![CDATA[This is a pure memory question.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Use streams to read from and write to files by using classes in the <font face="Courier New">java.io</font> package, including <font face="Courier New">BufferedReader</font>, <font face="Courier New">BufferedWriter</font>, <font face="Courier New">File</font>, <font face="Courier New">FileReader</font>, <font face="Courier New">FileWriter</font>, <font face="Courier New">DataInputStream</font>, <font face="Courier New">DataOutputStream</font>, <font face="Courier New">ObjectOutputStream</font>, <font face="Courier New">ObjectInputStream</font>, and <font face="Courier New">PrintWriter</font>. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="60" id="D 60">
			<qst><text order="1"><![CDATA[Given that <font face="Courier New">bw</font> is a reference to a valid <font face="Courier New">BufferedWriter</font>, and the snippet:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6001q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 7.0 Java I/O Fundamentals]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation succeeds.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Compilation fails due only to an error on line 15.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails due only to an error on line 16.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due only to an error on line 17.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due only to an error on line 18.]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Compilation fails due to errors on multiple lines.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. A <font face="Courier New">BufferedWriter</font> can be constructed only by wrapping a <font face="Courier New">Writer</font>. Lines 16, 17, and 18 are correct because <font face="Courier New">BufferedWriter</font>, <font face="Courier New">FileWriter</font>, and <font face="Courier New">PrintWriter</font> all extend <font face="Courier New">Writer</font>. (Note: <font face="Courier New">BufferedWriter</font> is a decorator class. Decorator classes are used extensively in the <font face="Courier New">java.io</font> package to allow you to extend the functionality of other classes.)<br><br><b>A,</b> <b>C,</b> <b>D,</b> <b>E,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember that <font face="Courier New">BufferedWriter</font> "wraps" something.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Use streams to read from and write to files by using classes in the <font face="Courier New">java.io</font> package, including <font face="Courier New">BufferedReader</font>, <font face="Courier New">BufferedWriter</font>, <font face="Courier New">File</font>, <font face="Courier New">FileReader</font>, <font face="Courier New">FileWriter</font>, <font face="Courier New">DataInputStream</font>, <font face="Courier New">DataOutputStream</font>, <font face="Courier New">ObjectOutputStream</font>, <font face="Courier New">ObjectInputStream</font>, and <font face="Courier New">PrintWriter</font>. (Objective 7.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="4" isAttemped="false" userans="" chapter="D" QNo="61" id="D 61">
			<qst><text order="1"><![CDATA[How would you write this using Java 7 NIO APIs?<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6101q.jpg]]></image></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><image order="1"><![CDATA[assets/questimages/Exam04_6101c.jpg]]></image></option>
 				<option id="2"><image order="1"><![CDATA[assets/questimages/Exam04_6102c.jpg]]></image></option>
 				<option id="3"><image order="1"><![CDATA[assets/questimages/Exam04_6103c.jpg]]></image></option>
 				<option id="4"><image order="1"><![CDATA[assets/questimages/Exam04_6104c.jpg]]></image></option>
 				<option id="5"><image order="1"><![CDATA[assets/questimages/Exam04_6105c.jpg]]></image></option>
 				<option id="6"><image order="1"><![CDATA[assets/questimages/Exam04_6106c.jpg]]></image></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>D</b> is correct. In Java 7, NIO, a <font face="Courier New">Path</font> represents a file or directory. It is created using the <font face="Courier New">Paths.get()</font> factory method rather than a constructor. The <font face="Courier New">Files</font> class contains a number of static methods that operate on <font face="Courier New">Path</font> objects. <font face="Courier New">File</font> is used in the old Java IO libraries.<br><br><b>A, B, C, E</b> and <b>F </b>are incorrect because of the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What class has the utility methods?<br><br>Reference: Chapter 9: Use the Files class<br><br>Objective: Operate on file and directory paths with the Paths class. (Objective 8.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="D" QNo="62" id="D 62">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6201q.jpg]]></image><text order="3"><![CDATA[Which will copy file one, overwriting the existing file two? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Files.copy(one, two);</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Files.copy(one, two, StandardCopyOption.OVERRIDE);</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Files.copy(one, two, StandardCopyOption.REPLACE_EXISTING);</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Files.delete(one);  Files.copy(one, two);</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Files.delete(two);  Files.copy(one, two);</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>E</b> are correct. <b>C</b> is the most common way, where you tell Java that you are intentionally overwriting a file. <b>E</b> also works because it deletes the destination file before copying, so there is nothing to overwrite.<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because it throws a <font face="Courier New">FileAlreadyExistsException</font> due to the destination file existing. <b>B</b> is incorrect because it does not compile. There is no option called <font face="Courier New">OVERRIDE</font>. <b>D</b> is incorrect because it throws a <font face="Courier New">NoSuchFileException</font> due to the source file not existing.]]></text></feedbacks><hint><text order="1"><![CDATA[The default is to throw an exception at the point where overwriting would occur.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Check, delete, copy, or move a file or directory with the <font face="Courier New">Files</font> class. (Objective 8.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;2;4" isAttemped="false" userans="" chapter="D" QNo="63" id="D 63">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6301q.jpg]]></image><text order="3"><![CDATA[Which types are printed out? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Hidden files in <font face="Courier New">d</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Regular files in <font face="Courier New">d</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Regular files in all subdirectories of <font face="Courier New">d</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Immediate subdirectories of <font face="Courier New">d</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. All subdirectories (recursively) in <font face="Courier New">d</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>B,</b> and <b>D</b> are correct. <font face="Courier New">DirectoryStream</font> only returns files or directories directly under the given directory path. It does not recurse through subdirectories. It does look at hidden files by default.<br><br><b>C</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Does <font face="Courier New">FileVisitor</font> or <font face="Courier New">DirectoryStream</font> go through subdirectories?<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Recursively access a directory tree using the <font face="Courier New">DirectoryStream</font> and <font face="Courier New">FileVisitor</font> interfaces. (Objective 8.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="D" QNo="64" id="D 64">
			<qst><text order="1"><![CDATA[Given the following possible steps to take when working with <font face="Courier New">WatchService</font>:<br><br>&#160;&#160;&#160;&#160;&#160;&#8226;&#160;&#160;&#160;I: Create a <font face="Courier New">WatchService</font> on the default <font face="Courier New">FileSystem</font><br>&#160;&#160;&#160;&#160;&#160;&#8226;&#160;&#160;&#160;II: Instantiate the <font face="Courier New">WatchService</font> object by calling "<font face="Courier New">new</font>"<br>&#160;&#160;&#160;&#160;&#160;&#8226;&#160;&#160;&#160;III: On a <font face="Courier New">Path</font>, register the <font face="Courier New">WatchService</font> without the events<br>&#160;&#160;&#160;&#160;&#160;&#8226;&#160;&#160;&#160;IV: On a <font face="Courier New">Path</font>, register the <font face="Courier New">WatchService</font> and which event types you want to subscribe to in one method call<br>&#160;&#160;&#160;&#160;&#160;&#8226;&#160;&#160;&#160;V: Set the event types to subscribe to<br>&#160;&#160;&#160;&#160;&#160;&#8226;&#160;&#160;&#160;VI: Write logic to process events from the <font face="Courier New">WatchService<br></font><br>Which set of steps will create and run a useful <font face="Courier New">WatchService</font>?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 9]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 8.0 Java File I/O (NIO.2)]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. I, IV, VI]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. II, IV, VI]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. I, III, V, VI]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. II, III, V, VI]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. None of the above]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A</b> is correct. You call <font face="Courier New">FileSystems.getDefault().newWatchService();</font> first. Then you register one or more events such as <font face="Courier New">dir.register(watcher, ENTRY_DELETE, ENTRY_MODIFY);</font>. (Note: these constants are in the <font face="Courier New">StandardWatchEventKinds</font> class.) Finally, you start processing events as they come in. II is not correct because you cannot instantiate <font face="Courier New">WatchService</font> directly. III and V are not correct because you have to listen to one or more events at the same time you register the <font face="Courier New">WatchService</font>.<br><br><b>B,</b> <b>C,</b> <b>D,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[<font face="Courier New">WatchService</font> uses a factory.<br><br>Reference: Chapter 9: File I/O<br><br>Objective: Watch a directory for changes with the <font face="Courier New">WatchService</font> interface. (Objective 8.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;5" isAttemped="false" userans="" chapter="D" QNo="65" id="D 65">
			<qst><text order="1"><![CDATA[Assuming you will not be using a <font face="Courier New">DataSource</font> when obtaining a JDBC connection, which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. To load a JDBC 3.0 driver, you must use <font face="Courier New">Class.forName()</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. To load a JDBC 4.0 driver, you must use <font face="Courier New">Class.forName()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. To establish a connection, you must have a JDBC driver]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. To acquire a JDBC driver, you must have a JDBC connection]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. If you're not going to use a <font face="Courier New">DataSource</font> to load a JDBC 3.0 or JDBC 4.0 driver, you must use the <font face="Courier New">java.sql.DriverManager</font> class when connecting]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A, C,</b> and <b>E</b> are correct statements.<br><br><b>B</b> is incorrect; with a JDBC 4.0 driver, <font face="Courier New">forName()</font> is optional. <b>D</b> is just backward; C is the correct sequence.]]></text></feedbacks><hint><text order="1"><![CDATA[Going from JDBC 3.0 to 4.0 what's required and what's optional?<br><br>Reference: Chapter 15: Connections<br><br>Objective: Identify the components required to connect to a database using the <font face="Courier New">DriverManager</font> class (including the JDBC URL) (Objective 9.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="66" id="D 66">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. One row will be inserted into the database.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Two rows will be inserted into the database.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Three rows will be inserted into the database.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. In order to start a new transaction, it is necessary to set the auto-commit to <font face="Courier New">false</font>, not <font face="Courier New">true</font>. This means that, on line 4, a transaction is not being started. (By default, the auto-commit of a <font face="Courier New">Connection</font> object is <font face="Courier New">true</font>.) When line 5 is executed, a new row is inserted into the database, and the transaction is committed. On line 6, however, when you try to create a <font face="Courier New">Savepoint</font> object, a <font face="Courier New">SQLException</font> is thrown, because it is only possible to create <font face="Courier New">Savepoint</font> objects if the auto-commit of the <font face="Courier New">Connection</font> is set to <font face="Courier New">false</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[How do you start a new transaction on a <font face="Courier New">Connection</font> object?<br><br>Reference: Chapter 15: JDBC<br><br>Objective: Use JDBC transactions (including disabling auto-commit mode, committing and rolling back transactions, and setting and rolling back to savepoints). (Objective 9.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="67" id="D 67">
			<qst><text order="1"><![CDATA[Assume that there is a database function called <font face="Courier New">GET_NUMBER_OF_RECORDS</font>, which is currently returning <font face="Courier New">32</font> as <font face="Courier New">result</font>, and given the following code:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6701q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 15]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 9.0 Building Database Applications with JDBC]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Result: 32</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Result: 32 &#8211; Exception!</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Nothing is printed]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. The code executes correctly. However, since the execution does not return a <font face="Courier New">ResultSet</font>, the <font face="Courier New">execute()</font> method, on line 6, returns <font face="Courier New">false</font>. This means that the <font face="Courier New">if</font> instruction, on line 7, is never executed. If the instruction on line 7 were <font face="Courier New">if (!b)</font>, <b>A</b> would be correct.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What does the boolean value, returned by the <font face="Courier New">Statement</font>'s <font face="Courier New">execute</font> method, represent?<br><br>Reference: Chapter 15: JDBC<br><br>Objective: Create and use <font face="Courier New">PreparedStatement</font> and <font face="Courier New">CallableStatement</font> objects. (Objective 9.6)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="D" QNo="68" id="D 68">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6801q.jpg]]></image><text order="3"><![CDATA[Which, inserted independently at line 6, will create and start a new thread? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">new Runnable(MyRunnable).start();</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">new Thread(MyRunnable).run();</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">new Thread(new MyRunnable()).start();</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">new MyRunnable().start();</font>]]></text></option>
				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">new MyRunnable().run();</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct. Because the class implements <font face="Courier New">Runnable</font>, an instance of it has to be passed to the <font face="Courier New">Thread</font> constructor, and then the instance of the <font face="Courier New">Thread</font> has to be started.<br><br><b>A,</b> <b>B,</b> <b>D,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because there is no constructor like this for <font face="Courier New">Runnable</font>. <font face="Courier New">Runnable</font> is an interface, and it is illegal to pass a class or interface name to any constructor. <b>B </b>is incorrect for the same reason: you can't pass a class or interface name to any constructor. <b>D </b>is incorrect because <font face="Courier New">MyRunnable</font> doesn't have a <font face="Courier New">start()</font> method, and the only <font face="Courier New">start()</font> method that can start a thread of execution is the <font face="Courier New">start()</font> method in the <font face="Courier New">Thread</font> class. <b>E </b>is incorrect because it doesn't start a new thread.]]></text></feedbacks><hint><text order="1"><![CDATA[Notice what <font face="Courier New">MyRunnable</font> implements.<br><br>Reference: Chapter 13: Starting a thread<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3" isAttemped="false" userans="" chapter="D" QNo="69" id="D 69">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_6901q.jpg]]></image><text order="3"><![CDATA[Which is a possible result? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Wallace-1 Wallace-2 Gromit-1</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Wallace-1 Gromit-2 Wallace-2 Gromit-1</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Wallace-1 Gromit-1 Gromit-2 Wallace-2</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Gromit-1 Gromit-2</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Gromit-2 Wallace-1 Gromit-1 Wallace-2</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code does not compile]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. An error occurs at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> is correct. Both threads will print two messages each. <font face="Courier New">Wallace-1</font> must be before <font face="Courier New">Wallace-2</font>, and <font face="Courier New">Gromit-1</font> must be before <font face="Courier New">Gromit-2</font>. Other than that, the <font face="Courier New">Wallace</font> and <font face="Courier New">Gromit</font> messages can be intermingled in any order.<br><br><b>A,</b> <b>B,</b> <b>D,</b> <b>E,</b> <b>F,</b> and <b>G</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[At what level is synchronization occurring?<br><br>Reference: Chapter 13: Starting threads<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="2" isAttemped="false" userans="" chapter="D" QNo="70" id="D 70">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7001q.jpg]]></image><text order="3"><![CDATA[What is the result of this code?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Compilation fails.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. An exception occurs at runtime.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Thread one. Thread two.</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The output cannot be determined.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> is correct. When the <font face="Courier New">start()</font> method is attempted a second time on a single <font face="Courier New">Thread</font> object, the method will throw an <font face="Courier New">IllegalThreadStateException</font>. (Although this behavior is specified in the API, some JVMs don't consistently throw an exception in this case.) Even if the thread has finished running, it is still illegal to call <font face="Courier New">start()</font> again.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because compilation will succeed. For the most part, the Java compiler only checks for illegal syntax, rather than class-specific logic. <b>C</b> and <b>D</b> are incorrect because of the logic explained in the preceding paragraph.]]></text></feedbacks><hint><text order="1"><![CDATA[What's true about invoking <font face="Courier New">start()</font> on a given thread?<br><br>Reference: Chapter 13: Starting threads<br><br>Objective: Create and use the <font face="Courier New">Thread</font> class and the <font face="Courier New">Runnable</font> interface. (Objective 10.1)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="3" isAttemped="false" userans="" chapter="D" QNo="71" id="D 71">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7101q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Ren Stimpy</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Stimpy Ren</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Compilation fails.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The output cannot be determined.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception is thrown at runtime.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>is correct. Line 12 attempts to join the two threads, but the <font face="Courier New">join()</font> method throws an <font face="Courier New">InterruptedException</font>, which is not handled in the code.<br><br><b>A, B, D, </b>and <b>E</b> are incorrect based on the above. If <font face="Courier New">join()</font> had been properly handled, <b>A</b> would have been correct.]]></text></feedbacks><hint><text order="1"><![CDATA[You can't be too careful.<br><br>Reference: Chapter 13: Thread states<br><br>Objective: Manage and control thread lifecycle. (Objective 10.2)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="1" isAttemped="false" userans="" chapter="D" QNo="72" id="D 72">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7201q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Ren Ren Ren...  ...Stimpy Stimpy Stimpy</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Stimpy Stimpy Stimpy...  ...Ren Ren Ren</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A random mixture of <font face="Courier New">Ren</font>s and <font face="Courier New">Stimpy</font>s]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The output cannot be determined]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. An exception is thrown at runtime]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>is correct. Because of the <font face="Courier New">join()</font> method, it doesn't matter how slowly the <font face="Courier New">"Ren "</font> thread executes; the <font face="Courier New">"Stimpy "</font> thread will join to the end of <font face="Courier New">"Ren "</font> and run after <font face="Courier New">"Ren "</font> has completed.<br><br><b>B, C, D, E, </b>and <b>F </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Is this a question of speed?<br><br>Reference: Chapter 13: Thread states<br><br>Objective: Manage and control thread lifecycle. (Objective 10.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;5" isAttemped="false" userans="" chapter="D" QNo="73" id="D 73">
			<qst><text order="1"><![CDATA[Which statements are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">notify()</font> method can take a thread argument.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">wait()</font> method causes another thread to stop executing.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">wait()</font> method can take a long argument.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">wait()</font> method can be called from a nonsynchronized context.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">notify()</font> method does not release an object's lock.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C </b>and <b>E </b>are correct. <b>C </b>is correct because the <font face="Courier New">wait()</font> method is overloaded to take one or two timeout arguments. <b>E </b>is correct because a thread that calls <font face="Courier New">notify()</font> does not have to stop running.<br><br><b>A,</b> <b>B,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because no such argument or capability exists. <b>B </b>is incorrect because the <font face="Courier New">wait()</font> method causes the currently executing thread to stop executing. <b>D </b>is incorrect because <font face="Courier New">wait()</font> only makes sense from a synchronized context.]]></text></feedbacks><hint><text order="1"><![CDATA[How do <font face="Courier New">wait()</font> and <font face="Courier New">notify()</font> work with separate threads?<br><br>Reference: Chapter 13: Preventing execution<br><br>Objective: Manage and control thread lifecycle. (Objective 10.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1" isAttemped="false" userans="" chapter="D" QNo="74" id="D 74">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7401q.jpg]]></image><text order="3"><![CDATA[Which letters will appear in the output? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">A</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">B</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">C</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">D</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">E</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">F</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">G</font>]]></text></option>
 				<option id="8"><text order="1"><![CDATA[H. The code does not compile]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A </b>is correct. Since <font face="Courier New">run()</font> is synchronized, a lock has been acquired on the <font face="Courier New">this</font> instance, so none of the method calls would throw an <font face="Courier New">IllegalMonitorStateException</font>. However, the first call to <font face="Courier New">wait()</font> blocks forever. It's waiting for a <font face="Courier New">notify()</font>, but the <font face="Courier New">notify()</font> is never called because it's blocked on the <font face="Courier New">wait()</font>. In order for a <font face="Courier New">notify()</font> to be useful, it must be sent from a separate thread so that it can be called while the first thread is still waiting at the <font face="Courier New">wait()</font> statement.<br><br><b>B, C, D, E, F, G, </b>and <b>H </b>are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[How do threads communicate?<br><br>Reference: Chapter 13: Synchronizing code<br><br>Objective: Synchronize thread access to shared data. (Objective 10.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5;6" isAttemped="false" userans="" chapter="D" QNo="75" id="D 75">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7501q.jpg]]></image><text order="3"><![CDATA[We want to guarantee that the output can be either <font face="Courier New">XXYY</font> or <font face="Courier New">YYXX</font>, but never <font face="Courier New">XYXY</font> or any other combination. Which method definitions could be added to the <font face="Courier New">Letters</font> class to make this guarantee? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">public void run() { write(); }</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">public synchronized void run() { write(); }</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">public static synchronized void run() { write(); }</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">public void run() { synchronized(this) { write(); } }</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">public void run() { synchronized(Letters.class) { write(); } }</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">public void run() { synchronized(System.out) { write(); } }</font>]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">public void run() { synchronized(System.out.class) { write(); } }</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> and <b>F</b> are correct. <b>E</b> and <b>F</b> both cause both threads to lock on the same object, which will prevent the threads from running simultaneously, and guarantee <font face="Courier New">XXYY</font> or <font face="Courier New">YYXX</font>. It's a bit unusual to lock on an object like <font face="Courier New">System.out</font>, but it's perfectly legal, and both threads are locking on the same object.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>G</b> are incorrect. <b>A</b> can't guarantee anything since it has no synchronization. <b>B</b> and <b>D</b> both synchronize on an instance of the <font face="Courier New">Letters</font> class&#8212;but since there are two different instances in the <font face="Courier New">main()</font> method, the two threads do not block each other and may run simultaneously, resulting in output like <font face="Courier New">XYXY</font>. <b>C</b> won't compile because it tries to override <font face="Courier New">run()</font> with a <font face="Courier New">static</font> method and also calls a non-<font face="Courier New">static</font> method from a <font face="Courier New">static</font> method. <b>G</b> won't compile because <font face="Courier New">System.out.class</font> is nonsense. A class literal must start with a class name. <font face="Courier New">System.out</font> is a field, not a class, so <font face="Courier New">System.out.class</font> is not a valid class literal.]]></text></feedbacks><hint><text order="1"><![CDATA[What must be true for blocking to occur?<br><br>Reference: Chapter 13: Object locking<br><br>Objective: Synchronize thread access to shared data. (Objective 10.3)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="76" id="D 76">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7601q.jpg]]></image><text order="3"><![CDATA[What is the result?]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The code will not compile because of an error on line 12 of class <font face="Courier New">Foo</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The code will not compile because of an error on line 7 of class <font face="Courier New">Foo</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The code will not compile because of an error on line 4 of class <font face="Courier New">Test</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The code will not compile because of some other error in class <font face="Courier New">Test</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. An exception occurs at runtime]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The code runs and produces no output]]></text></option>
 				<option id="7"><text order="1"><![CDATA[G. <font face="Courier New">x is 5</font><br><font face="Courier New">&#160;&#160;x is 6</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct because the thread does not own the lock of the object it invokes <font face="Courier New">wait()</font> on. If the method were synchronized, the code would run without exception.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D, F,</b> and <b>G</b> are incorrect. <b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect because the code compiles without errors. <b>F </b>is incorrect based on the above.<b> G</b> is incorrect because the exception is thrown before there is any output.]]></text></feedbacks><hint><text order="1"><![CDATA[What does <font face="Courier New">wait()</font> need?<br><br>Reference: Chapter 13: Object locking<br><br>Objective: Synchronize thread access to shared data. (Objective 10.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;5" isAttemped="false" userans="" chapter="D" QNo="77" id="D 77">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 13]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 10.0 Threads]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. A <font face="Courier New">static</font> method cannot be synchronized.]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. If a class has synchronized code, multiple threads can still access the nonsynchronized code.]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Variables can be protected from concurrent access problems by marking them with the <font face="Courier New">synchronized</font> keyword.]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. When a thread sleeps, it releases its locks.]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. When a thread invokes <font face="Courier New">wait()</font>, it releases its locks.]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>and<b> E</b> are correct. <b>B</b> is correct because multiple threads are allowed to enter nonsynchronized code, even within a class that has some synchronized methods. <b>E</b> is correct because a <font face="Courier New">wait()</font> call causes the thread to give up its locks.<br><br><b>A,</b> <b>C,</b> and <b>D</b> are incorrect. <b>A</b> is incorrect because <font face="Courier New">static</font> methods can be synchronized; they synchronize on the lock on the instance of class <font face="Courier New">java.lang.Class</font> that represents the class type. <b>C</b> is incorrect because only methods&#8212;not variables&#8212;can be marked <font face="Courier New">synchronized</font>. <b>D</b> is incorrect because a sleeping thread still maintains its locks.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember exactly what kinds of things can be synchronized.<br><br>Reference: Chapter 13: Object locking<br><br>Objective: Identify potential threading problems. (Objective 10.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;4" isAttemped="false" userans="" chapter="D" QNo="78" id="D 78">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7801q.jpg]]></image><text order="3"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Class <font face="Courier New">Account</font> is not thread-safe]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. It would be equivalent to use an <font face="Courier New">AtomicInteger</font> in place of the <font face="Courier New">value</font> variable, remove lines 2, 5, 7, 10, and 12, and call methods <font face="Courier New">getAndIncrement</font> and <font face="Courier New">getAndDecrement</font> on the <font face="Courier New">AtomicInteger</font> object on lines 6 and 11, respectively]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. A <font face="Courier New">ReentrantReadWriteLock</font> cannot be used in place of the <font face="Courier New">ReentrantLock</font> on line 2]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. If methods <font face="Courier New">increment()</font> and <font face="Courier New">decrement()</font> were synchronized, lines 2, 5, 7, 10, and 12 would not be necessary]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Class <font face="Courier New">Account</font> would be thread-safe if and only if methods <font face="Courier New">increment()</font> and <font face="Courier New">decrement()</font> were synchronized]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>D</b> are correct.<br><br><b>A,</b> <b>C,</b> and <b>E</b> are incorrect. <b>A</b> and <b>E</b> are incorrect because class <font face="Courier New">Account</font> is thread-safe. <b>C</b> is incorrect because a <font face="Courier New">ReentrantReadWriteLock</font> could be used in place of the <font face="Courier New">ReentrantLock</font> object on line 2. In this case, methods <font face="Courier New">increment()</font> and <font face="Courier New">decrement()</font> would have to lock and unlock on the write lock object of the <font face="Courier New">ReentrantReadWriteLock</font> object.]]></text></feedbacks><hint><text order="1"><![CDATA[Remember exactly what kinds of things can be synchronized<br><br>Reference: Chapter 14: <font face="Courier New">concurrent</font><br><br>Objective: Use <font face="Courier New">Lock</font>, <font face="Courier New">ReadWriteLock</font>, and <font face="Courier New">ReentrantLock</font> classes in the <font face="Courier New">java.util.concurrent.locks</font> package to support lock-free, thread-safe programming on single variables. (Objective 11.2)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;5" isAttemped="false" userans="" chapter="D" QNo="79" id="D 79">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_7901q.jpg]]></image><text order="3"><![CDATA[Which are valid declarations of the <font face="Courier New">Asynchronous</font> class? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. The <font face="Courier New">public</font> class <font face="Courier New">Asynchronous</font> extends <font face="Courier New">Runnable</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. The <font face="Courier New">public</font> class <font face="Courier New">Asynchronous</font> implements <font face="Courier New">Runnable</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. The <font face="Courier New">public</font> class <font face="Courier New">Asynchronous</font> implements <font face="Courier New">Runnable&#60;String&#62;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. The <font face="Courier New">public</font> class <font face="Courier New">Asynchronous</font> extends <font face="Courier New">Callable&#60;String&#62;</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. The <font face="Courier New">public</font> class <font face="Courier New">Asynchronous</font> implements <font face="Courier New">Callable&#60;String&#62;</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. The <font face="Courier New">public</font> class <font face="Courier New">Asynchronous</font> implements <font face="Courier New">Executable&#60;String&#62;</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B</b> and <b>E</b> are correct. Implementations of the <font face="Courier New">ExecutorService</font> interface have versions of method <font face="Courier New">submit</font> that receive objects of classes that implement either <font face="Courier New">Runnable</font> or <font face="Courier New">Callable</font>. If the object sent to the <font face="Courier New">submit</font> method is an instance of <font face="Courier New">Runnable</font>, the <font face="Courier New">submit</font> method will return an instance of <font face="Courier New">Future</font> whose <font face="Courier New">get</font> method will return <font face="Courier New">null</font>. If otherwise, the object is an instance of a class that implements <font face="Courier New">Callable</font>, the <font face="Courier New">submit</font> method will return an instance of <font face="Courier New">Future</font> whose <font face="Courier New">get</font> method will return the same type as the one indicated in the class declaration. For example, in the case of <b>E</b>, the <font face="Courier New">submit</font> method will return a <font face="Courier New">Future</font> object whose <font face="Courier New">get</font> method returns a <font face="Courier New">String</font>. <font face="Courier New">Runnable</font> and <font face="Courier New">Callable</font> are interfaces, and only <font face="Courier New">Callable</font> is generic.<br><br><b>A,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect. <b>A,</b> <b>C,</b> and <b>D</b> are incorrect based on the above. <b>F</b> is incorrect because there is no such interface as <font face="Courier New">Executable</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[Focus on the return types.<br><br>Reference: Chapter 14: <font face="Courier New">concurrent</font><br><br>Objective: Use <font face="Courier New">Executor</font>, <font face="Courier New">ExecutorService</font>, <font face="Courier New">Executors</font>, <font face="Courier New">Callable</font>, and <font face="Courier New">Future</font> to execute tasks using thread pools. (Objective 11.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="3;4" isAttemped="false" userans="" chapter="D" QNo="80" id="D 80">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 14]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 11.0 Concurrency]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Method <font face="Courier New">invoke</font> of class <font face="Courier New">ForkJoinPool</font> accepts as parameters, instances of classes that implement either <font face="Courier New">Runnable</font> or <font face="Courier New">Callable</font>, or instances of classes that are subclasses of <font face="Courier New">ForkJoinTask</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. An algorithm that will subdivide itself into Fork-Join tasks and does not have to return any value can extend <font face="Courier New">RecursiveTask</font> in order to be processed in parallel]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">ForkJoinPool</font> IS-A <font face="Courier New">ExecutorService</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. In the implementation of the <font face="Courier New">compute</font> method of a <font face="Courier New">ForkJoinTask</font>, the <font face="Courier New">fork</font> method should always be called before the <font face="Courier New">join</font> method, or one of the <font face="Courier New">invokeAll</font> methods should be called]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. It is not possible to use a <font face="Courier New">ForkJoinPool</font> to process an instance of the <font face="Courier New">Callable</font> interface]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>C</b> and <b>D</b> are correct.<br><br><b>A,</b> <b>B,</b> and <b>E</b> are incorrect. <b>A</b> is incorrect because method <font face="Courier New">invoke</font> of class <font face="Courier New">ForkJoinPool</font> only accepts as parameters instances of <font face="Courier New">ForkJoinTask</font> (that is, instances of subclasses of <font face="Courier New">RecursiveAction</font> or <font face="Courier New">RecursiveTask</font>, which are also subclasses of <font face="Courier New">ForkJoinTask</font>). <b>B</b> is incorrect because if the algorithm that will subdivide itself does not have to return any value, the class that contains it should extend <font face="Courier New">RecursiveAction</font>, not <font face="Courier New">RecursiveTask</font>. <b>E</b> is incorrect because <font face="Courier New">ForkJoinPool</font> IS-A <font face="Courier New">ExecutorService</font>, which makes it is possible to use a <font face="Courier New">ForkJoinPool</font> to process an instance of <font face="Courier New">Callable</font> via the <font face="Courier New">submit</font> method.]]></text></feedbacks><hint><text order="1"><![CDATA[Sorry, some necessary API facts.<br><br>Reference: Chapter 14: <font face="Courier New">concurrent</font><br><br>Objective: Use the parallel Fork-Join framework. (Objective 11.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="1;3;4;6" isAttemped="false" userans="" chapter="D" QNo="81" id="D 81">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_8101q.jpg]]></image><text order="3"><![CDATA[If each of the following is the only resource bundle on the classpath and contains <font face="Courier New">key=value</font>, which will be used? Assume the default locale is United States English. (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">Flag.java</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">Flag_CA.properties</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">Flag_en.java</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">Flag_en.properties</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. <font face="Courier New">Flag_en_CA.properties</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. <font face="Courier New">Flag_fr_CA.properties</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>A,</b> <b>C,</b> <b>D,</b> and <b>F</b> are correct. <b>A</b> uses the default resource bundle. <b>C</b> and <b>D</b> use the language from the default locale. <b>F</b> matches the locale specifically requested.<br><br><b>B</b> and <b>E</b> are incorrect. <b>B</b> is incorrect because the language code <font face="Courier New">CA</font> does not match <font face="Courier New">fr</font>, and <font face="Courier New">CA</font> isn't a valid language code. <b>E</b> is incorrect because the language code matches the default, but the country code does not.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the difference between a language and a country code?<br><br>Reference: Chapter 8: <font face="Courier New">ResourceBundle</font><br><br>Objective: Call a resource bundle from an application. (Objective 12.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="5" isAttemped="false" userans="" chapter="D" QNo="82" id="D 82">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_8201q.jpg]]></image><text order="3"><![CDATA[Which change(s), when made independently, will change the output to "<font face="Courier New">ride underground</font>"? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. Add <font face="Courier New">train=underground</font> to <font face="Courier New">Train_en.properties</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. Change line 1 to <font face="Courier New">Locale.setDefault(new Locale("en, UK"));</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. Change line 5 to <font face="Courier New">Locale.ENGLISH;</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Change line 5 to <font face="Courier New">new Locale("en, UK"));</font>]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Change line 5 to <font face="Courier New">new Locale("en", "UK"));</font>]]></text></option>
 				<option id="6"><text order="1"><![CDATA[F. Delete file <font face="Courier New">Train_en_US.properties</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct because the constructor for <font face="Courier New">Locale</font> is incorrect. It should be <font face="Courier New">new</font> <font face="Courier New">Locale("en", "US")</font>, rather than <font face="Courier New">new</font> <font face="Courier New">Locale("en, US")</font>. While <font face="Courier New">Locale</font> does give you a choice of one or two strings as the parameters, the first one is the language only. You cannot merge the country into the same parameter. Tricky and hard to spot.<br><br><b>A,</b> <b>B,</b> <b>C,</b> <b>D,</b> and <b>F</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[What is the difference between a language and a country code?<br><br>Reference: Chapter 8: <font face="Courier New">ResourceBundle</font><br><br>Objective: Call a resource bundle from an application. (Objective 12.3)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2;3;4" isAttemped="false" userans="" chapter="D" QNo="83" id="D 83">
			<qst><text order="1"><![CDATA[Which classes can be instantiated using a <font face="Courier New">Locale</font>? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">java.util.Date</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">java.util.Calendar</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. <font face="Courier New">java.text.DateFormat</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. <font face="Courier New">java.text.NumberFormat</font>]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B, C, </b>and <b>D </b>are correct.<br><br><b>A </b>is incorrect. <font face="Courier New">Date</font> instances are not affected by locales or time zones.]]></text></feedbacks><hint><text order="1"><![CDATA[Only one is incorrect.<br><br>Reference: Chapter 8: Dates<br><br>Objective: Format dates, numbers, and currency values for localization with the <font face="Courier New">NumberFormat</font> and <font face="Courier New">DateFormat</font> classes (including number format patterns). (Objective 12.4)]]></text></hint>
		</question>
		<question qtype="Multiple Selection" ans="2" isAttemped="false" userans="" chapter="D" QNo="84" id="D 84">
			<qst><text order="1"><![CDATA[Which are true? (Choose all that apply.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. To convert a <font face="Courier New">java.util.Calendar</font> object to a <font face="Courier New">java.util.Date</font> object, use <font face="Courier New">Calendar.toDate()</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. To convert a <font face="Courier New">java.util.Calendar</font> object to a <font face="Courier New">java.util.Date</font> object, use <font face="Courier New">Calendar.getTime()</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. To convert a <font face="Courier New">java.util.Calendar</font> object to a <font face="Courier New">java.util.Date</font> object, use <font face="Courier New">Calendar.getDate()</font>]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. A <font face="Courier New">java.util.Calendar</font> object IS-A <font face="Courier New">java.util.Date</font> object]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>B </b>is the correct method.<br><br><b>A, C,</b> and <b>D</b> are incorrect. <b>A </b>and <b>C </b>are incorrect because the <font face="Courier New">Calendar</font> class doesn't have these methods. <b>D </b>is incorrect because <font face="Courier New">Calendar</font> does not extend <font face="Courier New">Date</font>.]]></text></feedbacks><hint><text order="1"><![CDATA[This is a method you must remember.<br><br>Reference: Chapter 8: Dates<br><br>Objective: Format dates, numbers, and currency values for localization with the <font face="Courier New">NumberFormat</font> and <font face="Courier New">DateFormat</font> classes (including number format patterns). (Objective 12.4)]]></text></hint>
		</question>
		<question qtype="Multiple Choice" ans="5" isAttemped="false" userans="" chapter="D" QNo="85" id="D 85">
			<qst><text order="1"><![CDATA[Given:<br>]]></text><image order="2"><![CDATA[assets/questimages/Exam04_8501q.jpg]]></image><text order="3"><![CDATA[and given that <font face="Courier New">1123631685981L</font> is the number of milliseconds between Jan. 1, 1970, and sometime on Aug. 9, 2005, what is the result? (Note: The time of day in answer <b>A</b> may vary.)]]></text></qst>
			<header>
				<subhead name="Exam Type"><![CDATA[OCP Exam 2]]></subhead>
				<subhead name="Chapters"><![CDATA[Chapter 8]]></subhead>
				<subhead name="Certification Objectives"><![CDATA[OCP Objective - 12.0 Localization]]></subhead>
			</header>
			<choices>
				<option id="1"><text order="1"><![CDATA[A. <font face="Courier New">8/9/05 5:54 PM</font>]]></text></option>
 				<option id="2"><text order="1"><![CDATA[B. <font face="Courier New">1123631685981L</font>]]></text></option>
 				<option id="3"><text order="1"><![CDATA[C. An exception is thrown at runtime]]></text></option>
 				<option id="4"><text order="1"><![CDATA[D. Compilation fails due to a single error in the code]]></text></option>
 				<option id="5"><text order="1"><![CDATA[E. Compilation fails due to multiple errors in the code]]></text></option>
			</choices>
			<feedbacks><text order="1"><![CDATA[<b>E</b> is correct. The <font face="Courier New">Date</font> class is located in the <font face="Courier New">java.util</font> package, so it needs an import, and <font face="Courier New">DateFormat</font> objects must be created using a <font face="Courier New">static</font> method such as <font face="Courier New">DateFormat.getInstance()</font> or <font face="Courier New">DateFormat.getDateInstance()</font>.<br><br><b>A,</b> <b>B,</b> <b>C,</b> and <b>D</b> are incorrect based on the above.]]></text></feedbacks><hint><text order="1"><![CDATA[Which packages are required, and how are these objects created?<br><br>Reference: Chapter 8: Formatting<br><br>Objective: Format dates, numbers, and currency values for localization with the <font face="Courier New">NumberFormat</font> and <font face="Courier New">DateFormat</font> classes (including number format patterns). (Objective 12.4)]]></text></hint>
		</question>
	</presetExamList>
	</book>
</rootTag>


